{"version":3,"sources":["dg-uswds.scss","_dg-normalize.scss","dg-uswds.css","../../../../node_modules/uswds/dist/scss/core/_variables.scss","../../../../node_modules/uswds/dist/scss/lib/addons/_font-stacks.scss","../../../../node_modules/uswds/dist/scss/core/mixins/_screen-reader.scss","../../../../node_modules/uswds/dist/scss/core/_grid.scss","../../../../node_modules/uswds/dist/scss/lib/grid/_outer-container.scss","_dg-variables.scss","../../../../node_modules/uswds/dist/scss/lib/mixins/_clearfix.scss","../../../../node_modules/uswds/dist/scss/core/mixins/utilities/_padding.scss","../../../../node_modules/uswds/dist/scss/core/_functions.scss","../../../../node_modules/uswds/dist/scss/lib/grid/_omega.scss","../../../../node_modules/uswds/dist/scss/lib/grid/_shift.scss","_dg-base.scss","../../../../node_modules/uswds/dist/scss/core/mixins/_focus.scss","../../../../node_modules/uswds/dist/scss/core/_system-tokens.scss","_dg-buttons.scss","../../../../node_modules/uswds/dist/scss/core/mixins/_font-smoothing.scss","../../../../node_modules/uswds/dist/scss/lib/helpers/_directional-values.scss","../../../../node_modules/uswds/dist/scss/components/_accordions.scss","../../../../node_modules/uswds/dist/scss/core/mixins/utilities/_margin.scss","../../../../node_modules/uswds/dist/scss/core/_properties.scss","../../../../node_modules/uswds/dist/scss/core/mixins/_unstyled-list.scss","_dg-banner.scss","../../../../node_modules/uswds/dist/scss/lib/settings/_grid.scss","../../../../node_modules/uswds/dist/scss/core/mixins/_icon.scss","../../../../node_modules/uswds/dist/scss/lib/grid/_media.scss","../../../../node_modules/uswds/dist/scss/lib/grid/_span-columns.scss","../../../../node_modules/uswds/dist/scss/lib/grid/_private.scss"],"names":[],"mappings":"AAYA,qBAAqB,AC8MnB,uBACE,uBAAuB,AACvB,0BAA0B,AAC1B,6BAA8B,CAC/B,AACD,uBACE,QAAS,CACV,AAED,+VAaE,aAAc,CACf,AAED,4GAIE,qBAAqB,AACrB,uBAAwB,CACzB,AAED,yDACE,aAAa,AACb,QAAS,CACV,AAED,8DAEE,YAAa,CACd,AAED,iBACE,4BAA6B,CAC9B,AAED,4DAEE,SAAU,CACX,AAED,qCACE,wBAAyB,CAC1B,AAED,4CAEE,eAAiB,CAClB,AAED,qBACE,iBAAkB,CACnB,AAED,GACE,cAAc,AACd,cAAgB,CACjB,AAED,uBACE,gBAAgB,AAChB,UAAW,CACZ,AAED,yBACE,aAAc,CACf,AAED,0CAEE,cAAc,AACd,cAAc,AACd,kBAAkB,AAClB,uBAAwB,CACzB,AAED,qBACE,SAAW,CACZ,AAED,qBACE,aAAe,CAChB,AAED,qBACE,QAAS,CACV,AAED,2CACE,eAAgB,CACjB,AAED,2BACE,eAAgB,CACjB,AAED,mBACE,+BAAA,AAAuB,uBAAA,AACvB,QAAS,CACV,AAED,qBACE,aAAc,CACf,AAED,wFAIE,gCAAiC,AACjC,aAAc,CACf,AAED,6IAKE,cAAc,AACd,aAAa,AACb,QAAS,CACV,AAED,2BACE,gBAAiB,CAClB,AAED,sDAEE,mBAAoB,CACrB,AAED,uJAIE,0BAA0B,AAC1B,cAAe,CAChB,AAED,oEAEE,cAAe,CAChB,AAED,4HAEE,SAAS,AACT,SAAU,CACX,AAED,yBACE,kBAAmB,CACpB,AAED,wGAEE,8BAAA,AAAsB,sBAAA,AACtB,SAAU,CACX,AAED,kNAEE,WAAY,CACb,AAED,mDACE,6BAA6B,AAC7B,+BAAA,AAAuB,sBAAA,CACxB,AAED,wNAEE,uBAAwB,CACzB,AAED,+BACE,wBAAyB,AACzB,aAAa,AACb,0BAA8B,CAC/B,AAED,2BACE,SAAS,AACT,SAAU,CACX,AAED,+BACE,aAAc,CACf,AAED,+BACE,eAAiB,CAClB,AAED,yBACE,yBAAyB,AACzB,gBAAiB,CAClB,AAED,sCAEE,SAAU,CACX,ACgsBH,gCCv2BuD,+ECjPiB,CDiPgB,AD02BxF,gCCt2BuD,gFCjQiB,CDiQgB,ADy2BxF,kCCr2ByD,wEC3QQ,CD2Q0B,ADw2B3F,sCCh2B6D,gFC7QW,CD6QyB,ADm2BjG,gCC/1BuD,wECvRU,CDuRuB,ADk2BxF,gCC91BuD,+ECzQiB,CDyQgB,AEzQxF,aAtBE,kBAAkB,AAClB,WAAY,CAuBb,ACzBD,yBC2BE,gBCoH6B,ADlH3B,iBAAU,AACV,iBAAW,CD3Bd,AGeC,qCACE,WAAW,AACX,WAAW,AACX,aAAc,CACf,AHjBH,UICI,kBCqQ0E,ADpQ1E,kBCoQ0E,CLhQ7E,AAED,eACE,SAAU,CACX,AAsID,aM/FM,cAA8B,CNiGnC,AAGD,wBO9GE,mBAA4H,CPgH7H,AAED,sBOlHE,qBAA4H,CPoH7H,AAED,uBOtHE,qBAA4H,CPwH7H,AAED,sBO1HE,qBAA4H,CP4H7H,AAED,0BO9HE,qBAA4H,CPgI7H,AAED,qBOlIE,qBAA4H,CPoI7H,AAED,2BOtIE,qBAA4H,CPwI7H,AAED,uBO1IE,qBAA4H,CP4I7H,AAED,0BO9IE,qBAA4H,CPgJ7H,AAED,wBOlJE,qBAA4H,CPoJ7H,AAED,4BOtJE,qBAA4H,CPwJ7H,AQjMC,OACE,8BAAA,AAAsB,qBAAA,CACvB,AAED,sCAGE,2BAAA,AAAmB,kBAAA,CACpB,AAED,uBAEE,sBX6lB8B,AW5lB9B,iBAAkB,CACnB,AAGD,UAEI,8BAAA,AAAuB,qBAAA,CACxB,AZ+/CL,SYz/CI,sBAAwB,CACzB,AAED,yBC/BA,2BCiyBoB,ADhyBpB,kBZkvBiC,CWjtBhC,AGXH,gFCrBE,kCAAkC,AAClC,mCAAmC,ACqEb,gBFtCD,AE2CG,kBF3CG,AEqDH,mBFrDS,AACjC,wBAAA,AAAgB,qBAAhB,AAAgB,gBAAA,AAChB,yBD4hBsB,AC3hBtB,SAAS,AACT,kBd0sBiC,AczsBjC,WdokBgC,AcnkBhC,eAAe,AACf,qBAAqB,AACrB,iFbhCsE,AaiCtE,oBN+N4E,AM9N5E,gBdgiBuB,Ac/hBvB,cAAc,AACd,kBAAkB,AAClB,kBAAkB,AAClB,qBAAqB,AACrB,UAAW,CA4GZ,AAtID,4PAkCI,yBDmiBe,ACliBf,gBAAgB,AAChB,WdgjB8B,Ac/iB9B,oBAAqB,CACtB,AAtCH,oQA0CI,wBD4hBe,CC3hBhB,AA3CH,4KA8CI,yBD6doB,AC5dpB,aDiuBkB,CCrtBnB,AA3DH,obAmDM,wBDydkB,CCxdnB,AApDL,4bAwDM,yBDseiB,ACrejB,Ud2hB4B,Cc1hB7B,AA1DL,oKA8DI,sBdshB8B,AcrhB9B,2CAAA,AD0eoB,mCAAA,ACzepB,aDyeoB,CC5drB,AA7EH,oaAoEM,2CAAA,ADigBa,mCAAA,AChgBb,aDggBa,CC/fd,AAtEL,4aA0EM,2CAAA,AD4fa,mCAAA,AC3fb,aD2fa,CC1fd,AA5EL,gYAiFI,uBAAuB,AACvB,wCAAA,AdkgB8B,gCAAA,AcjgB9B,UdigB8B,Ccpf/B,AAhGH,w7BAuFM,2CAAA,AD8pBW,mCAAA,AC7pBX,aD6pBW,CC5pBZ,AAzFL,w8BA6FM,2CAAA,AD6qBgB,mCAAA,AC5qBhB,aDupBW,CCtpBZ,AA/FL,gJAmGI,wBDupBa,CC5oBd,AA9GH,4XAuGM,wBDqpBW,CCppBZ,AAxGL,oYA4GM,wBDoqBgB,CCnqBjB,AA7GL,4IAiHI,wBDwGoB,CC7FrB,AA5HH,oXAqHM,wBDgHmB,CC/GpB,AAtHL,4XA0HM,wBD4GmB,CC3GpB,AA3HL,4IA+HI,iBAAiB,AACjB,mBAAoB,CACrB,AAjIH,oHAhBE,yBDqwBe,ACpwBf,mBAAoB,CAoJnB,AAlJD,w7BAME,yBD4vBa,AC3vBb,SAAS,AACT,wBAAA,AAAgB,eAAA,CACjB,AA6IH,qBAzJE,yBDqwBe,ACpwBf,mBAAoB,CA2JrB,AAzJC,8LAME,yBD4vBa,AC3vBb,SAAS,AACT,wBAAA,AAAgB,eAAA,CACjB,AAkJH,iLAKE,2CAAA,ADkmBe,mCAAA,ACjmBf,oBAAoB,AACpB,aDgmBe,CCrlBhB,AAlBD,s2CAeI,sBdub8B,Actb9B,QAAS,CACV,AAGH,mEAEE,qBdgbgC,Cc/ajC,AAED,mFAEE,6BAA6B,AAC7B,cDglBe,AC/kBf,2CAAA,AD+kBe,kCAAA,CC9kBhB,AAiBD,qBAbE,SAAS,AACT,gBAAgB,AAChB,gBdkYuB,AcjYvB,SAAS,AACT,UAAU,AACV,gBAAgB,AAChB,2BAA4B,CAS7B,AAPC,gDATA,4BAA6B,CAW5B,AGpIH,uCCpEI,gBCQI,ADPJ,aCOI,AChBN,qBAAqB,AACrB,eAAe,AHQf,cJ6xBoB,AI5xBpB,SAAS,AACT,UAAU,AACV,UAAW,CAkGZ,AG3GC,6CACE,eAAgB,CACjB,AH4DD,yDACE,eAAgB,CAOjB,AANC,qEACE,iBAAkB,CAInB,AAHC,iFACE,iBAAkB,CACnB,AAKP,4JAOI,ejBuqBgB,CiBtqBjB,AARH,6CCpEI,gBCQI,ADPJ,aCOI,AChBN,qBAAqB,AACrB,eAAe,AHQf,cJ6xBoB,AI5xBpB,SAAS,AACT,UAAU,AACV,UAAW,CA4FV,AGrGD,mDACE,gBAAgB,AHYlB,yBJ0vBe,AIzvBf,iFhBRsE,AgBStE,gBAAgB,AAChB,oBjBsuBsB,AiBruBtB,UAAW,CGfV,AHuEH,2DHyHE,6BAA6B,AAC7B,SAAS,AACT,gBAAgB,AAChB,gBdkYuB,AchYvB,UAAU,AACV,gBAAgB,AAChB,4BAA4B,AGlL5B,yBJgvBe,AI/uBf,uCAAuD,AACvD,uCAAuD,AACvD,sCAA4C,AAC5C,4BAA4B,AAC5B,uBjB4tBuB,AiB3tBvB,cJswBoB,AIrwBpB,eAAe,AACf,qBAAqB,AACrB,iFhB1BsE,AgB2BtE,gBjBuiBuB,AiBtiBvB,SAAS,AACT,kCjBstBmB,AiBrtBnB,UAAW,CA2DR,AH4GH,uEACE,6BAA6B,AGrK7B,yBJiuBa,AIhuBb,aJ2vBkB,CCtlBnB,AGlKD,sYAME,QAAS,CACV,AAuBH,yFAlBE,sCAAsD,AACtD,sCAAsD,AACtD,4BAA4B,AAC5B,sBjB8rBuB,CiBppBpB,AA3BL,6CA5DE,yBJ0vBe,AIzvBf,iFhBRsE,AgBStE,gBAAgB,AAChB,oBjBsuBsB,AiBruBtB,UAAW,CAwFV,AAIH,+CAEI,gCJwpBa,AIvpBb,8BJupBa,AItpBb,8BJspBa,CIrpBd,AAGH,uBACE,sBjBifgC,AiBhfhC,cAAc,AACd,mBjBioBmB,CiBlnBpB,AAlBD,oCAMI,YAAa,CACd,AAPH,mCAUI,eAAgB,CACjB,AAXH,0CfzHE,kBAAkB,AAClB,WAAY,CeuIX,Af5GD,yCACE,YAAa,CACd,Ae+GH,sBHyDE,6BAA6B,AAC7B,SAAS,AACT,gBAAgB,AAChB,gBdkYuB,AchYvB,UAAU,AACV,gBAAgB,AAChB,4BAA4B,AGlL5B,yBJgvBe,AI/uBf,uCAAuD,AACvD,uCAAuD,AACvD,sCAA4C,AAC5C,4BAA4B,AAC5B,uBjB4tBuB,AiB3tBvB,cJswBoB,AIrwBpB,eAAe,AACf,qBAAqB,AACrB,iFhB1BsE,AgB2BtE,gBjBuiBuB,AiBtiBvB,SAAS,AACT,kCjBstBmB,AiBrtBnB,UAAW,CAuGZ,AHgEC,4BACE,6BAA6B,AGrK7B,yBJiuBa,AIhuBb,aJ2vBkB,CCtlBnB,AGlKD,sJAME,QAAS,CACV,AA2FH,2CAtFE,sCAAsD,AACtD,sCAAsD,AACtD,4BAA4B,AAC5B,sBjB8rBuB,CiBzmBxB,AIrJD,YACE,yBR4wBe,AQ3wBf,uBb0Q4E,CapQ7E,AAED,oBL6E0B,yBRqLoD,AahQ5E,6BAA6B,AAC7B,mBb+P4E,Aa7P5E,UAAW,CAoBZ,AAzBD,kCAkBM,kBbgPwE,Ca3OzE,AAIL,kBjBTE,iBkBJgB,AlBMd,iBAAU,AACV,kBAAW,AYgDW,mBR6LoD,AQxLpD,kBRwLoD,AapO5E,ehBwG6B,CgBnG9B,Af1BC,wBACE,WAAW,AACX,WAAW,AACX,aAAc,CACf,AewBH,mBL2BwB,sBRkMsD,AQzLpD,yBRyLoD,Aa3N5E,iBb2N4E,Aa1N5E,erB2hBuB,CqB9fxB,AAhCD,qBL2BwB,aAtCH,AA+CK,gBA/CL,AKsBjB,eAAe,AACf,gBAAgB,AAChB,qBAAsB,CAMvB,AAnBH,uBAsBI,WAAW,AACX,qBbsM0E,AarM1E,mBbqM0E,AapM1E,YboM0E,Ca9L3E,AAGH,4BACE,yBAAA,AAAmB,sBAAnB,AAAmB,mBAAA,AACnB,gCRgtBoB,AQ/sBpB,oBAAA,AAAa,oBAAb,AAAa,aAAA,AACb,mBbuL4E,AatL5E,kBbsL4E,AarL5E,sBbqL4E,CajJ7E,AA1CD,8CAkBI,aAAc,CAKf,AAvBH,gCA0BI,mBbiK0E,Ca5J3E,AA/BH,8BAkCI,gBrB8cqB,AqB7crB,kBAAmB,CAMpB,AAGH,mBP2EE,6BAA6B,AAC7B,SAAS,AACT,gBAAgB,AAChB,gBdkYuB,AcjYvB,SAAS,AACT,UAAU,AACV,gBAAgB,AAChB,4BAA4B,AErIN,qBRkMsD,AQlLpD,kBRkLoD,Aa5I5E,4BAA4B,AAC5B,cRicsB,AQhctB,cAAc,AACd,iBbyI4E,AaxI5E,iBbwI4E,AavI5E,OAAO,AACP,kBAAkB,AAClB,0BAA0B,AAC1B,MAAM,AACN,UAAW,CA8DZ,APUC,yBACE,6BAA6B,AO1D7B,cRsce,AQrcf,yBAA0B,CP0D3B,AOtFH,wCAiCI,qBAAsB,CAKvB,AElKD,8CACE,0DAA0D,AAC1D,0DAA0D,AAC1D,qBAAqB,AACrB,WAAW,AACX,qBAAqB,AACrB,efqQ0E,AepQ1E,cfoQ0E,AehQxE,aFiJgE,CE5InE,AAGC,oDACE,gEAAgE,AAChE,+DAAgE,CACjE,AFsGL,8CAoCM,yBAA0B,CAC3B,AArCL,uCA0CI,sBAAsB,AACtB,aboG0E,CatE3E,AErMD,6CACE,uCAA0D,AAC1D,uCAA0D,AAC1D,qBAAqB,AACrB,WAAW,AACX,qBAAqB,AACrB,gBfqQ0E,AepQ1E,efoQ0E,AehQxE,cF0J6C,AAgB7C,kBAAkB,AAClB,ebqFwE,AapFxE,cboFwE,Ce3P3E,AF4GH,+DAmEM,YAAa,CAKd,AAIL,iBACE,cbkE4E,CgBlN1E,AHiJH,oCPlLD,gFA6BI,UAAW,CAyGd,AO/JD,YAKI,mBbuQ0E,AatQ1E,gBAAiB,CAEpB,AAuCD,mBL2BwB,cAtCH,AA+CK,gBA/CL,CK2CpB,AAhCD,qBL2BwB,eKXC,ALoBC,kBKpBD,AACnB,oBAAqB,CAExB,AAnBH,uBA4BM,sBbiMwE,AahMxE,abgMwE,Ca9L3E,AAGH,4BASI,mBAAmB,AACnB,cAAc,AACd,iBbgL0E,Aa/K1E,gBrBgfqB,AqB/erB,aAAa,AACb,eAAgB,CA4BnB,AA1CD,8CAqBM,gBAAiB,CAEpB,AAvBH,gCA6BM,qBb8JwE,Ca5J3E,AA/BH,8BAsCM,gBrBycmB,AqBxcnB,qBAAsB,CAEzB,AAGH,mBLnDwB,cAtCH,AAsDK,eAnDL,AKuGjB,eAAe,AACf,YAAe,AACf,gBAAgB,AAChB,kBAAkB,AAClB,sBAAsB,AACtB,UAAc,CAoDjB,AA1ED,uCA+CM,YAAe,AACf,UAAU,AACV,iBAAkB,CAwBrB,AErMD,6CACE,wDAA0D,AAC1D,wDAA0D,AAC1D,qBAAqB,AACrB,WAAW,AACX,qBAAqB,AACrB,efqQ0E,AepQ1E,cfoQ0E,AehQxE,aF+JgE,CE1JnE,AAGC,mDACE,8DAAgE,AAChE,6DAAgE,CACjE,AFsGL,6CAoDQ,0BAA0B,AAU1B,eAAgB,CATjB,AArDP,+DAsEQ,cAAe,CAElB,CG3ID,AVqGH,oCXzJD,UICI,sBCqQ0E,ADpQ1E,sBCoQ0E,CLhQ7E,AAQC,qBsB+CE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,UC5EyC,CvBY5C,AsBkEG,gCACE,cAA8B,CAC/B,AtBlEL,oBsB2CE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvBgB5C,AsB8DG,+BACE,cAA8B,CAC/B,AtB9DL,qBsBuCE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvBoB5C,AsB0DG,gCACE,cAA8B,CAC/B,AtB1DL,sBsBmCE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvBwB5C,AsBsDG,iCACE,cAA8B,CAC/B,AtBtDL,sBsB+BE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvBgC5C,AAND,qEAII,cAAe,CAChB,AAGH,yBsBuBE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,UC5EyC,CvBoC5C,AsB0CG,oCACE,cAA8B,CAC/B,AtB1CL,qBsBmBE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvB4C5C,AAND,mEAII,cAAe,CAChB,AAGH,uBsBWE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvBgD5C,AsB8BG,kCACE,cAA8B,CAC/B,AtB9BL,uBsBOE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvBwD5C,AAND,uEAII,cAAe,CAChB,AAGH,yBsBDE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvB4D5C,AsBkBG,oCACE,cAA8B,CAC/B,AtBlBL,0BsBLE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvBgE5C,AsBcG,qCACE,cAA8B,CAC/B,AJhFP,oBAQI,yBb0P0E,AazP1E,kBbyP0E,CazO7E,AAzBD,kCAqBQ,YAAa,CAEhB,ClBrBJ,AqB8CG,oCHrBJ,sCL0C0B,uBR6LoD,AQxLpD,qBRwLoD,Ca/N7E,CGyCG,AHnDH,qClB2CC,qBsBXE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,UC5EyC,CvBsE5C,AsBQG,gCACE,cAA8B,CAC/B,AtBRL,oBsBfE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvB0E5C,AsBIG,+BACE,cAA8B,CAC/B,AtBJL,qBsBnBE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvB8E5C,AsBAG,gCACE,cAA8B,CAC/B,AtBAL,sBsBvBE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvBkF5C,AsBJG,iCACE,cAA8B,CAC/B,AtBIL,sBsB3BE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvB8F5C,AsBhBG,iCACE,cAA8B,CAC/B,AtBIL,oCsB3BE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvByF1C,AALH,mFAQI,cAAe,CAChB,AAGH,yBsBvCE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvBkG5C,AsBpBG,oCACE,cAA8B,CAC/B,AtBoBL,qBsB3CE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvB8G5C,AsBhCG,gCACE,cAA8B,CAC/B,AtBoBL,mCsB3CE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvByG1C,AALH,iFAQI,cAAe,CAChB,AAGH,uBsBvDE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvBkH5C,AsBpCG,kCACE,cAA8B,CAC/B,AtBoCL,uBsB3DE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,cC5EyC,CvB8H5C,AsBhDG,kCACE,cAA8B,CAC/B,AtBoCL,qCsB3DE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,cC5EyC,CvByH1C,AALH,sFAQI,cAAe,CAChB,AAGH,yBsBvEE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvBkI5C,AsBpDG,oCACE,cAA8B,CAC/B,AtBoDL,0BsB3EE,WAAO,AAGL,cAAc,AAed,sBCtE0C,ADuE1C,eC5EyC,CvBsI5C,AsBxDG,qCACE,cAA8B,CAC/B,CAAA","file":"dg-uswds.min.css","sourcesContent":["// USWDS SASS variable overrides go here, before we import USWDS itself.\n\n$border-box-sizing: false;\n$scope-uswds: true;\n\n@import 'core/functions';\n@import 'uswds-project-settings';\n@import 'uswds-project-utilities-settings';\n@import 'dg-variables';\n\n// Copy imports from USWDS module to control imports\n\n/*! uswds @version */\n\n\n// Settings\n@import 'core/settings';\n@import 'utilities/utilities-settings';\n\n// Vendor -------------- //\n@import 'lib/bourbon';\n@import 'lib/neat';\n@import 'dg-normalize';\n\n// Tools\n@import 'core/font-definitions';\n@import 'core/system-tokens';\n@import 'core/variables';\n@import 'core/properties';\n@import 'core/mixins/all';\n\n@import 'core/grid';\n//@import 'core/utilities';\n\n@import 'dg-base';\n\n// Elements -------------- //\n// Styles basic HTML elements\n@import 'dg-buttons';\n/*\n@import 'elements/embed';\n@import 'elements/figure';\n@import 'elements/inputs';\n@import 'elements/labels';\n@import 'elements/list';\n@import 'elements/table';\n@import 'elements/typography';\n\n// Components -------------- //\n*/\n@import 'components/accordions';\n/*\n@import 'components/alerts';\n*/\n@import 'dg-banner';\n/*\n@import 'components/footer';\n@import 'components/forms';\n@import 'components/graphic-list';\n@import 'components/header';\n@import 'components/hero';\n@import 'components/layout';\n@import 'components/media-block';\n@import 'components/navigation';\n@import 'components/search';\n@import 'components/section';\n@import 'components/sidenav';\n@import 'components/skipnav';\n*/\n\n// New custom CSS rules can go here.\n\n//@import 'dg-uswds-overrides';\n","@if $scope-uswds == false {\n  html {\n    font-family: sans-serif; /* 1 */\n    -ms-text-size-adjust: 100%; /* 2 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n  }\n\n  body {\n    margin: 0;\n  }\n\n  article,\n  aside,\n  details,\n  figcaption,\n  figure,\n  footer,\n  header,\n  hgroup,\n  main,\n  menu,\n  nav,\n  section,\n  summary {\n    display: block;\n  }\n\n  audio,\n  canvas,\n  progress,\n  video {\n    display: inline-block; /* 1 */\n    vertical-align: baseline; /* 2 */\n  }\n\n  audio:not([controls]) {\n    display: none;\n    height: 0;\n  }\n\n  [hidden],\n  template {\n    display: none;\n  }\n\n  a {\n    background-color: transparent;\n  }\n\n  a:active,\n  a:hover {\n    outline: 0;\n  }\n\n  abbr[title] {\n    border-bottom: 1px dotted;\n  }\n\n  b,\n  strong {\n    font-weight: bold;\n  }\n\n  dfn {\n    font-style: italic;\n  }\n\n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n\n  mark {\n    background: #ff0;\n    color: #000;\n  }\n\n  small {\n    font-size: 80%;\n  }\n\n  sub,\n  sup {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n\n  sup {\n    top: -0.5em;\n  }\n\n  sub {\n    bottom: -0.25em;\n  }\n\n  img {\n    border: 0;\n  }\n\n  svg:not(:root) {\n    overflow: hidden;\n  }\n\n  figure {\n    margin: 1em 40px;\n  }\n\n  hr {\n    box-sizing: content-box;\n    height: 0;\n  }\n\n  pre {\n    overflow: auto;\n  }\n\n  code,\n  kbd,\n  pre,\n  samp {\n    font-family: monospace, monospace;\n    font-size: 1em;\n  }\n\n  button,\n  input,\n  optgroup,\n  select,\n  textarea {\n    color: inherit; /* 1 */\n    font: inherit; /* 2 */\n    margin: 0; /* 3 */\n  }\n\n  button {\n    overflow: visible;\n  }\n\n  button,\n  select {\n    text-transform: none;\n  }\n\n  button,\n  html input[type=\"button\"], /* 1 */\n  input[type=\"reset\"],\n  input[type=\"submit\"] {\n    -webkit-appearance: button; /* 2 */\n    cursor: pointer; /* 3 */\n  }\n\n  button[disabled],\n  html input[disabled] {\n    cursor: default;\n  }\n\n  button::-moz-focus-inner,\n  input::-moz-focus-inner {\n    border: 0;\n    padding: 0;\n  }\n\n  input {\n    line-height: normal;\n  }\n\n  input[type=\"checkbox\"],\n  input[type=\"radio\"] {\n    box-sizing: border-box; /* 1 */\n    padding: 0; /* 2 */\n  }\n\n  input[type=\"number\"]::-webkit-inner-spin-button,\n  input[type=\"number\"]::-webkit-outer-spin-button {\n    height: auto;\n  }\n\n  input[type=\"search\"] {\n    -webkit-appearance: textfield; /* 1 */\n    box-sizing: content-box; /* 2 */\n  }\n\n  input[type=\"search\"]::-webkit-search-cancel-button,\n  input[type=\"search\"]::-webkit-search-decoration {\n    -webkit-appearance: none;\n  }\n\n  fieldset {\n    border: 1px solid #c0c0c0;\n    margin: 0 2px;\n    padding: 0.35em 0.625em 0.75em;\n  }\n\n  legend {\n    border: 0; /* 1 */\n    padding: 0; /* 2 */\n  }\n\n  textarea {\n    overflow: auto;\n  }\n\n  optgroup {\n    font-weight: bold;\n  }\n\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  td,\n  th {\n    padding: 0;\n  }\n} @else {\n  .uswds html, html.uswds {\n    font-family: sans-serif; /* 1 */\n    -ms-text-size-adjust: 100%; /* 2 */\n    -webkit-text-size-adjust: 100%; /* 2 */\n  }\n  .uswds body, body.uswds {\n    margin: 0;\n  }\n\n  .uswds article, article.uswds,\n  .uswds aside, aside.uswds,\n  .uswds details, details.uswds,\n  .uswds figcaption, figcaption.uswds,\n  .uswds figure, figure.uswds,\n  .uswds footer, footer.uswds,\n  .uswds header, header.uswds,\n  .uswds hgroup, hgroup.uswds,\n  .uswds main, main.uswds,\n  .uswds menu, menu.uswds,\n  .uswds nav, nav.uswds,\n  .uswds section, section.uswds,\n  .uswds summary, summary.uswds {\n    display: block;\n  }\n\n  .uswds audio, audio.uswds,\n  .uswds canvas, canvas.uswds,\n  .uswds progress, progress.uswds,\n  .uswds video, video.uswds {\n    display: inline-block; /* 1 */\n    vertical-align: baseline; /* 2 */\n  }\n\n  .uswds audio:not([controls]), audio:not([controls]).uswds {\n    display: none;\n    height: 0;\n  }\n\n  .uswds [hidden], [hidden].uswds,\n  .uswds template, template.uswds {\n    display: none;\n  }\n\n  .uswds a, a.uswds {\n    background-color: transparent;\n  }\n\n  .uswds a:active, a:active.uswds,\n  .uswds a:hover, a:hover.uswds {\n    outline: 0;\n  }\n\n  .uswds abbr[title], abbr[title].uswds {\n    border-bottom: 1px dotted;\n  }\n\n  .uswds b, b.uswds,\n  .uswds strong, strong.uswds {\n    font-weight: bold;\n  }\n\n  .uswds dfn, dfn.uswds {\n    font-style: italic;\n  }\n\n  h1 {\n    font-size: 2em;\n    margin: 0.67em 0;\n  }\n\n  .uswds mark, mark.uswds {\n    background: #ff0;\n    color: #000;\n  }\n\n  .uswds small, small.uswds {\n    font-size: 80%;\n  }\n\n  .uswds sub, sub.uswds,\n  .uswds sup, sup.uswds {\n    font-size: 75%;\n    line-height: 0;\n    position: relative;\n    vertical-align: baseline;\n  }\n\n  .uswds sup, sup.uswds {\n    top: -0.5em;\n  }\n\n  .uswds sub, sub.uswds {\n    bottom: -0.25em;\n  }\n\n  .uswds img, img.uswds {\n    border: 0;\n  }\n\n  .uswds svg:not(:root), svg:not(:root).uswds {\n    overflow: hidden;\n  }\n\n  .uswds figure, figure.uswds {\n    margin: 1em 40px;\n  }\n\n  .uswds hr, hr.uswds {\n    box-sizing: content-box;\n    height: 0;\n  }\n\n  .uswds pre, pre.uswds {\n    overflow: auto;\n  }\n\n  .uswds code, code.uswds,\n  .uswds kbd, kbd.uswds,\n  .uswds pre, pre.uswds,\n  .uswds samp, samp.uswds {\n    font-family: monospace, monospace;\n    font-size: 1em;\n  }\n\n  .uswds button, button.uswds,\n  .uswds input, input.uswds,\n  .uswds optgroup, optgroup.uswds,\n  .uswds select, select.uswds,\n  .uswds textarea, textarea.uswds {\n    color: inherit; /* 1 */\n    font: inherit; /* 2 */\n    margin: 0; /* 3 */\n  }\n\n  .uswds button, button.uswds {\n    overflow: visible;\n  }\n\n  .uswds button, button.uswds,\n  .uswds select, select.uswds {\n    text-transform: none;\n  }\n\n  .uswds button, button.uswds,\n  html input[type=\"button\"], /* 1 */\n  .uswds input[type=\"reset\"], input[type=\"reset\"].uswds,\n  .uswds input[type=\"submit\"], input[type=\"submit\"].uswds {\n    -webkit-appearance: button; /* 2 */\n    cursor: pointer; /* 3 */\n  }\n\n  .uswds button[disabled], button[disabled].uswds,\n  html input[disabled] {\n    cursor: default;\n  }\n\n  .uswds button::-moz-focus-inner, button::-moz-focus-inner.uswds,\n  .uswds input::-moz-focus-inner, input::-moz-focus-inner.uswds {\n    border: 0;\n    padding: 0;\n  }\n\n  .uswds input, input.uswds {\n    line-height: normal;\n  }\n\n  .uswds input[type=\"checkbox\"], input[type=\"checkbox\"].uswds,\n  .uswds input[type=\"radio\"], input[type=\"radio\"].uswds {\n    box-sizing: border-box; /* 1 */\n    padding: 0; /* 2 */\n  }\n\n  .uswds input[type=\"number\"]::-webkit-inner-spin-button, input[type=\"number\"]::-webkit-inner-spin-button.uswds,\n  .uswds input[type=\"number\"]::-webkit-outer-spin-button, input[type=\"number\"]::-webkit-outer-spin-button.uswds {\n    height: auto;\n  }\n\n  .uswds input[type=\"search\"], input[type=\"search\"].uswds {\n    -webkit-appearance: textfield; /* 1 */\n    box-sizing: content-box; /* 2 */\n  }\n\n  .uswds input[type=\"search\"]::-webkit-search-cancel-button, input[type=\"search\"]::-webkit-search-cancel-button.uswds,\n  .uswds input[type=\"search\"]::-webkit-search-decoration, input[type=\"search\"]::-webkit-search-decoration.uswds {\n    -webkit-appearance: none;\n  }\n\n  .uswds fieldset, fieldset.uswds {\n    border: 1px solid #c0c0c0;\n    margin: 0 2px;\n    padding: 0.35em 0.625em 0.75em;\n  }\n\n  .uswds legend, legend.uswds {\n    border: 0; /* 1 */\n    padding: 0; /* 2 */\n  }\n\n  .uswds textarea, textarea.uswds {\n    overflow: auto;\n  }\n\n  .uswds optgroup, optgroup.uswds {\n    font-weight: bold;\n  }\n\n  .uswds table, table.uswds {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n\n  .uswds td, td.uswds,\n  .uswds th, th.uswds {\n    padding: 0;\n  }\n}\n","@charset \"UTF-8\";\n/*\n========================================\nFunctions\n----------------------------------------\n*/\n/*\n========================================\nGeneral-purpose functions\n----------------------------------------\n*/\n/*\n----------------------------------------\nmap-deep-get()\n----------------------------------------\n@author Hugo Giraudel\n@access public\n@param {Map} $map - Map\n@param {Arglist} $keys - Key chain\n@return {*} - Desired value\n----------------------------------------\n*/\n/*\n----------------------------------------\nstrip-unit()\n----------------------------------------\nRemove the unit of a length\n@author Hugo Giraudel\n@param {Number} $number - Number to remove unit from\n@return {Number} - Unitless number\n----------------------------------------\n*/\n/*\n----------------------------------------\nmulti-cat()\n----------------------------------------\nConcatenate two lists\n----------------------------------------\n*/\n/*\n----------------------------------------\nmap-collect()\n----------------------------------------\nCollect multiple maps into a single\nlarge map\nsource: https://gist.github.com/bigglesrocks/d75091700f8f2be5abfe\n----------------------------------------\n*/\n/* stylelint-disable */\n/*\n----------------------------------------\nsmart-quote()\n----------------------------------------\nQuotes strings\nInspects `px`, `xs`, and `xl` numbers\nLeaves bools as is\n----------------------------------------\n*/\n/*\n----------------------------------------\nremove()\n----------------------------------------\nRemove a value from a list\n----------------------------------------\n*/\n/*\n----------------------------------------\nstrunquote()\n----------------------------------------\nUnquote a string\n----------------------------------------\n*/\n/*\n----------------------------------------\nto-map()\n----------------------------------------\nConvert a single value to a USWDS\nvalue map.\n\nCandidate for deprecation if we remove\nisReadable\n----------------------------------------\n*/\n/*\n----------------------------------------\nbase-to-map()\n----------------------------------------\nConvert a single base to a USWDS\nvalue map.\n\nCandidate for deprecation if we remove\nisReadable\n----------------------------------------\n*/\n/*\n----------------------------------------\nns()\n----------------------------------------\nAdd a namesspace of $type if that\nnamespace is set to output\n----------------------------------------\n*/\n/*\n----------------------------------------\ngrid-units()\n----------------------------------------\nConverts a spacing unit multiple into\nthe desired final units (currently rem)\n----------------------------------------\n*/\n/*\n----------------------------------------\npx()\n----------------------------------------\nConverts a value in px to a value in rem\n----------------------------------------\n*/\n/*\n----------------------------------------\nrem-to-px()\n----------------------------------------\nConverts a value in rem to a value in px\n----------------------------------------\n*/\n/*\n----------------------------------------\ngrid-to-base-em()\n----------------------------------------\nConverts a value in px to a value in em\n----------------------------------------\n*/\n/*\n----------------------------------------\ncap-height()\n----------------------------------------\nGet the cap height of a defined font\n----------------------------------------\n*/\n/*\n----------------------------------------\ntype-scale()\n----------------------------------------\nNormalizes a specific face's optical size\nto a set target\n----------------------------------------\n*/\n/*\n----------------------------------------\nutility-font()\n----------------------------------------\nGet a normalized font-size in rem from\na family and a type size in either\nsystem scale or project scale\n----------------------------------------\nNot the public-facing function.\nUsed for building the utilities and\nwithholds certain errors.\n----------------------------------------\n*/\n/*\n----------------------------------------\nlh()\n----------------------------------------\nGet a normalized line-height from\na family and a line-height scale unit\n----------------------------------------\n*/\n/*\n----------------------------------------\nget-uswds-color()\n----------------------------------------\nDerive a system color from its\nfamily, value, and vivid or a passed\nvariable that is, itself, a list\n----------------------------------------\n*/\n/*\n----------------------------------------\nsystem-type-scale()\n----------------------------------------\nGet a value from the system type scale\n----------------------------------------\n*/\n/*\n========================================\nUtility functions\n----------------------------------------\nTODO: convert/translate these to mixins?\n----------------------------------------\n*/\n/*\n----------------------------------------\ncalc-gap-offset()\n----------------------------------------\nCalculate a valid uswds unit that is\nhalf the width of a given unit, for\ncalculating gap offset in the layout\ngrid.\n----------------------------------------\n*/\n/*\n----------------------------------------\nget-standard-values()\n----------------------------------------\nGets a map of USWDS standard values\nfor a property\n----------------------------------------\n*/\n/*\n----------------------------------------\nnumber-to-value()\n----------------------------------------\nConverts an integer or numeric value\ninto a system value\n\nEx: 0.5   --> '05'\n    -1px  --> 'neg-1px'\n----------------------------------------\n*/\n/*\n----------------------------------------\nget-uswds-value()\n----------------------------------------\nFinds and outputs a value from the\nUSWDS standard values.\n\nUsed to build other standard utility\nfunctions and mixins.\n----------------------------------------\n*/\n/*\n----------------------------------------\nborder-radius()\n----------------------------------------\nGet a border-radius from the system\nborder-radii\n----------------------------------------\n*/\n/*\n----------------------------------------\ncheck-color()\n----------------------------------------\nCheck to see if the value of a variable\nis false. Warn if it is.\n----------------------------------------\n*/\n/*\n----------------------------------------\ncolor()\n----------------------------------------\nDerive a color from the map of all\ncolors: project and system\n----------------------------------------\n*/\n/*\n----------------------------------------\nfeature()\n----------------------------------------\nGets a valid USWDS font feature setting\n----------------------------------------\n*/\n/*\n----------------------------------------\nflex()\n----------------------------------------\nGets a valid USWDS flex value\n----------------------------------------\n*/\n/*\n----------------------------------------\nfont()\n----------------------------------------\nGets\n- 'family'\n- 'size'\n- 'weight'\nbased on on props passed\n----------------------------------------\n*/\n/*\n----------------------------------------\nfw()\n----------------------------------------\nGet a font-weight value from the\nsystem font-weight\n----------------------------------------\n*/\n/*\n----------------------------------------\nfont-weight()\n----------------------------------------\nGets a valid USWDS font-weight\n----------------------------------------\n*/\n/*\n----------------------------------------\nletter-spacing()\n----------------------------------------\nGet a letter-spacing value from the\nsystem letter-spacing\n----------------------------------------\n*/\n/*\n----------------------------------------\nline-height()\n----------------------------------------\nGet a line height from the system\nline heights\n----------------------------------------\n*/\n/*\n----------------------------------------\nmeasure()\n----------------------------------------\nGets a valid USWDS reading line length\n----------------------------------------\n*/\n/*\n----------------------------------------\nopacity()\n----------------------------------------\nGet an opacity from the system\nopacities\n----------------------------------------\n*/\n/*\n----------------------------------------\norder()\n----------------------------------------\nGet an order value from the\nsystem orders\n----------------------------------------\n*/\n/*\n----------------------------------------\nspacing()\n----------------------------------------\nConverts a spacing unit multiple into\nthe desired final units (currently rem)\n----------------------------------------\n*/\n/*\n----------------------------------------\nradius()\n----------------------------------------\nGet a border-radius value from the\nsystem letter-spacing\n----------------------------------------\n*/\n/*\n----------------------------------------\nz-index()\n----------------------------------------\nGet a z-index value from the\nsystem z-index\n----------------------------------------\n*/\n/*\n----------------------------------------\nget-plugins()\n----------------------------------------\nBuild a single map of plugin values\nfrom a list of plugin keys.\n----------------------------------------\nTODO: Somewhat crude now. Could be more\nelegant\n----------------------------------------\n*/\n/*\n----------------------------------------\n@render-pseudoclass\n----------------------------------------\nBuild a pseucoclass utiliy from values\ncalculated in the @render-utilities-in\nloop\n----------------------------------------\n*/\n/*\n----------------------------------------\n@render-placeholder\n----------------------------------------\nBuild a placeholder utility from values\ncalculated in the @render-utilities-in\nloop\n\nCould be deprecated if we never choose\nto style placeholder text\n----------------------------------------\n*/\n/*\n----------------------------------------\n@render-media-queries\n----------------------------------------\nBuild @media media queries from values\ncalculated in the @render-utilities-in\nloop\n----------------------------------------\n*/\n/*\n----------------------------------------\n@render-utility\n----------------------------------------\nBuild a utility from values calculated\nin the @render-utilities-in loop\n----------------------------------------\nTODO: Determine the proper use of\nunquote() in the following. Changed to\naccount for a \"interpolation near\noperators will be simplified in a\nfuture version of Sass\" warning.\n----------------------------------------\n*/\n/*\n----------------------------------------\n@render-utilities-in\n----------------------------------------\nThe master loop that sets the building\nblocks of utilities from the values\nin individual rule settings and loops\nthrough all possible variants\n----------------------------------------\n*/\n/* stylelint-enable */\n/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nPROJECT THEME SETTINGS\n----------------------------------------\n!! Copy this file to your project's\n   sass root. Don't edit the version\n   in node_modules.\n----------------------------------------\n*/\n/*\n----------------------------------------\nPaths\n----------------------------------------\nRelative font and image file paths\n----------------------------------------\n*/\n/*\n----------------------------------------\nNamespace\n----------------------------------------\n*/\n/*\n----------------------------------------\nRoot font size\n----------------------------------------\nSets the font size of the html root\nfor rem calculations\n----------------------------------------\n*/\n/*\n----------------------------------------\nBorder box sizing\n----------------------------------------\nWhen set to true, it sets the box-sizing\nproperty of all elements to\n`border-box`.\n----------------------------------------\n*/\n/*\n----------------------------------------\nOutput breakpoints\n----------------------------------------\nWhich breakpoints does your project\nneed? Select as `true` any breakpoint\nused by utilities or layout grid\n----------------------------------------\n*/\n/*\n----------------------------------------\nCustom font definitions\n----------------------------------------\nAdd a new custom font definition if\nyour project uses a typeface we've\nnot already defined.\n----------------------------------------\nThe following faces already are\ndefined in the system:\n\n'system'\n'united-sans'\n'source-sans-pro'\n'helvetica'\n'georgia'\n'merriweather'\n'roboto-mono'\n----------------------------------------\n*/\n/*\n----------------------------------------\nFonts in use\n----------------------------------------\nSet the sans, serif, and mono faces for\nyour project\n----------------------------------------\ncurrently available:\n\n'system'\n'united-sans'\n'source-sans-pro'\n'helvetica'\n'georgia'\n'merriweather'\n'roboto-mono'\n----------------------------------------\n*/\n/*\n----------------------------------------\nFonts by type\n----------------------------------------\nSet the heading, body, code, and alt\nfaces for your project from\n\n$theme-font-sans\n$theme-font-serif\n$theme-font-mono\n$theme-font-cond\n----------------------------------------\n*/\n/*\n----------------------------------------\nType scale\n----------------------------------------\nDefine your project's type scale using\nvalues from the USWDS system type scale\n\n1-20\n----------------------------------------\n*/\n/*\n----------------------------------------\nFont weights\n----------------------------------------\nAssign weights 100-900\nOr use `false` for unneeded weights.\n----------------------------------------\n*/\n/*\n----------------------------------------\nPalette colors\n----------------------------------------\n*/\n/*\n----------------------------------------\nState colors\n----------------------------------------\n*/\n/*\n----------------------------------------\nBorder radius\n----------------------------------------\n2px           2px\n0.5           4px\n1             8px\n1.5           12px\n2             16px\n2.5           20px\n3             24px\n4             32px\n5             40px\n6             48px\n7             56px\n8             64px\n9             72px\n----------------------------------------\n*/\n/*\n----------------------------------------\nColumn gap\n----------------------------------------\n2px         2px\n0.5         4px\n1           8px\n2           16px\n3           24px\n4           32px\n5           48px\n----------------------------------------\n*/\n/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nUSWDS UTILITIES SETTINGS\n----------------------------------------\n*/\n/*\n----------------------------------------\nGlobal colors\n----------------------------------------\nThe following plugins will be added to\n- background-color\n- border-color\n- color\n- text-decoration-color\n----------------------------------------\n*/\n/*\n----------------------------------------\nSettings\n----------------------------------------\n*/\n/*\n----------------------------------------\nValues\n----------------------------------------\n*/\n/*! uswds @version */\n/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nPROJECT THEME SETTINGS\n----------------------------------------\n*/\n/*\n----------------------------------------\nNamespace\n----------------------------------------\n*/\n/*\n----------------------------------------\nRoot font size\n----------------------------------------\nSets the font size of the html root\nfor rem calculations\n----------------------------------------\n*/\n/*\n----------------------------------------\nBorder box sizing\n----------------------------------------\nWhen set to true, it sets the box-sizing\nproperty of all elements to\n`border-box`.\n----------------------------------------\n*/\n/*\n----------------------------------------\nPaths\n----------------------------------------\nRelative font and image file paths\n----------------------------------------\n*/\n/*\n----------------------------------------\nOutput breakpoints\n----------------------------------------\nWhich breakpoints does your project\nneed? Select as `true` any breakpoint\nused by utilities or layout grid\n----------------------------------------\n*/\n/*\n----------------------------------------\nCustom font definitions\n----------------------------------------\nAdd a new custom font definition if\nyour project uses a typeface we've\nnot already defined.\n----------------------------------------\nThe following faces already are\ndefined in the system:\n\n'system'\n'united-sans'\n'source-sans-pro'\n'helvetica'\n'georgia'\n'merriweather'\n'roboto-mono'\n----------------------------------------\n*/\n/*\n----------------------------------------\nFonts in use\n----------------------------------------\nSet the sans, serif, and mono faces for\nyour project\n----------------------------------------\ncurrently available:\n\n'system'\n'united-sans'\n'source-sans-pro'\n'helvetica'\n'georgia'\n'merriweather'\n'roboto-mono'\n----------------------------------------\n*/\n/*\n----------------------------------------\nFonts by type\n----------------------------------------\nSet the heading, body, code, and alt\nfaces for your project from\n\n$theme-font-sans\n$theme-font-serif\n$theme-font-mono\n$theme-font-cond\n----------------------------------------\n*/\n/*\n----------------------------------------\nType scale\n----------------------------------------\nDefine your project's type scale using\nvalues from the USWDS system type scale\n\n1-20\n----------------------------------------\n*/\n/*\n----------------------------------------\nFont weights\n----------------------------------------\nAssign weights 100-900\nOr use `false` for unneeded weights.\n----------------------------------------\n*/\n/*\n----------------------------------------\nPalette colors\n----------------------------------------\n*/\n/*\n----------------------------------------\nState colors\n----------------------------------------\n*/\n/*\n----------------------------------------\nBorder radius\n----------------------------------------\n2px           2px\n0.5           4px\n1             8px\n1.5           12px\n2             16px\n2.5           20px\n3             24px\n4             32px\n5             40px\n6             48px\n7             56px\n8             64px\n9             72px\n----------------------------------------\n*/\n/*\n----------------------------------------\nColumn gap\n----------------------------------------\n2px         2px\n0.5         4px\n1           8px\n2           16px\n3           24px\n4           32px\n5           48px\n----------------------------------------\n*/\n/*\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n* * * * * ==============================\n========================================\n========================================\n========================================\n----------------------------------------\nUSWDS UTILITIES SETTINGS\n----------------------------------------\n*/\n/*\n----------------------------------------\nGlobal colors\n----------------------------------------\nThe following plugins will be added to\n- background-color\n- border-color\n- color\n- text-decoration-color\n----------------------------------------\n*/\n/*\n----------------------------------------\nSettings\n----------------------------------------\n*/\n/*\n----------------------------------------\nValues\n----------------------------------------\n*/\n.uswds html, html.uswds {\n  font-family: sans-serif;\n  /* 1 */\n  -ms-text-size-adjust: 100%;\n  /* 2 */\n  -webkit-text-size-adjust: 100%;\n  /* 2 */ }\n\n.uswds body, body.uswds {\n  margin: 0; }\n\n.uswds article, article.uswds,\n.uswds aside, aside.uswds,\n.uswds details, details.uswds,\n.uswds figcaption, figcaption.uswds,\n.uswds figure, figure.uswds,\n.uswds footer, footer.uswds,\n.uswds header, header.uswds,\n.uswds hgroup, hgroup.uswds,\n.uswds main, main.uswds,\n.uswds menu, menu.uswds,\n.uswds nav, nav.uswds,\n.uswds section, section.uswds,\n.uswds summary, summary.uswds {\n  display: block; }\n\n.uswds audio, audio.uswds,\n.uswds canvas, canvas.uswds,\n.uswds progress, progress.uswds,\n.uswds video, video.uswds {\n  display: inline-block;\n  /* 1 */\n  vertical-align: baseline;\n  /* 2 */ }\n\n.uswds audio:not([controls]), audio:not([controls]).uswds {\n  display: none;\n  height: 0; }\n\n.uswds [hidden], [hidden].uswds,\n.uswds template, template.uswds {\n  display: none; }\n\n.uswds a, a.uswds {\n  background-color: transparent; }\n\n.uswds a:active, a:active.uswds,\n.uswds a:hover, a:hover.uswds {\n  outline: 0; }\n\n.uswds abbr[title], abbr[title].uswds {\n  border-bottom: 1px dotted; }\n\n.uswds b, b.uswds,\n.uswds strong, strong.uswds {\n  font-weight: bold; }\n\n.uswds dfn, dfn.uswds {\n  font-style: italic; }\n\nh1 {\n  font-size: 2em;\n  margin: 0.67em 0; }\n\n.uswds mark, mark.uswds {\n  background: #ff0;\n  color: #000; }\n\n.uswds small, small.uswds {\n  font-size: 80%; }\n\n.uswds sub, sub.uswds,\n.uswds sup, sup.uswds {\n  font-size: 75%;\n  line-height: 0;\n  position: relative;\n  vertical-align: baseline; }\n\n.uswds sup, sup.uswds {\n  top: -0.5em; }\n\n.uswds sub, sub.uswds {\n  bottom: -0.25em; }\n\n.uswds img, img.uswds {\n  border: 0; }\n\n.uswds svg:not(:root), svg:not(:root).uswds {\n  overflow: hidden; }\n\n.uswds figure, figure.uswds {\n  margin: 1em 40px; }\n\n.uswds hr, hr.uswds {\n  box-sizing: content-box;\n  height: 0; }\n\n.uswds pre, pre.uswds {\n  overflow: auto; }\n\n.uswds code, code.uswds,\n.uswds kbd, kbd.uswds,\n.uswds pre, pre.uswds,\n.uswds samp, samp.uswds {\n  font-family: monospace, monospace;\n  font-size: 1em; }\n\n.uswds button, button.uswds,\n.uswds input, input.uswds,\n.uswds optgroup, optgroup.uswds,\n.uswds select, select.uswds,\n.uswds textarea, textarea.uswds {\n  color: inherit;\n  /* 1 */\n  font: inherit;\n  /* 2 */\n  margin: 0;\n  /* 3 */ }\n\n.uswds button, button.uswds {\n  overflow: visible; }\n\n.uswds button, button.uswds,\n.uswds select, select.uswds {\n  text-transform: none; }\n\n.uswds button, button.uswds,\nhtml input[type=\"button\"],\n.uswds input[type=\"reset\"], input[type=\"reset\"].uswds,\n.uswds input[type=\"submit\"], input[type=\"submit\"].uswds {\n  -webkit-appearance: button;\n  /* 2 */\n  cursor: pointer;\n  /* 3 */ }\n\n.uswds button[disabled], button[disabled].uswds,\nhtml input[disabled] {\n  cursor: default; }\n\n.uswds button::-moz-focus-inner, button::-moz-focus-inner.uswds,\n.uswds input::-moz-focus-inner, input::-moz-focus-inner.uswds {\n  border: 0;\n  padding: 0; }\n\n.uswds input, input.uswds {\n  line-height: normal; }\n\n.uswds input[type=\"checkbox\"], input[type=\"checkbox\"].uswds,\n.uswds input[type=\"radio\"], input[type=\"radio\"].uswds {\n  box-sizing: border-box;\n  /* 1 */\n  padding: 0;\n  /* 2 */ }\n\n.uswds input[type=\"number\"]::-webkit-inner-spin-button, input[type=\"number\"]::-webkit-inner-spin-button.uswds,\n.uswds input[type=\"number\"]::-webkit-outer-spin-button, input[type=\"number\"]::-webkit-outer-spin-button.uswds {\n  height: auto; }\n\n.uswds input[type=\"search\"], input[type=\"search\"].uswds {\n  -webkit-appearance: textfield;\n  /* 1 */\n  box-sizing: content-box;\n  /* 2 */ }\n\n.uswds input[type=\"search\"]::-webkit-search-cancel-button, input[type=\"search\"]::-webkit-search-cancel-button.uswds,\n.uswds input[type=\"search\"]::-webkit-search-decoration, input[type=\"search\"]::-webkit-search-decoration.uswds {\n  -webkit-appearance: none; }\n\n.uswds fieldset, fieldset.uswds {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em; }\n\n.uswds legend, legend.uswds {\n  border: 0;\n  /* 1 */\n  padding: 0;\n  /* 2 */ }\n\n.uswds textarea, textarea.uswds {\n  overflow: auto; }\n\n.uswds optgroup, optgroup.uswds {\n  font-weight: bold; }\n\n.uswds table, table.uswds {\n  border-collapse: collapse;\n  border-spacing: 0; }\n\n.uswds td, td.uswds,\n.uswds th, th.uswds {\n  padding: 0; }\n\n/*\n========================================\ncore/units\n----------------------------------------\nThe master palettes of\n- colors\n- whitespace\n- typescale\n----------------------------------------\nThis file is not meant to be modified\nby USWDS project teams. Change your\nproject values in\nproject/uswds-project-settings\n----------------------------------------\n*/\n/*\n----------------------------------------\nSpacing grid multiplier\n----------------------------------------\n*/\n/*\n----------------------------------------\nSpacing grid\n----------------------------------------\n*/\n/*\n----------------------------------------\nBreakpoints\n----------------------------------------\n*/\n/*\n----------------------------------------\nUnits\n----------------------------------------\n*/\n/*\n----------------------------------------\nLayout grid widths\n----------------------------------------\n*/\n/*\n----------------------------------------\nType scale\n----------------------------------------\n*/\n/*\n----------------------------------------\nMeasure\n----------------------------------------\n*/\n/*\n----------------------------------------\nLine height\n----------------------------------------\n*/\n/*\n----------------------------------------\nBase cap height\n----------------------------------------\n500px 'N' height measured in Sketch.\nUsed for normalizing font sizes.\nCurrent normalized to Apple system\nfonts.\n----------------------------------------\n*/\n/*\n----------------------------------------\nColors\n----------------------------------------\nTODO: It would be great to get these to\nload from a common location like tokens\nstored as YAML.\n----------------------------------------\n*/\n/*\n========================================\nUSWDS 2.0 Variables\nUse for computed variables not meant\nto be set by system users.\n----------------------------------------\nMaster system palette variables are set\nin core/_units\n----------------------------------------\nAnything meant to be set directly should\ngo in:\n\ncore/_settings\n(for default settings)\n\nand its pair:\n©\nproject/_uswds-project-settings\n(for project overrides)\n----------------------------------------\n*/\n/*\n----------------------------------------\nNamespace\n----------------------------------------\n*/\n/*\n----------------------------------------\nSpacing\n----------------------------------------\nAll spacing values that can be called\nby spacing()\n----------------------------------------\n*/\n/*\n----------------------------------------\nFont stack\n----------------------------------------\nCompute the project font stack based on\nthe project fonts and the font\ndefinition values set in\ncore/_font-definitions\n----------------------------------------\n*/\n/*\n----------------------------------------\nSet basic font rules for the font\nutilities to reference.\n----------------------------------------\nTODO: Do these need to integrate the\nnamespace var set in utilities-settings?\n----------------------------------------\n*/\n[class*='font-mono'], .family-mono {\n  font-family: \"Roboto Mono Web\", \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace; }\n\n[class*='font-sans'], .family-sans {\n  font-family: \"Source Sans Pro Web\", \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif; }\n\n[class*='font-serif'], .family-serif {\n  font-family: \"Merriweather Web\", \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif; }\n\n[class*='font-heading'], .family-heading {\n  font-family: \"Source Sans Pro Web\", \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif; }\n\n[class*='font-body'], .family-body {\n  font-family: \"Merriweather Web\", \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif; }\n\n[class*='font-code'], .family-code {\n  font-family: \"Roboto Mono Web\", \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace; }\n\n/*\n----------------------------------------\nBuild the project type scale map\n----------------------------------------\n*/\n/*\n----------------------------------------\nBorder-radius\n----------------------------------------\n*/\n/*\n----------------------------------------\nColumn gaps\n----------------------------------------\n*/\n/*\n----------------------------------------\nColors and palettes\n----------------------------------------\n*/\n/*\n========================================\nOld USWDS Variables\nMany of these will be deprecated\nor converted into settings\n----------------------------------------\nThese variables drive almost every\naspect of the U.S. Web Design system.\nEvery variable is declared as !default\nso that it can be overridden by a\nprevious import.\n\nXXX Do not modify this file!\n\nIf you want to override a variable, set\nthat variable in one of your own partials,\nthen\n@import '{path/to/uswds/}core/variables'.\n----------------------------------------\n*/\n/*\n----------------------------------------\nTypography\n----------------------------------------\nTODO: Rethink naming and consolidate in\nsettings\n----------------------------------------\n*/\n/*\n----------------------------------------\nFont weights\n----------------------------------------\nTODO: Consolidate in settings\n----------------------------------------\n*/\n/*\n----------------------------------------\nColors\n----------------------------------------\nTODO:\n1. These should be set in settings\n2. Probably need different naming rubric\n----------------------------------------\n*/\n/*\n----------------------------------------\nMobile First Breakpoints\n----------------------------------------\nTODO: deprecate in favor of the values\nin settings\n----------------------------------------\n*/\n/*\n----------------------------------------\nGrid column counts by screen size\n----------------------------------------\nTODO: Lots of grid work to come\n----------------------------------------\n*/\n/*\n----------------------------------------\n@media single-keyword helpers\n----------------------------------------\nTODO: Need to rethink these\n----------------------------------------\n*/\n/*\n----------------------------------------\nSet $asset-pipeline to true if you're\nusing the Rails Asset Pipeline\n----------------------------------------\nTODO: This should be set in settings\n----------------------------------------\n*/\n/*\n----------------------------------------\nMagic numbers\n----------------------------------------\nTODO: Evaluate which of these should be\nset in settings and which are static or\ncalculated variables\n----------------------------------------\n*/\n/*\n----------------------------------------\nUSWDS Properties\n----------------------------------------\n*/\n.usa-sr-only {\n  position: absolute;\n  left: -999em; }\n\n/*\n----------------------------------------\nfamily()\n----------------------------------------\nGet a font-family stack\n----------------------------------------\n*/\n/*\n----------------------------------------\nsize()\n----------------------------------------\nGet a normalized font-size in rem from\na family and a type size in either\nsystem scale or project scale\n----------------------------------------\n*/\n/*\n----------------------------------------\nfont()\n----------------------------------------\nGet a font-family stack\nAND\nGet a normalized font-size in rem from\na family and a type size in either\nsystem scale or project scale\n----------------------------------------\n*/\n.usa-grid,\n.usa-grid-full {\n  max-width: 960px;\n  margin-left: auto;\n  margin-right: auto; }\n  .usa-grid::after,\n  .usa-grid-full::after {\n    clear: both;\n    content: \"\";\n    display: block; }\n\n.usa-grid {\n  padding-left: 1rem;\n  padding-right: 1rem; }\n  @media screen and (min-width: 801px) {\n    .usa-grid {\n      padding-left: 1.875rem;\n      padding-right: 1.875rem; } }\n\n.usa-grid-full {\n  padding: 0; }\n\n@media screen and (min-width: 801px) {\n  .usa-width-one-whole {\n    float: left;\n    display: block;\n    margin-right: 4.82916%;\n    width: 100%; }\n    .usa-width-one-whole:last-child {\n      margin-right: 0; }\n  .usa-width-one-half {\n    float: left;\n    display: block;\n    margin-right: 4.82916%;\n    width: 47.58542%; }\n    .usa-width-one-half:last-child {\n      margin-right: 0; }\n  .usa-width-one-third {\n    float: left;\n    display: block;\n    margin-right: 4.82916%;\n    width: 30.11389%; }\n    .usa-width-one-third:last-child {\n      margin-right: 0; }\n  .usa-width-two-thirds {\n    float: left;\n    display: block;\n    margin-right: 4.82916%;\n    width: 65.05695%; }\n    .usa-width-two-thirds:last-child {\n      margin-right: 0; }\n  .usa-width-one-fourth {\n    float: left;\n    display: block;\n    margin-right: 4.82916%;\n    width: 47.58542%; }\n    .usa-width-one-fourth:last-child {\n      margin-right: 0; }\n    .usa-width-one-fourth:nth-child(2n) {\n      margin-right: 0; }\n  .usa-width-three-fourths {\n    float: left;\n    display: block;\n    margin-right: 4.82916%;\n    width: 100%; }\n    .usa-width-three-fourths:last-child {\n      margin-right: 0; }\n  .usa-width-one-sixth {\n    float: left;\n    display: block;\n    margin-right: 4.82916%;\n    width: 30.11389%; }\n    .usa-width-one-sixth:last-child {\n      margin-right: 0; }\n    .usa-width-one-sixth:nth-child(3n) {\n      margin-right: 0; }\n  .usa-width-five-sixths {\n    float: left;\n    display: block;\n    margin-right: 4.82916%;\n    width: 65.05695%; }\n    .usa-width-five-sixths:last-child {\n      margin-right: 0; }\n  .usa-width-one-twelfth {\n    float: left;\n    display: block;\n    margin-right: 4.82916%;\n    width: 30.11389%; }\n    .usa-width-one-twelfth:last-child {\n      margin-right: 0; }\n    .usa-width-one-twelfth:nth-child(3n) {\n      margin-right: 0; }\n  .usa-width-five-twelfths {\n    float: left;\n    display: block;\n    margin-right: 4.82916%;\n    width: 30.11389%; }\n    .usa-width-five-twelfths:last-child {\n      margin-right: 0; }\n  .usa-width-seven-twelfths {\n    float: left;\n    display: block;\n    margin-right: 4.82916%;\n    width: 65.05695%; }\n    .usa-width-seven-twelfths:last-child {\n      margin-right: 0; } }\n\n@media screen and (min-width: 1025px) {\n  .usa-width-one-whole {\n    float: left;\n    display: block;\n    margin-right: 2.35765%;\n    width: 100%; }\n    .usa-width-one-whole:last-child {\n      margin-right: 0; }\n  .usa-width-one-half {\n    float: left;\n    display: block;\n    margin-right: 2.35765%;\n    width: 48.82117%; }\n    .usa-width-one-half:last-child {\n      margin-right: 0; }\n  .usa-width-one-third {\n    float: left;\n    display: block;\n    margin-right: 2.35765%;\n    width: 31.76157%; }\n    .usa-width-one-third:last-child {\n      margin-right: 0; }\n  .usa-width-two-thirds {\n    float: left;\n    display: block;\n    margin-right: 2.35765%;\n    width: 65.88078%; }\n    .usa-width-two-thirds:last-child {\n      margin-right: 0; }\n  .usa-width-one-fourth {\n    float: left;\n    display: block;\n    margin-right: 2.35765%;\n    width: 23.23176%; }\n    .usa-width-one-fourth:last-child {\n      margin-right: 0; }\n    .usa-width-one-fourth:nth-child(2n) {\n      float: left;\n      display: block;\n      margin-right: 2.35765%;\n      width: 23.23176%; }\n      .usa-width-one-fourth:nth-child(2n):last-child {\n        margin-right: 0; }\n    .usa-width-one-fourth:nth-child(4n) {\n      margin-right: 0; }\n  .usa-width-three-fourths {\n    float: left;\n    display: block;\n    margin-right: 2.35765%;\n    width: 74.41059%; }\n    .usa-width-three-fourths:last-child {\n      margin-right: 0; }\n  .usa-width-one-sixth {\n    float: left;\n    display: block;\n    margin-right: 2.35765%;\n    width: 14.70196%; }\n    .usa-width-one-sixth:last-child {\n      margin-right: 0; }\n    .usa-width-one-sixth:nth-child(3n) {\n      float: left;\n      display: block;\n      margin-right: 2.35765%;\n      width: 14.70196%; }\n      .usa-width-one-sixth:nth-child(3n):last-child {\n        margin-right: 0; }\n    .usa-width-one-sixth:nth-child(6n) {\n      margin-right: 0; }\n  .usa-width-five-sixths {\n    float: left;\n    display: block;\n    margin-right: 2.35765%;\n    width: 82.94039%; }\n    .usa-width-five-sixths:last-child {\n      margin-right: 0; }\n  .usa-width-one-twelfth {\n    float: left;\n    display: block;\n    margin-right: 2.35765%;\n    width: 6.17215%; }\n    .usa-width-one-twelfth:last-child {\n      margin-right: 0; }\n    .usa-width-one-twelfth:nth-child(3n) {\n      float: left;\n      display: block;\n      margin-right: 2.35765%;\n      width: 6.17215%; }\n      .usa-width-one-twelfth:nth-child(3n):last-child {\n        margin-right: 0; }\n    .usa-width-one-twelfth:nth-child(12n) {\n      margin-right: 0; }\n  .usa-width-five-twelfths {\n    float: left;\n    display: block;\n    margin-right: 2.35765%;\n    width: 40.29137%; }\n    .usa-width-five-twelfths:last-child {\n      margin-right: 0; }\n  .usa-width-seven-twelfths {\n    float: left;\n    display: block;\n    margin-right: 2.35765%;\n    width: 57.35098%; }\n    .usa-width-seven-twelfths:last-child {\n      margin-right: 0; } }\n\n.usa-end-row {\n  margin-right: 0; }\n\n.usa-offset-one-twelfth {\n  margin-left: 8.5298%; }\n\n.usa-offset-one-sixth {\n  margin-left: 17.05961%; }\n\n.usa-offset-one-fourth {\n  margin-left: 25.58941%; }\n\n.usa-offset-one-third {\n  margin-left: 34.11922%; }\n\n.usa-offset-five-twelfths {\n  margin-left: 42.64902%; }\n\n.usa-offset-one-half {\n  margin-left: 51.17883%; }\n\n.usa-offset-seven-twelfths {\n  margin-left: 59.70863%; }\n\n.usa-offset-two-thirds {\n  margin-left: 68.23843%; }\n\n.usa-offset-three-fourths {\n  margin-left: 76.76824%; }\n\n.usa-offset-five-sixths {\n  margin-left: 85.29804%; }\n\n.usa-offset-eleven-twelfths {\n  margin-left: 93.82785%; }\n\n.uswds {\n  box-sizing: border-box; }\n\n.uswds *,\n.uswds *::before,\n.uswds *::after {\n  box-sizing: inherit; }\n\n.uswds body,\nbody.uswds {\n  background-color: white;\n  overflow-x: hidden; }\n\n.lt-ie9 * {\n  filter: none !important;\n  /* stylelint-disable-line declaration-no-important */ }\n\n[hidden] {\n  display: none !important;\n  /* stylelint-disable-line declaration-no-important */ }\n\n.uswds *:focus,\n.usa-focus {\n  outline: 2px dotted #adadad;\n  outline-offset: 3px; }\n\n/* stylelint-disable selector-no-qualifying-type */\n.usa-button,\n.usa-button-primary,\n.usa-button:visited,\n.usa-button-primary:visited {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n  margin-top: 0.5em;\n  margin-right: 0.5em;\n  margin-bottom: 0.5em;\n  appearance: none;\n  background-color: #0069b4;\n  border: 0;\n  border-radius: 5px;\n  color: white;\n  cursor: pointer;\n  display: inline-block;\n  font-family: \"Source Sans Pro Web\", \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n  font-size: 1.0625rem;\n  font-weight: 700;\n  line-height: 1;\n  padding: 1rem 2rem;\n  text-align: center;\n  text-decoration: none;\n  width: 100%; }\n  @media screen and (min-width: 481px) {\n    .usa-button,\n    .usa-button-primary,\n    .usa-button:visited,\n    .usa-button-primary:visited {\n      width: auto; } }\n  .usa-button:hover, .usa-button.usa-button-hover,\n  .usa-button-primary:hover,\n  .usa-button-primary.usa-button-hover,\n  .usa-button:visited:hover,\n  .usa-button:visited.usa-button-hover,\n  .usa-button-primary:visited:hover,\n  .usa-button-primary:visited.usa-button-hover {\n    background-color: #1e4f94;\n    border-bottom: 0;\n    color: white;\n    text-decoration: none; }\n  .usa-button:active, .usa-button.usa-button-active,\n  .usa-button-primary:active,\n  .usa-button-primary.usa-button-active,\n  .usa-button:visited:active,\n  .usa-button:visited.usa-button-active,\n  .usa-button-primary:visited:active,\n  .usa-button-primary:visited.usa-button-active {\n    background-color: #112a4d; }\n  .usa-button.usa-button-primary-alt,\n  .usa-button-primary.usa-button-primary-alt,\n  .usa-button:visited.usa-button-primary-alt,\n  .usa-button-primary:visited.usa-button-primary-alt {\n    background-color: #02c2e8;\n    color: #171717; }\n    .usa-button.usa-button-primary-alt:hover, .usa-button.usa-button-primary-alt.usa-button-hover,\n    .usa-button-primary.usa-button-primary-alt:hover,\n    .usa-button-primary.usa-button-primary-alt.usa-button-hover,\n    .usa-button:visited.usa-button-primary-alt:hover,\n    .usa-button:visited.usa-button-primary-alt.usa-button-hover,\n    .usa-button-primary:visited.usa-button-primary-alt:hover,\n    .usa-button-primary:visited.usa-button-primary-alt.usa-button-hover {\n      background-color: #00abd1; }\n    .usa-button.usa-button-primary-alt:active, .usa-button.usa-button-primary-alt.usa-button-active,\n    .usa-button-primary.usa-button-primary-alt:active,\n    .usa-button-primary.usa-button-primary-alt.usa-button-active,\n    .usa-button:visited.usa-button-primary-alt:active,\n    .usa-button:visited.usa-button-primary-alt.usa-button-active,\n    .usa-button-primary:visited.usa-button-primary-alt:active,\n    .usa-button-primary:visited.usa-button-primary-alt.usa-button-active {\n      background-color: #2f6794;\n      color: white; }\n  .usa-button.usa-button-secondary,\n  .usa-button-primary.usa-button-secondary,\n  .usa-button:visited.usa-button-secondary,\n  .usa-button-primary:visited.usa-button-secondary {\n    background-color: white;\n    box-shadow: inset 0 0 0 2px #0069b4;\n    color: #0069b4; }\n    .usa-button.usa-button-secondary:hover, .usa-button.usa-button-secondary.usa-button-hover,\n    .usa-button-primary.usa-button-secondary:hover,\n    .usa-button-primary.usa-button-secondary.usa-button-hover,\n    .usa-button:visited.usa-button-secondary:hover,\n    .usa-button:visited.usa-button-secondary.usa-button-hover,\n    .usa-button-primary:visited.usa-button-secondary:hover,\n    .usa-button-primary:visited.usa-button-secondary.usa-button-hover {\n      box-shadow: inset 0 0 0 2px #1e4f94;\n      color: #1e4f94; }\n    .usa-button.usa-button-secondary:active, .usa-button.usa-button-secondary.usa-button-active,\n    .usa-button-primary.usa-button-secondary:active,\n    .usa-button-primary.usa-button-secondary.usa-button-active,\n    .usa-button:visited.usa-button-secondary:active,\n    .usa-button:visited.usa-button-secondary.usa-button-active,\n    .usa-button-primary:visited.usa-button-secondary:active,\n    .usa-button-primary:visited.usa-button-secondary.usa-button-active {\n      box-shadow: inset 0 0 0 2px #112a4d;\n      color: #112a4d; }\n  .usa-button.usa-button-secondary-inverse, .usa-button.usa-button-outline-inverse,\n  .usa-button-primary.usa-button-secondary-inverse,\n  .usa-button-primary.usa-button-outline-inverse,\n  .usa-button:visited.usa-button-secondary-inverse,\n  .usa-button:visited.usa-button-outline-inverse,\n  .usa-button-primary:visited.usa-button-secondary-inverse,\n  .usa-button-primary:visited.usa-button-outline-inverse {\n    background: transparent;\n    box-shadow: inset 0 0 0 2px white;\n    color: white; }\n    .usa-button.usa-button-secondary-inverse:hover, .usa-button.usa-button-secondary-inverse.usa-button-hover, .usa-button.usa-button-outline-inverse:hover, .usa-button.usa-button-outline-inverse.usa-button-hover,\n    .usa-button-primary.usa-button-secondary-inverse:hover,\n    .usa-button-primary.usa-button-secondary-inverse.usa-button-hover,\n    .usa-button-primary.usa-button-outline-inverse:hover,\n    .usa-button-primary.usa-button-outline-inverse.usa-button-hover,\n    .usa-button:visited.usa-button-secondary-inverse:hover,\n    .usa-button:visited.usa-button-secondary-inverse.usa-button-hover,\n    .usa-button:visited.usa-button-outline-inverse:hover,\n    .usa-button:visited.usa-button-outline-inverse.usa-button-hover,\n    .usa-button-primary:visited.usa-button-secondary-inverse:hover,\n    .usa-button-primary:visited.usa-button-secondary-inverse.usa-button-hover,\n    .usa-button-primary:visited.usa-button-outline-inverse:hover,\n    .usa-button-primary:visited.usa-button-outline-inverse.usa-button-hover {\n      box-shadow: inset 0 0 0 2px #d5d8db;\n      color: #d5d8db; }\n    .usa-button.usa-button-secondary-inverse:active, .usa-button.usa-button-secondary-inverse.usa-button-active, .usa-button.usa-button-outline-inverse:active, .usa-button.usa-button-outline-inverse.usa-button-active,\n    .usa-button-primary.usa-button-secondary-inverse:active,\n    .usa-button-primary.usa-button-secondary-inverse.usa-button-active,\n    .usa-button-primary.usa-button-outline-inverse:active,\n    .usa-button-primary.usa-button-outline-inverse.usa-button-active,\n    .usa-button:visited.usa-button-secondary-inverse:active,\n    .usa-button:visited.usa-button-secondary-inverse.usa-button-active,\n    .usa-button:visited.usa-button-outline-inverse:active,\n    .usa-button:visited.usa-button-outline-inverse.usa-button-active,\n    .usa-button-primary:visited.usa-button-secondary-inverse:active,\n    .usa-button-primary:visited.usa-button-secondary-inverse.usa-button-active,\n    .usa-button-primary:visited.usa-button-outline-inverse:active,\n    .usa-button-primary:visited.usa-button-outline-inverse.usa-button-active {\n      box-shadow: inset 0 0 0 2px #adadad;\n      color: #d5d8db; }\n  .usa-button.usa-button-gray,\n  .usa-button-primary.usa-button-gray,\n  .usa-button:visited.usa-button-gray,\n  .usa-button-primary:visited.usa-button-gray {\n    background-color: #595d63; }\n    .usa-button.usa-button-gray:hover, .usa-button.usa-button-gray.usa-button-hover,\n    .usa-button-primary.usa-button-gray:hover,\n    .usa-button-primary.usa-button-gray.usa-button-hover,\n    .usa-button:visited.usa-button-gray:hover,\n    .usa-button:visited.usa-button-gray.usa-button-hover,\n    .usa-button-primary:visited.usa-button-gray:hover,\n    .usa-button-primary:visited.usa-button-gray.usa-button-hover {\n      background-color: #292a2b; }\n    .usa-button.usa-button-gray:active, .usa-button.usa-button-gray.usa-button-active,\n    .usa-button-primary.usa-button-gray:active,\n    .usa-button-primary.usa-button-gray.usa-button-active,\n    .usa-button:visited.usa-button-gray:active,\n    .usa-button:visited.usa-button-gray.usa-button-active,\n    .usa-button-primary:visited.usa-button-gray:active,\n    .usa-button-primary:visited.usa-button-gray.usa-button-active {\n      background-color: #171717; }\n  .usa-button.usa-button-red,\n  .usa-button-primary.usa-button-red,\n  .usa-button:visited.usa-button-red,\n  .usa-button-primary:visited.usa-button-red {\n    background-color: #d83731; }\n    .usa-button.usa-button-red:hover, .usa-button.usa-button-red.usa-button-hover,\n    .usa-button-primary.usa-button-red:hover,\n    .usa-button-primary.usa-button-red.usa-button-hover,\n    .usa-button:visited.usa-button-red:hover,\n    .usa-button:visited.usa-button-red.usa-button-hover,\n    .usa-button-primary:visited.usa-button-red:hover,\n    .usa-button-primary:visited.usa-button-red.usa-button-hover {\n      background-color: #c31f0a; }\n    .usa-button.usa-button-red:active, .usa-button.usa-button-red.usa-button-active,\n    .usa-button-primary.usa-button-red:active,\n    .usa-button-primary.usa-button-red.usa-button-active,\n    .usa-button:visited.usa-button-red:active,\n    .usa-button:visited.usa-button-red.usa-button-active,\n    .usa-button-primary:visited.usa-button-red:active,\n    .usa-button-primary:visited.usa-button-red.usa-button-active {\n      background-color: #9c1503; }\n  .usa-button.usa-button-big,\n  .usa-button-primary.usa-button-big,\n  .usa-button:visited.usa-button-big,\n  .usa-button-primary:visited.usa-button-big {\n    font-size: 1.9rem;\n    padding: 1.5rem 3rem; }\n  .usa-button:disabled,\n  .usa-button-primary:disabled,\n  .usa-button:visited:disabled,\n  .usa-button-primary:visited:disabled {\n    background-color: #d5d8db;\n    pointer-events: none; }\n    .usa-button:disabled:hover, .usa-button:disabled.usa-button-hover, .usa-button:disabled:active, .usa-button:disabled.usa-button-active, .usa-button:disabled:focus, .usa-button:disabled.usa-focus,\n    .usa-button-primary:disabled:hover,\n    .usa-button-primary:disabled.usa-button-hover,\n    .usa-button-primary:disabled:active,\n    .usa-button-primary:disabled.usa-button-active,\n    .usa-button-primary:disabled:focus,\n    .usa-button-primary:disabled.usa-focus,\n    .usa-button:visited:disabled:hover,\n    .usa-button:visited:disabled.usa-button-hover,\n    .usa-button:visited:disabled:active,\n    .usa-button:visited:disabled.usa-button-active,\n    .usa-button:visited:disabled:focus,\n    .usa-button:visited:disabled.usa-focus,\n    .usa-button-primary:visited:disabled:hover,\n    .usa-button-primary:visited:disabled.usa-button-hover,\n    .usa-button-primary:visited:disabled:active,\n    .usa-button-primary:visited:disabled.usa-button-active,\n    .usa-button-primary:visited:disabled:focus,\n    .usa-button-primary:visited:disabled.usa-focus {\n      background-color: #d5d8db;\n      border: 0;\n      box-shadow: none; }\n\n/* stylelint-disable */\n.usa-button-disabled {\n  background-color: #d5d8db;\n  pointer-events: none; }\n  .usa-button-disabled:hover, .usa-button-disabled.usa-button-hover, .usa-button-disabled:active, .usa-button-disabled.usa-button-active, .usa-button-disabled:focus, .usa-button-disabled.usa-focus {\n    background-color: #d5d8db;\n    border: 0;\n    box-shadow: none; }\n\n.usa-button-secondary-disabled,\n.usa-button-secondary-inverse-disabled,\n.usa-button-secondary:disabled,\n.usa-button-secondary-inverse:disabled,\n.usa-button-outline-inverse:disabled {\n  box-shadow: inset 0 0 0 2px #d5d8db;\n  pointer-events: none;\n  color: #d5d8db; }\n  .usa-button-secondary-disabled:hover, .usa-button-secondary-disabled.usa-button-hover, .usa-button-secondary-disabled:active, .usa-button-secondary-disabled.usa-button-active, .usa-button-secondary-disabled:focus, .usa-button-secondary-disabled.usa-focus,\n  .usa-button-secondary-inverse-disabled:hover,\n  .usa-button-secondary-inverse-disabled.usa-button-hover,\n  .usa-button-secondary-inverse-disabled:active,\n  .usa-button-secondary-inverse-disabled.usa-button-active,\n  .usa-button-secondary-inverse-disabled:focus,\n  .usa-button-secondary-inverse-disabled.usa-focus,\n  .usa-button-secondary:disabled:hover,\n  .usa-button-secondary:disabled.usa-button-hover,\n  .usa-button-secondary:disabled:active,\n  .usa-button-secondary:disabled.usa-button-active,\n  .usa-button-secondary:disabled:focus,\n  .usa-button-secondary:disabled.usa-focus,\n  .usa-button-secondary-inverse:disabled:hover,\n  .usa-button-secondary-inverse:disabled.usa-button-hover,\n  .usa-button-secondary-inverse:disabled:active,\n  .usa-button-secondary-inverse:disabled.usa-button-active,\n  .usa-button-secondary-inverse:disabled:focus,\n  .usa-button-secondary-inverse:disabled.usa-focus,\n  .usa-button-outline-inverse:disabled:hover,\n  .usa-button-outline-inverse:disabled.usa-button-hover,\n  .usa-button-outline-inverse:disabled:active,\n  .usa-button-outline-inverse:disabled.usa-button-active,\n  .usa-button-outline-inverse:disabled:focus,\n  .usa-button-outline-inverse:disabled.usa-focus {\n    background-color: white;\n    border: 0; }\n\nhtml .usa-button-secondary-disabled,\n.usa-button-secondary:disabled {\n  background-color: white; }\n\nhtml .usa-button-secondary-inverse-disabled,\n.usa-button-secondary-inverse:disabled {\n  background-color: transparent;\n  color: #595d63;\n  box-shadow: inset 0 0 0 2px #595d63; }\n\n.usa-button-unstyled {\n  background-color: transparent;\n  border: 0;\n  border-radius: 0;\n  font-weight: 400;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  -webkit-font-smoothing: auto; }\n  .usa-button-unstyled:hover {\n    background-color: transparent; }\n\n/*\n@import 'elements/embed';\n@import 'elements/figure';\n@import 'elements/inputs';\n@import 'elements/labels';\n@import 'elements/list';\n@import 'elements/table';\n@import 'elements/typography';\n\n// Components -------------- //\n*/\n.usa-accordion,\n.usa-accordion-bordered {\n  margin-bottom: 0;\n  margin-top: 0;\n  list-style-type: none;\n  padding-left: 0;\n  color: #171717;\n  margin: 0;\n  padding: 0;\n  width: 100%; }\n  .usa-accordion > li,\n  .usa-accordion-bordered > li {\n    margin-bottom: 0; }\n  .usa-accordion > ul li ul,\n  .usa-accordion-bordered > ul li ul {\n    list-style: disc; }\n    .usa-accordion > ul li ul > li > ul,\n    .usa-accordion-bordered > ul li ul > li > ul {\n      list-style: circle; }\n      .usa-accordion > ul li ul > li > ul > li > ul,\n      .usa-accordion-bordered > ul li ul > li > ul > li > ul {\n        list-style: square; }\n  .usa-accordion + .usa-accordion,\n  .usa-accordion + .usa-accordion-bordered,\n  .usa-accordion-bordered + .usa-accordion,\n  .usa-accordion-bordered + .usa-accordion-bordered {\n    margin-top: 1rem; }\n  .usa-accordion > ul,\n  .usa-accordion-bordered > ul {\n    margin-bottom: 0;\n    margin-top: 0;\n    list-style-type: none;\n    padding-left: 0;\n    color: #171717;\n    margin: 0;\n    padding: 0;\n    width: 100%; }\n    .usa-accordion > ul > li,\n    .usa-accordion-bordered > ul > li {\n      margin-bottom: 0; }\n    .usa-accordion > ul > li,\n    .usa-accordion-bordered > ul > li {\n      background-color: #edeff0;\n      font-family: \"Source Sans Pro Web\", \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n      list-style: none;\n      margin-bottom: 0.5rem;\n      width: 100%; }\n    .usa-accordion > ul button,\n    .usa-accordion-bordered > ul button {\n      background-color: transparent;\n      border: 0;\n      border-radius: 0;\n      font-weight: 400;\n      margin: 0;\n      padding: 0;\n      text-align: left;\n      -webkit-font-smoothing: auto;\n      background-color: #edeff0;\n      background-image: url(\"../img/minus.png\");\n      background-image: url(\"../img/minus.svg\");\n      background-position: right 2rem center;\n      background-repeat: no-repeat;\n      background-size: 1.5rem;\n      color: #171717;\n      cursor: pointer;\n      display: inline-block;\n      font-family: \"Source Sans Pro Web\", \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n      font-weight: 700;\n      margin: 0;\n      padding: 1.5rem 5.5rem 1.5rem 2rem;\n      width: 100%; }\n      .usa-accordion > ul button:hover,\n      .usa-accordion-bordered > ul button:hover {\n        background-color: transparent; }\n      .usa-accordion > ul button:hover,\n      .usa-accordion-bordered > ul button:hover {\n        background-color: #d5d8db;\n        color: #171717; }\n      .usa-accordion > ul button h1,\n      .usa-accordion > ul button h2,\n      .usa-accordion > ul button h3,\n      .usa-accordion > ul button h4,\n      .usa-accordion > ul button h5,\n      .usa-accordion > ul button h6,\n      .usa-accordion-bordered > ul button h1,\n      .usa-accordion-bordered > ul button h2,\n      .usa-accordion-bordered > ul button h3,\n      .usa-accordion-bordered > ul button h4,\n      .usa-accordion-bordered > ul button h5,\n      .usa-accordion-bordered > ul button h6 {\n        margin: 0; }\n    .usa-accordion > ul [aria-expanded=false],\n    .usa-accordion-bordered > ul [aria-expanded=false] {\n      background-image: url(\"../img/plus.png\");\n      background-image: url(\"../img/plus.svg\");\n      background-repeat: no-repeat;\n      background-size: 1.5rem; }\n  .usa-accordion > li,\n  .usa-accordion-bordered > li {\n    background-color: #edeff0;\n    font-family: \"Source Sans Pro Web\", \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n    list-style: none;\n    margin-bottom: 0.5rem;\n    width: 100%; }\n\n.usa-accordion-bordered .usa-accordion-content {\n  border-bottom: 3px solid #edeff0;\n  border-left: 3px solid #edeff0;\n  border-right: 3px solid #edeff0; }\n\n.usa-accordion-content {\n  background-color: white;\n  overflow: auto;\n  padding: 1.5rem 2rem; }\n  .usa-accordion-content > *:first-child {\n    margin-top: 0; }\n  .usa-accordion-content > *:last-child {\n    margin-bottom: 0; }\n  .usa-accordion-content:not([aria-hidden]) {\n    position: absolute;\n    left: -999em; }\n  .usa-accordion-content[aria-hidden=true] {\n    display: none; }\n\n.usa-accordion-button {\n  background-color: transparent;\n  border: 0;\n  border-radius: 0;\n  font-weight: 400;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  -webkit-font-smoothing: auto;\n  background-color: #edeff0;\n  background-image: url(\"../img/minus.png\");\n  background-image: url(\"../img/minus.svg\");\n  background-position: right 2rem center;\n  background-repeat: no-repeat;\n  background-size: 1.5rem;\n  color: #171717;\n  cursor: pointer;\n  display: inline-block;\n  font-family: \"Source Sans Pro Web\", \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n  font-weight: 700;\n  margin: 0;\n  padding: 1.5rem 5.5rem 1.5rem 2rem;\n  width: 100%; }\n  .usa-accordion-button:hover {\n    background-color: transparent; }\n  .usa-accordion-button:hover {\n    background-color: #d5d8db;\n    color: #171717; }\n  .usa-accordion-button h1,\n  .usa-accordion-button h2,\n  .usa-accordion-button h3,\n  .usa-accordion-button h4,\n  .usa-accordion-button h5,\n  .usa-accordion-button h6 {\n    margin: 0; }\n\n.usa-accordion-button[aria-expanded=false] {\n  background-image: url(\"../img/plus.png\");\n  background-image: url(\"../img/plus.svg\");\n  background-repeat: no-repeat;\n  background-size: 1.5rem; }\n\n/*\n@import 'components/alerts';\n*/\n.usa-banner {\n  background-color: #edeff0;\n  padding-bottom: 0.4375rem; }\n  @media screen and (min-width: 481px) {\n    .usa-banner {\n      font-size: 0.8125rem;\n      padding-bottom: 0; } }\n\n.usa-banner-content {\n  padding-right: 1rem;\n  padding-bottom: 3px;\n  padding-left: 1rem;\n  background-color: transparent;\n  font-size: 0.9375rem;\n  padding-top: 1.25rem;\n  width: 100%; }\n  @media screen and (min-width: 801px) {\n    .usa-banner-content {\n      padding-bottom: 1.4375rem;\n      padding-top: 2.5rem; } }\n  @media screen and (min-width: 951px) {\n    .usa-banner-content {\n      padding-right: 1.875rem;\n      padding-left: 1.875rem; } }\n  .usa-banner-content p:first-child {\n    margin-top: 0.625rem; }\n    @media screen and (min-width: 801px) {\n      .usa-banner-content p:first-child {\n        margin-top: 0; } }\n\n.usa-banner-inner {\n  max-width: 1200px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-right: 1rem;\n  padding-left: 1rem;\n  max-width: 960px; }\n  .usa-banner-inner::after {\n    clear: both;\n    content: \"\";\n    display: block; }\n  @media screen and (min-width: 951px) {\n    .usa-banner-inner {\n      padding-right: 1.875rem;\n      padding-left: 1.875rem; } }\n\n.usa-banner-header {\n  padding-top: 0.34375rem;\n  padding-bottom: 0.34375rem;\n  font-size: 0.75rem;\n  font-weight: 400; }\n  @media screen and (min-width: 481px) {\n    .usa-banner-header {\n      padding-top: 0;\n      padding-bottom: 0; } }\n  .usa-banner-header p {\n    margin-top: 0;\n    margin-bottom: 0;\n    display: inline;\n    overflow: hidden;\n    vertical-align: middle; }\n    @media screen and (min-width: 481px) {\n      .usa-banner-header p {\n        margin-top: 2px;\n        margin-bottom: 2px;\n        display: inline-block; } }\n  .usa-banner-header img {\n    float: left;\n    margin-right: 0.625rem;\n    margin-top: 0.625rem;\n    width: 1.5rem; }\n    @media screen and (min-width: 481px) {\n      .usa-banner-header img {\n        margin-right: 0.4375rem;\n        width: 1.25rem; } }\n\n.usa-banner-header-expanded {\n  align-items: center;\n  border-bottom: 1px solid #adadad;\n  display: flex;\n  font-size: 0.9375rem;\n  min-height: 3.5rem;\n  padding-right: 1.875rem; }\n  @media screen and (min-width: 481px) {\n    .usa-banner-header-expanded {\n      border-bottom: none;\n      display: block;\n      font-size: 0.75rem;\n      font-weight: 400;\n      min-height: 0;\n      padding-right: 0; } }\n  .usa-banner-header-expanded > .usa-banner-inner {\n    margin-left: 0; }\n    @media screen and (min-width: 481px) {\n      .usa-banner-header-expanded > .usa-banner-inner {\n        margin-left: auto; } }\n  .usa-banner-header-expanded img {\n    margin-right: 1.5rem; }\n    @media screen and (min-width: 481px) {\n      .usa-banner-header-expanded img {\n        margin-right: 0.4375rem; } }\n  .usa-banner-header-expanded p {\n    line-height: 1.3;\n    vertical-align: top; }\n    @media screen and (min-width: 481px) {\n      .usa-banner-header-expanded p {\n        line-height: 1.5;\n        vertical-align: middle; } }\n\n.usa-banner-button {\n  background-color: transparent;\n  border: 0;\n  border-radius: 0;\n  font-weight: 400;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  -webkit-font-smoothing: auto;\n  padding-top: 0.8125rem;\n  padding-left: 3rem;\n  background-position-x: right;\n  color: #0069b4;\n  display: block;\n  font-size: 0.75rem;\n  height: 2.6875rem;\n  left: 0;\n  position: absolute;\n  text-decoration: underline;\n  top: 0;\n  width: 100%; }\n  .usa-banner-button:hover {\n    background-color: transparent; }\n  @media screen and (min-width: 481px) {\n    .usa-banner-button {\n      padding-top: 0;\n      padding-left: 0;\n      /* stylelint-disable declaration-block-no-ignored-properties */\n      display: inline;\n      height: initial;\n      margin-left: 3px;\n      position: relative;\n      vertical-align: middle;\n      width: initial;\n      /* stylelint-enable */ } }\n  .usa-banner-button:hover {\n    color: #1e4f94;\n    text-decoration: underline; }\n  .usa-banner-button[aria-expanded=false] {\n    background-image: none; }\n    .usa-banner-button[aria-expanded=false]::after {\n      background-image: url(\"../img/angle-arrow-down-primary.png\");\n      background-image: url(\"../img/angle-arrow-down-primary.svg\");\n      background-size: 100%;\n      content: '';\n      display: inline-block;\n      height: 0.625rem;\n      width: 0.625rem;\n      /* stylelint-disable block-closing-brace-newline-after, at-rule-empty-line-before */\n      margin-left: 0;\n      /* stylelint-enable */ }\n    .usa-banner-button[aria-expanded=false]:hover::after {\n      background-image: url(\"../img/angle-arrow-down-primary-hover.png\");\n      background-image: url(\"../img/angle-arrow-down-primary-hover.svg\"); }\n    .usa-banner-button[aria-expanded=false]::after {\n      background-position-y: 1px; }\n  .usa-banner-button[aria-expanded=true] {\n    background-image: none;\n    height: 3.5rem; }\n    .usa-banner-button[aria-expanded=true]::after {\n      background-image: url(\"../img/close.png\");\n      background-image: url(\"../img/close.svg\");\n      background-size: 100%;\n      content: '';\n      display: inline-block;\n      height: 0.8125rem;\n      width: 0.8125rem;\n      /* stylelint-disable block-closing-brace-newline-after, at-rule-empty-line-before */\n      margin-left: 0;\n      /* stylelint-enable */ }\n    @media screen and (min-width: 481px) {\n      .usa-banner-button[aria-expanded=true] {\n        height: initial;\n        padding: 0;\n        position: relative; }\n        .usa-banner-button[aria-expanded=true]::after {\n          background-image: url(\"../img/angle-arrow-up-primary.png\");\n          background-image: url(\"../img/angle-arrow-up-primary.svg\");\n          background-size: 100%;\n          content: '';\n          display: inline-block;\n          height: 0.625rem;\n          width: 0.625rem;\n          /* stylelint-disable block-closing-brace-newline-after, at-rule-empty-line-before */\n          margin-left: 0;\n          /* stylelint-enable */ }\n        .usa-banner-button[aria-expanded=true]:hover::after {\n          background-image: url(\"../img/angle-arrow-up-primary-hover.png\");\n          background-image: url(\"../img/angle-arrow-up-primary-hover.svg\"); }\n        .usa-banner-button[aria-expanded=true]::after {\n          background-position-y: 1px; } }\n    .usa-banner-button[aria-expanded=true]::after {\n      position: absolute;\n      right: 0.9375rem;\n      top: 1.34375rem; }\n      @media screen and (min-width: 481px) {\n        .usa-banner-button[aria-expanded=true]::after {\n          position: static; } }\n    .usa-banner-button[aria-expanded=true] .usa-banner-button-text {\n      display: none; }\n      @media screen and (min-width: 481px) {\n        .usa-banner-button[aria-expanded=true] .usa-banner-button-text {\n          display: inline; } }\n\n.usa-banner-icon {\n  width: 2.375rem; }\n\n/*\n@import 'components/footer';\n@import 'components/forms';\n@import 'components/graphic-list';\n@import 'components/header';\n@import 'components/hero';\n@import 'components/layout';\n@import 'components/media-block';\n@import 'components/navigation';\n@import 'components/search';\n@import 'components/section';\n@import 'components/sidenav';\n@import 'components/skipnav';\n*/\n","/*\n========================================\nUSWDS 2.0 Variables\nUse for computed variables not meant\nto be set by system users.\n----------------------------------------\nMaster system palette variables are set\nin core/_units\n----------------------------------------\nAnything meant to be set directly should\ngo in:\n\ncore/_settings\n(for default settings)\n\nand its pair:\n©\nproject/_uswds-project-settings\n(for project overrides)\n----------------------------------------\n*/\n\n/*\n----------------------------------------\nNamespace\n----------------------------------------\n*/\n\n$ns-component: ns('component');\n$ns-utility: ns('utility');\n$ns-grid: ns('grid');\n\n/*\n----------------------------------------\nSpacing\n----------------------------------------\nAll spacing values that can be called\nby spacing()\n----------------------------------------\n*/\n\n$project-spacing-standard: map-collect(\n  map-get($uswds-spacing, smaller),\n  map-get($uswds-spacing, small),\n  map-get($uswds-spacing, smaller-negative),\n  map-get($uswds-spacing, small-negative),\n  map-get($uswds-spacing, medium),\n  map-get($uswds-spacing, medium-negative),\n  map-get($uswds-spacing, large),\n  map-get($uswds-spacing, larger),\n  map-get($uswds-spacing, largest),\n  map-get($uswds-spacing, special)\n);\n\n$spacing-to-token: (\n  0:           0,\n  1:           '1px',\n  2:           '2px',\n  4:           '05',\n  8:           1,\n  12:          '105',\n  16:          2,\n  24:          3,\n  32:          4,\n  40:          5,\n  48:          6,\n  56:          7,\n  64:          8,\n  72:          9,\n);\n\n$spacing-to-value: (\n  0:           0,\n  '2px':         2,\n  '05':        4,\n  1:           8,\n  '105':         12,\n  2:           16,\n  3:           24,\n  4:           32,\n  5:           40,\n  6:           48,\n  7:           56,\n  8:           64,\n  9:           72,\n);\n\n$number-to-value: (\n  1px:        '1px',\n  2px:        '2px',\n  0:          0,\n  1:          1,\n  2:          2,\n  3:          3,\n  4:          4,\n  5:          5,\n  6:          6,\n  7:          7,\n  8:          8,\n  9:          9,\n  0.5:        '05',\n  1.5:        '105',\n  2.5:        '205',\n  -1px:       'neg-1px',\n  -2px:       'neg-2px',\n  -0.5:       'neg-05',\n  -1:         'neg-1',\n  -1.5:       'neg-105',\n  -2:         'neg-2',\n  -2.5:       'neg-205',\n  -3:         'neg-3',\n  -4:         'neg-4',\n  -5:         'neg-5',\n  -6:         'neg-6',\n  -7:         'neg-7',\n  -8:         'neg-8',\n  -9:         'neg-9',\n);\n\n/*\n----------------------------------------\nFont stack\n----------------------------------------\nCompute the project font stack based on\nthe project fonts and the font\ndefinition values set in\ncore/_font-definitions\n----------------------------------------\n*/\n\n$font-stack-sans:     false;\n$font-stack-serif:    false;\n$font-stack-mono:     false;\n$font-stack-cond:     false;\n\n$font-stack-heading:  false;\n$font-stack-body:     false;\n$font-stack-code:     false;\n$font-stack-alt:      false;\n\n@if $theme-font-sans {\n  $font-stack-sans: map-deep-get(\n    $all-font-definitions,\n    $theme-font-sans,\n    'name'\n    ), map-deep-get(\n    $all-font-definitions,\n    $theme-font-sans,\n    'stack'\n  );\n}\n\n@if $theme-font-serif {\n  $font-stack-serif: map-deep-get(\n    $all-font-definitions,\n    $theme-font-serif,\n    'name'\n    ), map-deep-get(\n    $all-font-definitions,\n    $theme-font-serif,\n    'stack'\n  );\n}\n\n@if $theme-font-mono {\n  $font-stack-mono: map-deep-get(\n    $all-font-definitions,\n    $theme-font-mono,\n    'name'\n    ), map-deep-get(\n    $all-font-definitions,\n    $theme-font-mono,\n    'stack'\n  );\n}\n\n@if $theme-font-cond {\n  $font-stack-cond: map-deep-get(\n    $all-font-definitions,\n    $theme-font-cond,\n    'name'\n    ), map-deep-get(\n    $all-font-definitions,\n    $theme-font-cond,\n    'stack'\n  );\n}\n\n@if $theme-font-heading {\n  $font-stack-heading: map-deep-get(\n    $all-font-definitions,\n    $theme-font-heading,\n    'name'\n    ), map-deep-get(\n    $all-font-definitions,\n    $theme-font-heading,\n    'stack'\n  );\n}\n\n@if $theme-font-body {\n  $font-stack-body: map-deep-get(\n    $all-font-definitions,\n    $theme-font-body,\n    'name'\n    ), map-deep-get(\n    $all-font-definitions,\n    $theme-font-body,\n    'stack'\n  );\n}\n\n@if $theme-font-code {\n  $font-stack-code: map-deep-get(\n    $all-font-definitions,\n    $theme-font-code,\n    'name'\n    ), map-deep-get(\n    $all-font-definitions,\n    $theme-font-code,\n    'stack'\n  );\n}\n\n@if $theme-font-alt {\n  $font-stack-alt: map-deep-get(\n    $all-font-definitions,\n    $theme-font-alt,\n    'name'\n    ), map-deep-get(\n    $all-font-definitions,\n    $theme-font-alt,\n    'stack'\n  );\n}\n\n$project-font-stacks:(\n  'mono':     $font-stack-mono,\n  'sans':     $font-stack-sans,\n  'serif':    $font-stack-serif,\n  'cond':     $font-stack-cond,\n  'heading':  $font-stack-heading,\n  'body':     $font-stack-body,\n  'code':     $font-stack-code,\n  'alt':      $font-stack-alt,\n);\n\n// for backward compatibility\n// TODO: deprecate\n$font-sans:   $font-stack-sans;\n$font-serif:  $font-stack-serif;\n$font-mono:   $font-stack-mono;\n$font-cond:   $font-stack-cond;\n\n/*\n----------------------------------------\nSet basic font rules for the font\nutilities to reference.\n----------------------------------------\nTODO: Do these need to integrate the\nnamespace var set in utilities-settings?\n----------------------------------------\n*/\n\n@if $theme-font-mono {\n  [class*='#{ns('utility')}font-mono'], .family-mono { font-family: $font-stack-mono; }\n}\n\n@if $theme-font-sans {\n  [class*='#{ns('utility')}font-sans'], .family-sans { font-family: $font-stack-sans; }\n}\n\n@if $theme-font-serif {\n  [class*='#{ns('utility')}font-serif'], .family-serif { font-family: $font-stack-serif; }\n}\n\n@if $theme-font-cond {\n  [class*='#{ns('utility')}font-cond'], .family-cond { font-family: $font-stack-cond; }\n}\n\n@if $theme-font-heading {\n  [class*='#{ns('utility')}font-heading'], .family-heading { font-family: $font-stack-heading; }\n}\n\n@if $theme-font-body {\n  [class*='#{ns('utility')}font-body'], .family-body { font-family: $font-stack-body; }\n}\n\n@if $theme-font-code {\n  [class*='#{ns('utility')}font-code'], .family-code { font-family: $font-stack-code; }\n}\n\n@if $theme-font-alt {\n  [class*='#{ns('utility')}font-alt'], .family-alt { font-family: $font-stack-alt; }\n}\n\n$project-font-weights: (\n  'thin':       $theme-font-weight-thin,\n  'light':      $theme-font-weight-light,\n  'normal':     $theme-font-weight-normal,\n  'medium':     $theme-font-weight-medium,\n  'semibold':   $theme-font-weight-semibold,\n  'bold':       $theme-font-weight-bold,\n  'heavy':      $theme-font-weight-heavy,\n);\n\n$project-colors: (\n  'base': (\n    'lightest': get-uswds-color($theme-color-base-lightest),\n    'lighter':  get-uswds-color($theme-color-base-lighter),\n    'light':    get-uswds-color($theme-color-base-light),\n    'default':  get-uswds-color($theme-color-base),\n    'dark':     get-uswds-color($theme-color-base-dark),\n    'darker':   get-uswds-color($theme-color-base-darker),\n    'darkest':  get-uswds-color($theme-color-base-darkest),\n  ),\n  'primary': (\n    'lighter': get-uswds-color($theme-color-primary-lighter),\n    'light':   get-uswds-color($theme-color-primary-light),\n    'default': get-uswds-color($theme-color-primary),\n    'vivid':   get-uswds-color($theme-color-primary-vivid),\n    'dark':    get-uswds-color($theme-color-primary-dark),\n    'darker':  get-uswds-color($theme-color-primary-darker),\n  ),\n  'secondary': (\n    'lighter':  get-uswds-color($theme-color-secondary-lighter),\n    'light':   get-uswds-color($theme-color-secondary-light),\n    'default': get-uswds-color($theme-color-secondary),\n    'vivid':   get-uswds-color($theme-color-secondary-vivid),\n    'dark':    get-uswds-color($theme-color-secondary-dark),\n    'darker':  get-uswds-color($theme-color-secondary-darker),\n  ),\n  'accent-warm': (\n    'default': get-uswds-color($theme-color-accent-warm),\n    'dark':    get-uswds-color($theme-color-accent-warm-dark),\n  ),\n  'accent-cool': (\n    'default': get-uswds-color($theme-color-accent-cool),\n    'dark':    get-uswds-color($theme-color-accent-cool-dark),\n  )\n);\n\n$project-state-colors: (\n  'error': (\n    'lighter': get-uswds-color($theme-color-error-lighter),\n    'light':   get-uswds-color($theme-color-error-light),\n    'default': get-uswds-color($theme-color-error),\n    'dark':    get-uswds-color($theme-color-error-dark),\n    'darker':  get-uswds-color($theme-color-error-darker),\n  ),\n  'warn': (\n    'lighter': get-uswds-color($theme-color-warn-lighter),\n    'light':   get-uswds-color($theme-color-warn-light),\n    'default': get-uswds-color($theme-color-warn),\n    'dark':    get-uswds-color($theme-color-warn-dark),\n    'darker':  get-uswds-color($theme-color-warn-darker),\n  ),\n  'success': (\n    'lighter': get-uswds-color($theme-color-success-lighter),\n    'light':   get-uswds-color($theme-color-success-light),\n    'default': get-uswds-color($theme-color-success),\n    'dark':    get-uswds-color($theme-color-success-dark),\n    'darker':  get-uswds-color($theme-color-success-darker),\n  ),\n  'disabled': (\n    'default': get-uswds-color($theme-color-disabled),\n  ),\n);\n\n$all-project-colors: map-collect(\n  $project-colors,\n  $project-state-colors\n);\n\n/*\n----------------------------------------\nBuild the project type scale map\n----------------------------------------\n*/\n\n$project-type-scale: (\n  '3xs': system-type-scale($theme-type-scale-micro),\n  '2xs': system-type-scale($theme-type-scale-smallest),\n  'xs': system-type-scale($theme-type-scale-smaller),\n  'sm': system-type-scale($theme-type-scale-small),\n  'md': system-type-scale($theme-type-scale-base),\n  'lg': system-type-scale($theme-type-scale-large),\n  'xl': system-type-scale($theme-type-scale-larger),\n  '2xl': system-type-scale($theme-type-scale-largest),\n  '3xl': system-type-scale($theme-type-scale-mega),\n);\n\n$all-type-scale: map-collect(\n  $uswds-type-scale,\n  $project-type-scale\n);\n\n$project-cap-heights:(\n  'base':     $uswds-base-cap-height,\n  'mono':     cap-height($theme-font-mono),\n  'sans':     cap-height($theme-font-sans),\n  'serif':    cap-height($theme-font-serif),\n  'heading':  cap-height($theme-font-heading),\n  'body':     cap-height($theme-font-body),\n  'code':     cap-height($theme-font-code),\n  'alt':      cap-height($theme-font-alt),\n);\n\n/*\n----------------------------------------\nBorder-radius\n----------------------------------------\n*/\n\n$project-border-radius: (\n  0:          0,\n  'sm':         spacing($theme-border-radius-sm),\n  'md':         spacing($theme-border-radius-md),\n  'lg':         spacing($theme-border-radius-lg),\n  'pill':       9999em,\n);\n\n$all-border-radius: map-collect(\n  $project-border-radius,\n  map-get($uswds-spacing, smaller),\n  map-get($uswds-spacing, small)\n);\n\n/*\n----------------------------------------\nColumn gaps\n----------------------------------------\n*/\n\n$project-column-gaps: (\n  'sm': $theme-column-gap-small,\n  'md': $theme-column-gap,\n  'lg': $theme-column-gap-large,\n);\n\n/*\n----------------------------------------\nColors and palettes\n----------------------------------------\n*/\n\n$highlight:             get-uswds-color('highlight');\n$base-lightest:         get-uswds-color($theme-color-base-lightest);\n$base-lighter:          get-uswds-color($theme-color-base-lighter);\n$base-light:            get-uswds-color($theme-color-base-light);\n$base:                  get-uswds-color($theme-color-base);\n$base-dark:             get-uswds-color($theme-color-base-dark);\n$base-darker:           get-uswds-color($theme-color-base-darker);\n$base-darkest:          get-uswds-color($theme-color-base-darkest);\n$ink:                   $base-darkest;\n$primary-lighter:       get-uswds-color($theme-color-primary-lighter);\n$primary-light:         get-uswds-color($theme-color-primary-light);\n$primary:               get-uswds-color($theme-color-primary);\n$primary-vivid:         get-uswds-color($theme-color-primary-vivid);\n$primary-dark:          get-uswds-color($theme-color-primary-dark);\n$primary-darker:        get-uswds-color($theme-color-primary-darker);\n$secondary-lighter:     get-uswds-color($theme-color-secondary-lighter);\n$secondary-light:       get-uswds-color($theme-color-secondary-light);\n$secondary:             get-uswds-color($theme-color-secondary);\n$secondary-vivid:       get-uswds-color($theme-color-secondary-vivid);\n$secondary-dark:        get-uswds-color($theme-color-secondary-dark);\n$secondary-darker:      get-uswds-color($theme-color-secondary-darker);\n$accent-warm-dark:      get-uswds-color($theme-color-accent-warm-dark);\n$accent-warm:           get-uswds-color($theme-color-accent-warm);\n$accent-cool-dark:      get-uswds-color($theme-color-accent-cool-dark);\n$accent-cool:           get-uswds-color($theme-color-accent-cool);\n$error-lighter:         get-uswds-color($theme-color-error-lighter);\n$error-light:           get-uswds-color($theme-color-error-light);\n$error:                 get-uswds-color($theme-color-error);\n$error-dark:            get-uswds-color($theme-color-error-dark);\n$error-darker:          get-uswds-color($theme-color-error-darker);\n$warn-lighter:          get-uswds-color($theme-color-warn-lighter);\n$warn-light:            get-uswds-color($theme-color-warn-light);\n$warn:                  get-uswds-color($theme-color-warn);\n$warn-dark:             get-uswds-color($theme-color-warn-dark);\n$warn-darker:           get-uswds-color($theme-color-warn-darker);\n$success-lighter:       get-uswds-color($theme-color-success-lighter);\n$success-light:         get-uswds-color($theme-color-success-light);\n$success:               get-uswds-color($theme-color-success);\n$success-dark:          get-uswds-color($theme-color-success-dark);\n$success-darker:        get-uswds-color($theme-color-success-darker);\n$disabled:              get-uswds-color($theme-color-disabled);\n\n$color-palette-theme: (\n  'base-lightest':      get-uswds-color($theme-color-base-lightest),\n  'base-lighter':       get-uswds-color($theme-color-base-lighter),\n  'base-light':         get-uswds-color($theme-color-base-light),\n  'base':               get-uswds-color($theme-color-base),\n  'base-dark':          get-uswds-color($theme-color-base-dark),\n  'base-darker':        get-uswds-color($theme-color-base-darker),\n  'base-darkest':       get-uswds-color($theme-color-base-darkest),\n  'text':               get-uswds-color($theme-color-text),\n  'primary-lighter':    get-uswds-color($theme-color-primary-lighter),\n  'primary-light':      get-uswds-color($theme-color-primary-light),\n  'primary':            get-uswds-color($theme-color-primary),\n  'primary-vivid':      get-uswds-color($theme-color-primary-vivid),\n  'primary-dark':       get-uswds-color($theme-color-primary-dark),\n  'primary-darker':     get-uswds-color($theme-color-primary-darker),\n  'secondary-light':    get-uswds-color($theme-color-secondary-light),\n  'secondary':          get-uswds-color($theme-color-secondary),\n  'secondary-vivid':    get-uswds-color($theme-color-secondary-vivid),\n  'secondary-dark':     get-uswds-color($theme-color-secondary-dark),\n  'accent-warm-dark':   get-uswds-color($theme-color-accent-warm-dark),\n  'accent-warm':        get-uswds-color($theme-color-accent-warm),\n  'accent-cool-dark':   get-uswds-color($theme-color-accent-cool-dark),\n  'accent-cool':        get-uswds-color($theme-color-accent-cool),\n);\n\n$color-palette-state: (\n  'error-lighter':      get-uswds-color($theme-color-error-lighter),\n  'error-light':        get-uswds-color($theme-color-error-light),\n  'error':              get-uswds-color($theme-color-error),\n  'error-dark':         get-uswds-color($theme-color-error-dark),\n  'error-darker':       get-uswds-color($theme-color-error-darker),\n  'warn-lighter':       get-uswds-color($theme-color-warn-lighter),\n  'warn-light':         get-uswds-color($theme-color-warn-light),\n  'warn':               get-uswds-color($theme-color-warn),\n  'warn-dark':          get-uswds-color($theme-color-warn-dark),\n  'warn-darker':        get-uswds-color($theme-color-warn-darker),\n  'success-lighter':    get-uswds-color($theme-color-success-lighter),\n  'success-light':      get-uswds-color($theme-color-success-light),\n  'success':            get-uswds-color($theme-color-success),\n  'success-dark':       get-uswds-color($theme-color-success-dark),\n  'success-darker':     get-uswds-color($theme-color-success-darker),\n  'disabled':           get-uswds-color($theme-color-disabled),\n);\n\n$color-palette-grayscale: $uswds-gray;\n\n/*\n========================================\nOld USWDS Variables\nMany of these will be deprecated\nor converted into settings\n----------------------------------------\nThese variables drive almost every\naspect of the U.S. Web Design system.\nEvery variable is declared as !default\nso that it can be overridden by a\nprevious import.\n\nXXX Do not modify this file!\n\nIf you want to override a variable, set\nthat variable in one of your own partials,\nthen\n@import '{path/to/uswds/}core/variables'.\n----------------------------------------\n*/\n\n/*\n----------------------------------------\nTypography\n----------------------------------------\nTODO: Rethink naming and consolidate in\nsettings\n----------------------------------------\n*/\n\n// Removing the !default from $em-base so we are not inheriting that value from Bourbon.\n$em-base:             10px;\n$base-font-size:      1.7rem !default;\n$small-font-size:     1.4rem !default;\n$lead-font-size:      2rem !default;\n$title-font-size:     5.2rem !default;\n$h1-font-size:        4rem !default;\n$h2-font-size:        3rem !default;\n$h3-font-size:        2rem !default;\n$h4-font-size:        1.7rem !default;\n$h5-font-size:        1.5rem !default;\n$h6-font-size:        1.3rem !default;\n$base-line-height:    1.5 !default;\n$heading-line-height: 1.3 !default;\n$lead-line-height:    1.7 !default;\n\n/*\n----------------------------------------\nFont weights\n----------------------------------------\nTODO: Consolidate in settings\n----------------------------------------\n*/\n\n// TODO these should be called font-weight-${}\n$font-normal:         400 !default;\n$font-bold:           700 !default;\n\n/*\n----------------------------------------\nColors\n----------------------------------------\nTODO:\n1. These should be set in settings\n2. Probably need different naming rubric\n----------------------------------------\n*/\n\n$color-blue:                 $blue-60v !default;\n$color-blue-darker:          $blue-warm-70v !default;\n$color-blue-darkest:         $blue-warm-80v !default;\n$color-blue-light:           $blue-warm-50 !default;\n$color-blue-lighter:         $blue-warm-30 !default;\n$color-blue-lightest:        $blue-warm-10 !default;\n\n$color-aqua:                 $cyan-30v !default;\n$color-aqua-dark:            $cyan-40v !default;\n$color-aqua-darkest:         $blue-60 !default;\n$color-aqua-light:           $cyan-20 !default;\n$color-aqua-lightest:        $cyan-5 !default;\n\n$color-red:                  $red-50 !default;\n$color-red-dark:             $red-60v !default;\n$color-red-darkest:          $red-70v !default;\n$color-red-light:            $red-30 !default;\n$color-red-lightest:         $red-10 !default;\n\n$color-white:                white !default;\n$color-black:                black !default;\n$color-black-light:          $gray-90 !default;\n\n$color-gray-dark:            $gray-cool-80 !default;\n$color-gray:                 $gray-cool-60 !default;\n$color-gray-medium:          #757575 !default;\n$color-gray-light:           $gray-30 !default;\n$color-gray-lighter:         $gray-cool-10 !default;\n$color-gray-lightest:        $gray-cool-5 !default;\n\n$color-gray-warm-dark:       $gray-warm-70 !default;\n$color-gray-warm-light:      $gray-warm-10 !default;\n$color-gray-cool-light:      $blue-warm-5 !default;\n\n$color-gold:                 $gold-20v !default;\n$color-gold-light:           $gold-10v !default;\n$color-gold-lighter:         $yellow-10 !default;\n$color-gold-lightest:        $gold-5v !default;\n\n$color-green:                $green-cool-50 !default;\n$color-green-light:          $green-cool-40 !default;\n$color-green-lighter:        $green-cool-20 !default;\n$color-green-lightest:       $green-cool-5 !default;\n\n$color-cool-blue:            #205493 !default;\n$color-cool-blue-light:      #4773aa !default;\n$color-cool-blue-lighter:    #8ba6ca !default;\n$color-cool-blue-lightest:   #dce4ef !default;\n\n$color-purple:               $violet-70v !default;\n\n// Functional colors\n$color-primary:              $color-blue !default;\n$color-primary-darker:       $color-blue-darker !default;\n$color-primary-darkest:      $color-blue-darkest !default;\n\n$color-primary-alt:          $color-aqua !default;\n$color-primary-alt-dark:     $color-aqua-dark !default;\n$color-primary-alt-darkest:  $color-aqua-darkest !default;\n$color-primary-alt-light:    $color-aqua-light !default;\n$color-primary-alt-lightest: $color-aqua-lightest !default;\n\n$color-secondary:            $color-red !default;\n$color-secondary-dark:       $color-red-dark !default;\n$color-secondary-darkest:    $color-red-darkest !default;\n$color-secondary-light:      $color-red-light !default;\n$color-secondary-lightest:   $color-red-lightest !default;\n\n$color-base:                 $color-black-light !default;\n$color-focus:                $color-gray-light !default;\n$color-visited:              $color-purple !default;\n\n$color-shadow:               $black-transparent-30 !default;\n$color-transparent:          rgba(#000, 0) !default;\n\n/*\n----------------------------------------\nMobile First Breakpoints\n----------------------------------------\nTODO: deprecate in favor of the values\nin settings\n----------------------------------------\n*/\n\n$xsmall-screen: null !default;\n$small-screen:  481px !default;\n$medium-screen: 600px !default;\n$large-screen:  1201px !default;\n$xlarge-screen: null !default;\n\n/*\n----------------------------------------\nGrid column counts by screen size\n----------------------------------------\nTODO: Lots of grid work to come\n----------------------------------------\n*/\n\n$grid-columns-small: 1 !default;\n$grid-columns-medium: 6 !default;\n$grid-columns-large: 12 !default;\n\n/*\n----------------------------------------\n@media single-keyword helpers\n----------------------------------------\nTODO: Need to rethink these\n----------------------------------------\n*/\n\n$small: new-breakpoint(min-width $small-screen $grid-columns-small) !default;\n$medium: new-breakpoint(min-width $medium-screen $grid-columns-medium) !default;\n$large: new-breakpoint(min-width $large-screen $grid-columns-large) !default;\n\n/*\n----------------------------------------\nSet $asset-pipeline to true if you're\nusing the Rails Asset Pipeline\n----------------------------------------\nTODO: This should be set in settings\n----------------------------------------\n*/\n\n$asset-pipeline:      false !default;\n\n/*\n----------------------------------------\nMagic numbers\n----------------------------------------\nTODO: Evaluate which of these should be\nset in settings and which are static or\ncalculated variables\n----------------------------------------\n*/\n\n$theme-site-margins:                  4 !default;\n$theme-site-margins-mobile:           2 !default;\n\n$text-width-sm: 60ch;\n\n$text-max-width:                66ch !default; // 66 characters per line\n$text-narrow-width:             40ch !default;\n$text-wide-width:               72ch !default;\n$lead-max-width:                77rem !default;\n$site-max-width:                1040px !default;\n$site-margins:                  3rem !default;\n$site-margins-mobile:           1.5rem !default;\n$article-max-width:             600px !default;\n$input-max-width:               46rem !default;\n$label-border-radius:           2px !default;\n$checkbox-border-radius:        2px !default;\n$border-radius:                 3px !default;\n$button-border-radius:          5px !default;\n$box-shadow:                    0 0 2px $color-shadow !default;\n$focus-outline:                 2px dotted $color-gray-light !default;\n$focus-spacing:                 3px !default;\n$nav-width:                     951px !default;\n$sidenav-current-border-width:  0.4rem !default; // must be in rem for math\n\n// 44 x 44 pixels hit target following Apple iOS Human Interface Guidelines\n$hit-area: 4.4rem !default;\n\n$spacing-x-small: 0.5rem;\n$spacing-small: 1rem;\n$spacing-md-small: 1.5rem;\n$spacing-medium: 2rem;\n$spacing-large: 3rem;\n","@charset \"UTF-8\";\n\n/// Georgia font stack.\n///\n/// @type List\n\n$georgia: \"Georgia\", \"Cambria\", \"Times New Roman\", \"Times\", serif;\n\n/// Helvetica font stack.\n///\n/// @type List\n\n$helvetica: \"Helvetica Neue\", \"Helvetica\", \"Roboto\", \"Arial\", sans-serif;\n\n/// Lucida Grande font stack.\n///\n/// @type List\n\n$lucida-grande: \"Lucida Grande\", \"Tahoma\", \"Verdana\", \"Arial\", sans-serif;\n\n/// Monospace font stack.\n///\n/// @type List\n\n$monospace: \"Bitstream Vera Sans Mono\", \"Consolas\", \"Courier\", monospace;\n\n/// Verdana font stack.\n///\n/// @type List\n\n$verdana: \"Verdana\", \"Geneva\", sans-serif;\n","// Screen reader only helper\n@mixin sr-only() {\n  position: absolute;\n  left: -999em;\n}\n\n@mixin add-sr-only() {\n  position: absolute;\n  left: -999em;\n}\n\n// This \"negates\" the sr-only() helper; useful if\n// we want the default state of something to be\n// for screen readers only, but we want to force\n// it to show for sighted users under more specific\n// conditions.\n@mixin not-sr-only() {\n  position: static;\n}\n\n@mixin add-no-sr-only() {\n  position: static;\n}\n\n.usa-sr-only {\n  @include sr-only();\n}\n\n// Aria hidden helper\n@mixin accessibly-hidden() {\n  &[aria-hidden=true] {\n    display: none;\n  }\n}\n","// Grid container\n.usa-grid,\n.usa-grid-full {\n  @include outer-container($site-max-width);\n}\n\n.usa-grid {\n  @include u-padding-x($site-margins-mobile);\n\n  @include media($medium-screen) {\n    @include u-padding-x($site-margins);\n  }\n}\n\n.usa-grid-full {\n  padding: 0;\n}\n\n// Grid items\n@include media($medium) {\n  .usa-width-one-whole {\n    @include span-columns(6);\n  }\n\n  .usa-width-one-half {\n    @include span-columns(3);\n  }\n\n  .usa-width-one-third {\n    @include span-columns(2);\n  }\n\n  .usa-width-two-thirds {\n    @include span-columns(4);\n  }\n\n  .usa-width-one-fourth {\n    @include span-columns(3);\n\n    &:nth-child(2n) {\n      margin-right: 0;\n    }\n  }\n\n  .usa-width-three-fourths {\n    @include span-columns(6);\n  }\n\n  .usa-width-one-sixth {\n    @include span-columns(2);\n\n    &:nth-child(3n) {\n      margin-right: 0;\n    }\n  }\n\n  .usa-width-five-sixths {\n    @include span-columns(4);\n  }\n\n  .usa-width-one-twelfth {\n    @include span-columns(2);\n\n    &:nth-child(3n) {\n      margin-right: 0;\n    }\n  }\n\n  .usa-width-five-twelfths {\n    @include span-columns(2);\n  }\n\n  .usa-width-seven-twelfths {\n    @include span-columns(4);\n  }\n}\n\n@include media($large) {\n  .usa-width-one-whole {\n    @include span-columns(12);\n  }\n\n  .usa-width-one-half {\n    @include span-columns(6);\n  }\n\n  .usa-width-one-third {\n    @include span-columns(4);\n  }\n\n  .usa-width-two-thirds {\n    @include span-columns(8);\n  }\n\n  .usa-width-one-fourth {\n    @include span-columns(3);\n\n    &:nth-child(2n) {\n      @include span-columns(3);\n    }\n\n    &:nth-child(4n) {\n      margin-right: 0;\n    }\n  }\n\n  .usa-width-three-fourths {\n    @include span-columns(9);\n  }\n\n  .usa-width-one-sixth {\n    @include span-columns(2);\n\n    &:nth-child(3n) {\n      @include span-columns(2);\n    }\n\n    &:nth-child(6n) {\n      margin-right: 0;\n    }\n  }\n\n  .usa-width-five-sixths {\n    @include span-columns(10);\n  }\n\n  .usa-width-one-twelfth {\n    @include span-columns(1);\n\n    &:nth-child(3n) {\n      @include span-columns(1);\n    }\n\n    &:nth-child(12n) {\n      margin-right: 0;\n    }\n  }\n\n  .usa-width-five-twelfths {\n    @include span-columns(5);\n  }\n\n  .usa-width-seven-twelfths {\n    @include span-columns(7);\n  }\n}\n\n// Specifies end of a row.\n// Required if grid-box contains multiple rows.\n// Required if browser does not support :last-child\n.usa-end-row {\n  @include omega();\n}\n\n// Grid Offsets\n.usa-offset-one-twelfth {\n  @include shift(1 of 12);\n}\n\n.usa-offset-one-sixth {\n  @include shift(2 of 12);\n}\n\n.usa-offset-one-fourth {\n  @include shift(3 of 12);\n}\n\n.usa-offset-one-third {\n  @include shift(4 of 12);\n}\n\n.usa-offset-five-twelfths {\n  @include shift(5 of 12);\n}\n\n.usa-offset-one-half {\n  @include shift(6 of 12);\n}\n\n.usa-offset-seven-twelfths {\n  @include shift(7 of 12);\n}\n\n.usa-offset-two-thirds {\n  @include shift(8 of 12);\n}\n\n.usa-offset-three-fourths {\n  @include shift(9 of 12);\n}\n\n.usa-offset-five-sixths {\n  @include shift(10 of 12);\n}\n\n.usa-offset-eleven-twelfths {\n  @include shift(11 of 12);\n}\n","@charset \"UTF-8\";\n\n/// Makes an element a outer container by centering it in the viewport, clearing its floats, and setting its `max-width`.\n/// Although optional, using `outer-container` is recommended. The mixin can be called on more than one element per page, as long as they are not nested.\n///\n/// @param {Number [unit]} $local-max-width [$max-width]\n///   Max width to be applied to the element. Can be a percentage or a measure.\n///\n/// @example scss - Usage\n///   .element {\n///     @include outer-container(100%);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     max-width: 100%;\n///     margin-left: auto;\n///     margin-right: auto;\n///   }\n///\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: table;\n///   }\n\n@mixin outer-container($local-max-width: $max-width) {\n  @include clearfix;\n  max-width: $local-max-width;\n  margin: {\n    left: auto;\n    right: auto;\n  }\n}\n","$base-rem: 16px; // a new value distinct from USWDS static var;\n$sans-normalize-multiplier: 1.0; // multiplier for trebuchet; taking Source Sans as 1.0\n\n// Typography\n// Removing the from $em-base so we are not inheriting that\n// value from Bourbon.\n//$em-base:              10px;\n$base-font-size-px:      17px;\n$small-font-size-px:     14px;\n$lead-font-size-px:      20px;\n$title-font-size-px:     52px;\n$h1-font-size-px:        40px;\n$h2-font-size-px:        30px;\n$h3-font-size-px:        20px;\n$h4-font-size-px:        17px;\n$h5-font-size-px:        15px;\n$h6-font-size-px:        13px;\n\n\n$base-font-size:      px($base-font-size-px);\n$small-font-size:     px($small-font-size-px);\n$lead-font-size:      px($lead-font-size-px);\n$title-font-size:     px($title-font-size-px);\n$h1-font-size:        px($h1-font-size-px);\n$h2-font-size:        px($h2-font-size-px);\n$h3-font-size:        px($h3-font-size-px);\n$h4-font-size:        px($h4-font-size-px);\n$h5-font-size:        px($h5-font-size-px);\n$h6-font-size:        px($h6-font-size-px);\n// $base-line-height:    1.5;\n// $heading-line-height: 1.3;\n// $lead-line-height:    1.7;\n\n$font-sans:           Trebuchet,Tahoma,sans-serif;\n// $font-serif:          'Merriweather', $georgia;\n\n// TODO these should be called font-weight-${}\n// $font-normal:         400;\n// $font-bold:           700;\n\n// Color\n// $color-blue:                 #0071bc;\n// $color-blue-darker:          #205493;\n// $color-blue-darkest:         #112e51;\n\n// $color-aqua:                 #02bfe7;\n// $color-aqua-dark:            #00a6d2;\n// $color-aqua-darkest:         #046b99;\n// $color-aqua-light:           #9bdaf1;\n// $color-aqua-lightest:        #e1f3f8;\n\n// $color-red:                  #e31c3d;\n// $color-red-dark:             #cd2026;\n// $color-red-darkest:          #981b1e;\n// $color-red-light:            #e59393;\n// $color-red-lightest:         #f9dede;\n\n// $color-white:                #ffffff;\n// $color-black:                #000000;\n// $color-black-light:          #212121;\n\n// $color-gray-dark:            #323a45;\n// $color-gray:                 #5b616b;\n// $color-gray-medium:          #757575;\n// $color-gray-light:           #aeb0b5;\n// $color-gray-lighter:         #d6d7d9;\n// $color-gray-lightest:        #f1f1f1;\n\n// $color-gray-warm-dark:       #494440;\n// $color-gray-warm-light:      #e4e2e0;\n// $color-gray-cool-light:      #dce4ef;\n\n// $color-gold:                 #fdb81e;\n// $color-gold-light:           #f9c642;\n// $color-gold-lighter:         #fad980;\n// $color-gold-lightest:        #fff1d2;\n\n// $color-green:                #2e8540;\n// $color-green-light:          #4aa564;\n// $color-green-lighter:        #94bfa2;\n// $color-green-lightest:       #e7f4e4;\n\n// $color-cool-blue:            #205493;\n// $color-cool-blue-light:      #4773aa;\n// $color-cool-blue-lighter:    #8ba6ca;\n// $color-cool-blue-lightest:   #dce4ef;\n\n// $color-purple:               #4c2c92;\n\n// Functional colors\n// $color-primary:              $color-blue;\n// $color-primary-darker:       $color-blue-darker;\n// $color-primary-darkest:      $color-blue-darkest;\n\n// $color-primary-alt:          $color-aqua;\n// $color-primary-alt-dark:     $color-aqua-dark;\n// $color-primary-alt-darkest:  $color-aqua-darkest;\n// $color-primary-alt-light:    $color-aqua-light;\n// $color-primary-alt-lightest: $color-aqua-lightest;\n\n// $color-secondary:            $color-red;\n// $color-secondary-dark:       $color-red-dark;\n// $color-secondary-darkest:    $color-red-darkest;\n// $color-secondary-light:      $color-red-light;\n// $color-secondary-lightest:   $color-red-lightest;\n\n// $color-base:                 $color-black-light;\n// $color-focus:                $color-gray-light;\n// $color-visited:              $color-purple;\n\n// $color-shadow:               rgba(#000, 0.3);\n// $color-transparent:          rgba(#000, 0);\n\n// Mobile First Breakpoints\n// $small-screen:  481px;\n$medium-screen: 801px;\n$large-screen:  1025px;\n\n// Grid column counts by screen size\n// $grid-columns-small: 1;\n// $grid-columns-medium: 6;\n// $grid-columns-large: 12;\n\n// @media single-keyword helpers\n// $small: new-breakpoint(min-width $small-screen $grid-columns-small);\n// $medium: new-breakpoint(min-width $medium-screen $grid-columns-medium);\n// $large: new-breakpoint(min-width $large-screen $grid-columns-large);\n\n// Relative font and image file paths\n// $font-path:   '../fonts';\n// $image-path:  '../img';\n\n// Set $asset-pipeline to true if you're using the Rails Asset Pipeline\n// $asset-pipeline:      false;\n\n// Magic Numbers\n$text-max-width-px:          530px;\n$lead-max-width-px:          770px;\n$site-margins-px:            30px;\n$site-margins-mobile-px:     16px;\n$input-max-width-px:         460px;\n\n$text-max-width:          px($text-max-width-px);\n$lead-max-width:          px($lead-max-width-px);\n$site-max-width:          960px;\n$site-margins:            px($site-margins-px);\n$site-margins-mobile:     px($site-margins-mobile-px);\n// $article-max-width:       600px;\n$input-max-width:         px($input-max-width-px);\n// $label-border-radius:     2px;\n// $checkbox-border-radius:  2px;\n// $border-radius:           3px;\n// $button-border-radius:    5px;\n// $box-shadow:              0 0 2px $color-shadow;\n// $focus-outline:           2px dotted $color-gray-light;\n// $focus-spacing:           3px;\n// $nav-width:               951px;\n\n// 44 x 44 pixels hit target following Apple iOS Human Interface\n// Guidelines\n// $hit-area: 4.4rem;\n\n// $spacing-x-small: 0.5rem;\n// $spacing-small: 1rem;\n// $spacing-md-small: 1.5rem;\n// $spacing-medium: 2rem;\n// $spacing-large: 3rem;\n","@charset \"UTF-8\";\n\n/// Provides an easy way to include a clearfix for containing floats.\n///\n/// @link http://goo.gl/yP5hiZ\n///\n/// @example scss\n///   .element {\n///     @include clearfix;\n///   }\n///\n/// @example css\n///   .element::after {\n///     clear: both;\n///     content: \"\";\n///     display: block;\n///   }\n\n@mixin clearfix {\n  &::after {\n    clear: both;\n    content: \"\";\n    display: block;\n  }\n}\n","// Adds padding either l/r(x) or t/b(y)\n\n@mixin padding-n($side, $value...) {\n  @if $side == all {\n    padding: spacing($value...);\n  }\n  @elseif $side == x {\n    padding-left: spacing($value...);\n    padding-right: spacing($value...);\n  }\n  @elseif $side == y {\n    padding-bottom: spacing($value...);\n    padding-top: spacing($value...);\n  }\n  @else {\n    padding-#{$side}: spacing($value...);\n  }\n}\n\n@mixin u-padding($value...) {\n  @include padding-n(all, $value...);\n}\n\n@mixin u-padding-x($value...) {\n  @include padding-n(x, $value...);\n}\n\n@mixin u-padding-y($value...) {\n  @include padding-n(y, $value...);\n}\n\n@mixin u-padding-top($value...) {\n  @include padding-n(top, $value...);\n}\n\n@mixin u-padding-right($value...) {\n  @include padding-n(right, $value...);\n}\n\n@mixin u-padding-bottom($value...) {\n  @include padding-n(bottom, $value...);\n}\n\n@mixin u-padding-left($value...) {\n  @include padding-n(left, $value...);\n}\n","/*\n========================================\nFunctions\n----------------------------------------\n*/\n\n/*\n========================================\nGeneral-purpose functions\n----------------------------------------\n*/\n\n/*\n----------------------------------------\nmap-deep-get()\n----------------------------------------\n@author Hugo Giraudel\n@access public\n@param {Map} $map - Map\n@param {Arglist} $keys - Key chain\n@return {*} - Desired value\n----------------------------------------\n*/\n\n@function map-deep-get($map, $keys...) {\n  @each $key in $keys {\n    $map: map-get($map, $key);\n  }\n\n  @return $map;\n}\n\n/*\n----------------------------------------\nstrip-unit()\n----------------------------------------\nRemove the unit of a length\n@author Hugo Giraudel\n@param {Number} $number - Number to remove unit from\n@return {Number} - Unitless number\n----------------------------------------\n*/\n\n@function strip-unit($number) {\n  @if type-of($number) == 'number' and not unitless($number) {\n    @return $number / ($number * 0 + 1);\n  }\n\n  @return $number;\n}\n\n/*\n----------------------------------------\nmulti-cat()\n----------------------------------------\nConcatenate two lists\n----------------------------------------\n*/\n\n@function multi-cat($list1, $list2) {\n  $this-list: ();\n\n  @each $e in $list1 {\n    @each $ee in $list2 {\n      $this-block: $e + $ee;\n      $this-list: join($this-list, $this-block);\n    }\n  }\n\n  @return $this-list;\n}\n\n/*\n----------------------------------------\nmap-collect()\n----------------------------------------\nCollect multiple maps into a single\nlarge map\nsource: https://gist.github.com/bigglesrocks/d75091700f8f2be5abfe\n----------------------------------------\n*/\n\n@function map-collect($maps...) {\n  $collection: ();\n\n  @each $map in $maps {\n    $collection: map-merge($collection, $map);\n  }\n\n  @return $collection;\n}\n\n/* stylelint-disable */\n/*\n----------------------------------------\nsmart-quote()\n----------------------------------------\nQuotes strings\nInspects `px`, `xs`, and `xl` numbers\nLeaves bools as is\n----------------------------------------\n*/\n\n@function smart-quote($value) {\n  @if type-of($value) == 'string' or type-of($value) == 'color'{\n    @return quote($value);\n  }\n  @if type-of($value) == 'number' {\n    @if index(('px', 'xl', 'xs'), unit($value)) {\n      @return inspect($value);\n    }\n    @else {\n      @return $value;\n    }\n  }\n  @else {\n    @return $value;\n  }\n};\n\n/*\n----------------------------------------\nremove()\n----------------------------------------\nRemove a value from a list\n----------------------------------------\n*/\n\n@function remove($list, $value, $recursive: false) {\n  $result: ();\n\n  @for $i from 1 through length($list) {\n    @if type-of(nth($list, $i)) == list and $recursive {\n      $result: append($result, remove(nth($list, $i), $value, $recursive));\n    } @else if nth($list, $i) != $value {\n      $result: append($result, nth($list, $i));\n    }\n  }\n\n  @return $result;\n}\n\n/*\n----------------------------------------\nstrunquote()\n----------------------------------------\nUnquote a string\n----------------------------------------\n*/\n\n@function strunquote($value) {\n  @if type-of($value) == 'string' {\n    $value: unquote($value);\n  }\n\n  @return $value;\n}\n\n/*\n----------------------------------------\nto-map()\n----------------------------------------\nConvert a single value to a USWDS\nvalue map.\n\nCandidate for deprecation if we remove\nisReadable\n----------------------------------------\n*/\n\n@function to-map($key, $values) {\n  $l: length($values);\n\n  @if $key == 'noModifier' or $key == 'noValue' {\n    $key: '';\n  }\n\n  @if $l == 1 or nth($values, $l) != isReadable {\n    @return (\n      slug: $key,\n      isReadable: true,\n      content: $values,\n    );\n  } @else {\n    $values: remove($values, isReadable);\n\n    @return (\n      slug: $key,\n      isReadable: true,\n      content: $values,\n    );\n  }\n}\n\n/*\n----------------------------------------\nbase-to-map()\n----------------------------------------\nConvert a single base to a USWDS\nvalue map.\n\nCandidate for deprecation if we remove\nisReadable\n----------------------------------------\n*/\n\n@function base-to-map($values) {\n  $l: length($values);\n\n  @if $l == 1 or nth($values, $l) != isReadable {\n    @return (\n      slug: $values,\n      isReadable: true,\n    );\n  } @else {\n    $values: remove($values, isReadable);\n\n    @return (\n      slug: unquote(nth($values, 1)),\n      isReadable: true,\n    );\n  }\n}\n\n/*\n----------------------------------------\nns()\n----------------------------------------\nAdd a namesspace of $type if that\nnamespace is set to output\n----------------------------------------\n*/\n\n@function ns($type) {\n  $type: smart-quote($type);\n  @if map-deep-get($theme-namespace, $type, output) {\n    @return map-deep-get($theme-namespace, $type, namespace);\n  }\n  @else {\n    @return '';\n  }\n}\n\n/*\n----------------------------------------\ngrid-units()\n----------------------------------------\nConverts a spacing unit multiple into\nthe desired final units (currently rem)\n----------------------------------------\n*/\n\n@function grid-units($unit) {\n  $grid-to-rem: strip-unit($uswds-spacing-grid-base) * $unit / strip-unit($theme-root-font-size) * 1rem;\n\n  @return $grid-to-rem;\n}\n\n/*\n----------------------------------------\npx()\n----------------------------------------\nConverts a value in px to a value in rem\n----------------------------------------\n*/\n\n@function px($pixels) {\n  @if $pixels {\n    $px-to-rem: strip-unit($pixels) / strip-unit($theme-root-font-size) * 1rem;\n\n    @return $px-to-rem;\n  }\n  @else {\n    @return false;\n  }\n}\n\n/*\n----------------------------------------\nrem-to-px()\n----------------------------------------\nConverts a value in rem to a value in px\n----------------------------------------\n*/\n\n@function rem-to-px($value) {\n  $rem-to-px: strip-unit($value) * $theme-root-font-size;\n  @return $rem-to-px;\n}\n\n/*\n----------------------------------------\ngrid-to-base-em()\n----------------------------------------\nConverts a value in px to a value in em\n----------------------------------------\n*/\n\n@function grid-to-base-em($grid-in-rem) {\n  $grid-to-base-em: strip-unit($grid-in-rem) * 1em;\n\n  @return $grid-to-base-em;\n}\n\n/*\n----------------------------------------\ncap-height()\n----------------------------------------\nGet the cap height of a defined font\n----------------------------------------\n*/\n\n@function cap-height($font){\n  @if $font == false {\n    @return false;\n  } @else {\n    @return map-deep-get(\n      $all-font-definitions,\n      $font,\n      'cap-height'\n    );\n  }\n};\n\n/*\n----------------------------------------\ntype-scale()\n----------------------------------------\nNormalizes a specific face's optical size\nto a set target\n----------------------------------------\n*/\n\n@function type-scale($cap-height, $scale) {\n  @if $cap-height {\n    $this-scale: $uswds-base-cap-height * strip-unit($scale) / $cap-height;\n\n    @return px($this-scale);\n  } @else {\n    @return false;\n  }\n};\n\n/*\n----------------------------------------\nutility-font()\n----------------------------------------\nGet a normalized font-size in rem from\na family and a type size in either\nsystem scale or project scale\n----------------------------------------\nNot the public-facing function.\nUsed for building the utilities and\nwithholds certain errors.\n----------------------------------------\n*/\n\n@function utility-font($family, $scale){\n  $quote: smart-quote($scale);\n  @if not map-has-key($project-cap-heights, $family) {\n    @error \"#{$family} is not a valid font family. Valid values: #{map-keys($project-cap-heights)}\";\n  }\n  @elseif not map-get($all-type-scale, $quote) {\n    @error \"`#{$scale}` is not a valid font scale. Valid values: #{map-keys($all-type-scale)}\";\n  }\n  @else {\n    $this-cap: map-get($project-cap-heights, $family);\n    $this-scale: map-get($all-type-scale, $quote);\n    @if $this-scale and $this-cap {\n      @return type-scale($this-cap, $this-scale);\n    }\n    @else {\n      @return false;\n    }\n  }\n};\n\n/*\n----------------------------------------\nlh()\n----------------------------------------\nGet a normalized line-height from\na family and a line-height scale unit\n----------------------------------------\n*/\n\n@function lh($family, $scale){\n  $scale: smart-quote($scale);\n  @if not map-has-key($project-cap-heights, $family) {\n    @error \"#{$family} is not a valid font family. Valid values: #{map-keys($project-cap-heights)}\";\n  }\n  @elseif not map-get($uswds-line-height, $scale) {\n    @error \"`#{$scale}` is not a valid line-height scale. Valid values: #{map-keys($all-type-scale)}\";\n  }\n  @else {\n    $this-cap: map-get($project-cap-heights, $family);\n    $this-line-height: map-get($uswds-line-height, $scale);\n    $normalized-line-height:  $this-line-height / ($uswds-base-cap-height / $this-cap);\n    @return $normalized-line-height;\n  }\n};\n\n/*\n----------------------------------------\nget-uswds-color()\n----------------------------------------\nDerive a system color from its\nfamily, value, and vivid or a passed\nvariable that is, itself, a list\n----------------------------------------\n*/\n\n@function get-uswds-color($props...){\n  @if length($props) == 0 {\n    @return false;\n  }\n  @elseif type-of(nth($props,1)) == 'list' {\n    $props: nth($props,1);\n    @if length($props) == 2 {\n      @return map-deep-get(\n        $uswds-colors,\n        smart-quote(nth($props, 1)),\n        nth($props, 2)\n      );\n    } @elseif length($props) == 3 {\n      @return map-deep-get(\n        $uswds-colors,\n        smart-quote(nth($props, 1)),\n        smart-quote(nth($props, 3)),\n        nth($props, 2)\n      );\n    }\n  }\n  @elseif nth($props, 1) == false {\n    @return false;\n  }\n  @elseif length($props) == 1 {\n    $props: smart-quote(nth($props, 1));\n    @return map-get($uswds-required-colors, $props);\n  }\n  @elseif length($props) == 2 {\n    @return map-deep-get(\n      $uswds-colors,\n      smart-quote(nth($props, 1)),\n      nth($props, 2)\n    );\n  }\n  @else {\n    @return map-deep-get(\n      $uswds-colors,\n      smart-quote(nth($props, 1)),\n      smart-quote(nth($props, 3)),\n      nth($props, 2)\n    );\n  }\n};\n\n/*\n----------------------------------------\nsystem-type-scale()\n----------------------------------------\nGet a value from the system type scale\n----------------------------------------\n*/\n\n@function system-type-scale($scale){\n  $scale: smart-quote($scale);\n  @if $scale and map-has-key($uswds-type-scale, $scale){\n    @return map-get($uswds-type-scale, $scale);\n  }\n  @elseif $scale == false {\n    @return false;\n  }\n  @else {\n    @error \"`#{$scale}` is not a valid type scale value. Valid values: #{map-keys($uswds-type-scale)}\";\n  }\n};\n\n/*\n========================================\nUtility functions\n----------------------------------------\nTODO: convert/translate these to mixins?\n----------------------------------------\n*/\n\n/*\n----------------------------------------\ncalc-gap-offset()\n----------------------------------------\nCalculate a valid uswds unit that is\nhalf the width of a given unit, for\ncalculating gap offset in the layout\ngrid.\n----------------------------------------\n*/\n\n@function calc-gap-offset($gap-size) {\n  $gap-size: smart-quote($gap-size);\n  @if map-has-key($spacing-to-value, $gap-size) {\n    $numeric-eq: map-get($spacing-to-value, $gap-size);\n    $numeric-eq-half: smart-quote($numeric-eq / 2);\n    @if map-has-key($spacing-to-token, $numeric-eq-half){\n      @return map-get($spacing-to-token, $numeric-eq-half);\n    }\n    @else {\n      @error \"`#{$gap-size}` is not a valid USWDS gap size. Column gaps need to have a standard size half their width.\";\n    }\n  }\n  @else {\n    @error \"`#{$gap-size}` is not a valid USWDS gap size.\";\n  }\n}\n\n/*\n----------------------------------------\nget-standard-values()\n----------------------------------------\nGets a map of USWDS standard values\nfor a property\n----------------------------------------\n*/\n\n@function get-standard-values($property){\n @return map-deep-get($uswds-properties, $property, standard);\n}\n\n/*\n----------------------------------------\nnumber-to-value()\n----------------------------------------\nConverts an integer or numeric value\ninto a system value\n\nEx: 0.5   --> '05'\n    -1px  --> 'neg-1px'\n----------------------------------------\n*/\n\n@function number-to-value($number) {\n  @if map-has-key($number-to-value, $number) {\n    @return map-get($number-to-value, $number);\n  }\n  @else {\n    @return false;\n  }\n}\n\n/*\n----------------------------------------\nget-uswds-value()\n----------------------------------------\nFinds and outputs a value from the\nUSWDS standard values.\n\nUsed to build other standard utility\nfunctions and mixins.\n----------------------------------------\n*/\n\n@function get-uswds-value($property, $value...){\n  @if type-of($value) == 'arglist' and nth($value, 1) == override {\n    @return nth($value, 2);\n  }\n  $value: nth($value, 1);\n  $converted: number-to-value($value);\n  $quoted-value: smart-quote(nth($value, 1));\n  @if $converted {\n    $quoted-value: smart-quote($converted);\n  }\n  $our-standard-values: map-deep-get($uswds-properties, $property, standard);\n  $our-extended-values: map-deep-get($uswds-properties, $property, extended);\n  @if map-has-key($our-standard-values, $quoted-value) {\n    @if map-get($our-standard-values, $quoted-value) {\n      @return map-get($our-standard-values, $quoted-value);\n    }\n    @else {\n      @warn \"`#{$value}` is set as a `false` value for the #{$property} property in your project settings and will not output properly. Set the value of `#{$value}` in project settings.\";\n      @return map-get($our-standard-values, $quoted-value);\n    }\n  }\n  @elseif map-has-key($our-extended-values, $quoted-value) {\n    @warn \"`#{$value}` is an extended USWDS `#{$property}` unit. This is OK, but only components built with standard values can be accepted back into the system. Standard `#{$property}` values: #{map-keys($our-standard-values)}\";\n    @return map-get($our-extended-values, $quoted-value);\n  }\n  @elseif type-of($value) == 'number' and not unitless($value) {\n    @warn \"`#{$value}` is not a USWDS `#{$property}` unit. This is OK, but only components built with standard values can be accepted back into the system. Standard `#{$property}` values: #{map-keys($our-standard-values)}\";\n    @return $value;\n  }\n  @else {\n    @error \"`#{$value}` is not a valid `#{$property}` value. You should correct this. Standard `#{$property}` values: #{map-keys($our-standard-values)}\";\n  }\n};\n\n/*\n----------------------------------------\nborder-radius()\n----------------------------------------\nGet a border-radius from the system\nborder-radii\n----------------------------------------\n*/\n\n@function border-radius($value) {\n  @if map-has-key($all-border-radius, $value) {\n    @return map-get($all-border-radius, $value);\n  }\n  @else {\n    @error \"`#{$value}` is not a valid border radius value. Valid values: #{map-keys($all-border-radius)}\";\n  }\n};\n\n/*\n----------------------------------------\ncheck-color()\n----------------------------------------\nCheck to see if the value of a variable\nis false. Warn if it is.\n----------------------------------------\n*/\n\n@function check-color($value) {\n  @if $value {\n    @if type-of($value) == 'string' {\n      @return unquote($value);\n    }\n    @else {\n      @return $value;\n    }\n  }\n  @else {\n    @warn \"You're using a value that's either set to false in your settings or is a vivid variant that does not exist.\";\n    @return \"pink\";\n  }\n}\n\n\n/*\n----------------------------------------\ncolor()\n----------------------------------------\nDerive a color from the map of all\ncolors: project and system\n----------------------------------------\n*/\n\n@function color($props...){\n  @if length($props) == 0 {\n    @return false;\n  } @elseif nth($props, 1) == false {\n    @return false;\n  } @elseif length($props) == 1 {\n    $props: smart-quote(nth($props, 1));\n    @if map-has-key($all-project-colors, $props){\n      @return map-deep-get(\n        $all-project-colors,\n        $props,\n        'base'\n      );\n    }\n    @elseif map-has-key($uswds-required-colors, $props){\n      @return map-get($uswds-required-colors, $props);\n    }\n    @else {\n      @error \"#{nth($props, 1)} is not a USWDS color. Reserved values: #{map-keys($uswds-required-colors)}. Project theme values:  #{map-keys($all-project-colors)}. System colors — #{map-keys($uswds-colors)} — need a grade of 5, 10, 20, 30, 40, 50, 60, 70, 80, or 90.\";\n    }\n  } @elseif length($props) == 2 {\n    @if type-of(nth($props, 2)) == 'number' {\n      @return map-deep-get(\n        $uswds-colors,\n        smart-quote(nth($props, 1)),\n        nth($props, 2)\n      );\n    }\n    @else {\n      @return map-deep-get(\n        $all-project-colors,\n        smart-quote(nth($props, 1)),\n        smart-quote(nth($props, 2))\n      );\n    }\n  } @else {\n    @if map-deep-get(\n      $uswds-colors,\n      smart-quote(nth($props, 1)),\n      smart-quote(nth($props, 3)),\n      nth($props, 2)\n    ) == false {\n      @error \"`#{nth($props, 1)}` does not have a vivid variant for `#{nth($props, 2)}`.\";\n    }\n    @return map-deep-get(\n      $uswds-colors,\n      smart-quote(nth($props, 1)),\n      smart-quote(nth($props, 3)),\n      nth($props, 2)\n    );\n  }\n};\n\n/*\n----------------------------------------\nfeature()\n----------------------------------------\nGets a valid USWDS font feature setting\n----------------------------------------\n*/\n\n@function feature($value) {\n  @return get-uswds-value(feature, $value);\n};\n\n/*\n----------------------------------------\nflex()\n----------------------------------------\nGets a valid USWDS flex value\n----------------------------------------\n*/\n\n@function flex($value) {\n  @return get-uswds-value(flex, $value);\n};\n\n/*\n----------------------------------------\nfont()\n----------------------------------------\nGets\n- 'family'\n- 'size'\n- 'weight'\nbased on on props passed\n----------------------------------------\n*/\n\n@function font($props...){\n  $type: smart-quote(nth($props, 1));\n  @if $type == 'family' {\n    $our-family: smart-quote(nth($props, 2));\n    @if not map-has-key($project-font-stacks, $our-family){\n      @error \"#{$our-family} is not a valid font family. Valid values: #{map-keys($project-font-stacks)}\";\n    }\n    @elseif not map-get($project-font-stacks, $our-family) {\n      @error \"Font family `#{$our-family}` is disabled in your project's theme settings. Set its value to `true` to use this family.\";\n    }\n    @else {\n      @return map-get($project-font-stacks, $our-family);\n    }\n  }\n  @elseif $type == 'size' {\n    @if length($props) != 3 {\n      @error \"Font size requires a valid FAMILY and SIZE in the form `font('family', 'FAMILY', 'SIZE')`\";\n    }\n    $our-family: smart-quote(nth($props, 2));\n    $our-scale: smart-quote(smart-quote(nth($props, 3)));\n    @if not map-has-key($project-cap-heights, $our-family) {\n      @error \"#{$our-family} is not a valid font family. Valid values: #{map-keys($project-cap-heights)}\";\n    }\n    @elseif not map-get($all-type-scale, $our-scale) {\n      @error \"`#{$our-scale}` is not a valid font scale. Valid values: #{map-keys($all-type-scale)}\";\n    }\n    @else {\n      $this-cap: map-get($project-cap-heights, $our-family);\n      $this-scale: map-get($all-type-scale, $our-scale);\n      @if $this-scale and $this-cap {\n        @return type-scale($this-cap, $this-scale);\n      }\n      @else {\n        @error \"The scale `#{$our-scale}` is disabled in your project's theme settings. Set its value to `true` to use this family.\";\n      }\n    }\n  }\n  @elseif $type == 'weight' {\n    $weight: smart-quote(nth($props, 2));\n    $standard-weights: map-deep-get($uswds-properties, font-weight, standard);\n    $extended-weights: map-deep-get($uswds-properties, font-weight, extended);\n    @if type-of($weight) == 'number' {\n      @return $weight;\n    }\n    @elseif map-has-key($standard-weights, $weight) {\n      @return map-get($standard-weights, $weight);\n    }\n    @elseif map-has-key($extended-weights, $weight) {\n      @warn \"`#{$weight}` is a USWDS extended weight. This is OK, but consider using a standard project weight for production code. Standard weights: #{map-keys($standard-weights)}\";\n      @return map-get($extended-weights, $weight);\n    }\n    @else {\n      @error \"`#{$number}` is not a valid font weight.\";\n    }\n  }\n  @else {\n    @error \"`#{$type}` is not a valid type for the font() function. Valid types: 'family', 'size', 'weight'\";\n  }\n};\n\n/*\n----------------------------------------\nfw()\n----------------------------------------\nGet a font-weight value from the\nsystem font-weight\n----------------------------------------\n*/\n\n@function fw($value) {\n  @return get-uswds-value(font-weight, $value);\n};\n\n/*\n----------------------------------------\nfont-weight()\n----------------------------------------\nGets a valid USWDS font-weight\n----------------------------------------\n*/\n\n@function font-weight($value) {\n  @if map-has-key($project-font-weights, $value) {\n    @if map-get($project-font-weights, $value) == false {\n      @error \"Font weight `#{$value}` is disabled in your project's theme settings. Set its value to `true` to use this weight.\";\n    }\n    @return map-get($project-font-weights, $value);\n  }\n  @else {\n    @error \"`#{$value}` is not a valid font-weight value. Valid values: #{map-keys($project-font-weights)}\";\n  }\n};\n\n/*\n----------------------------------------\nletter-spacing()\n----------------------------------------\nGet a letter-spacing value from the\nsystem letter-spacing\n----------------------------------------\n*/\n\n@function letter-spacing($value) {\n  @return get-uswds-value(letter-spacing, $value);\n};\n\n/*\n----------------------------------------\nline-height()\n----------------------------------------\nGet a line height from the system\nline heights\n----------------------------------------\n*/\n\n@function line-height($value) {\n  @return get-uswds-value(line-height, $value);\n};\n\n/*\n----------------------------------------\nmeasure()\n----------------------------------------\nGets a valid USWDS reading line length\n----------------------------------------\n*/\n\n@function measure($value) {\n  @return get-uswds-value(measure, $value);\n};\n\n/*\n----------------------------------------\nopacity()\n----------------------------------------\nGet an opacity from the system\nopacities\n----------------------------------------\n*/\n\n@function opacity($value) {\n  @return get-uswds-value(opacity, $value);\n};\n\n/*\n----------------------------------------\norder()\n----------------------------------------\nGet an order value from the\nsystem orders\n----------------------------------------\n*/\n\n@function order($value) {\n  @return get-uswds-value(order, $value);\n};\n\n/*\n----------------------------------------\nspacing()\n----------------------------------------\nConverts a spacing unit multiple into\nthe desired final units (currently rem)\n----------------------------------------\n*/\n\n@function spacing($value) {\n  @if type-of($value) == 'number' and unitless($value) {\n    @return grid-units($value);\n  }\n  @else {\n    $value: smart-quote($value);\n    @if map-has-key($project-spacing-standard, $value) {\n      @if map-get($project-spacing-standard, $value) == false {\n        @warn \"Spacing unit `#{$value}` has been disabled in your theme settings. It will output as `false`.\";\n      }\n      @return map-get($project-spacing-standard, $value);\n    }\n    @elseif $value == false {\n      @return false;\n    }\n    @elseif type-of($value) == 'number' and not unitless($value) {\n      @warn \"`#{$value}` is not a standard USWDS unit. This is OK, but consider using a standard spacing unit instead.\";\n      @return $value;\n    }\n    @else {\n      @error \"`#{$value}` is not a valid spacing unit. Valid spacing unit values: #{map-keys($project-spacing-standard)}\";\n    }\n  }\n};\n\n/*\n----------------------------------------\nradius()\n----------------------------------------\nGet a border-radius value from the\nsystem letter-spacing\n----------------------------------------\n*/\n\n@function radius($value) {\n  @return get-uswds-value(border-radius, $value);\n};\n\n/*\n----------------------------------------\nz-index()\n----------------------------------------\nGet a z-index value from the\nsystem z-index\n----------------------------------------\n*/\n\n@function z-index($value) {\n  @return get-uswds-value(z-index, $value);\n};\n\n/*\n----------------------------------------\nget-plugins()\n----------------------------------------\nBuild a single map of plugin values\nfrom a list of plugin keys.\n----------------------------------------\nTODO: Somewhat crude now. Could be more\nelegant\n----------------------------------------\n*/\n\n@function get-plugins($list){\n  $our-plugins:();\n  $registry:();\n\n  @if type-of($list) == 'map' {\n    @error \"Use a list of strings as plugin values.\";\n  }\n  @each $plugin in $list {\n    //@debug \"Using utility plugin: `#{$plugin}`\";\n    // find the plugin in the registry\n    @if str-index($plugin, 'plugin-spacing'){\n      @if str-index($plugin, theme){\n        $registry: map-deep-get($plugin-registry, spacing, theme);\n      }\n      @elseif str-index($plugin, uswds){\n        $registry: map-deep-get($plugin-registry, spacing, uswds);\n      }\n      @else {\n        $registry: map-deep-get($plugin-registry, spacing, units);\n      }\n    }\n    @elseif str-index($plugin, 'plugin-font'){\n      @if str-index($plugin, mono){\n        @if str-index($plugin, theme){\n          $registry: map-deep-get($plugin-registry, font, mono, theme);\n        }\n        @else {\n          $registry: map-deep-get($plugin-registry, font, mono, uswds);\n        }\n      }\n      @elseif str-index($plugin, sans){\n        @if str-index($plugin, theme){\n          $registry: map-deep-get($plugin-registry, font, sans, theme);\n        }\n        @else {\n          $registry: map-deep-get($plugin-registry, font, sans, uswds);\n        }\n      }\n      @elseif str-index($plugin, serif){\n        @if str-index($plugin, theme){\n          $registry: map-deep-get($plugin-registry, font, serif, theme);\n        }\n        @else {\n          $registry: map-deep-get($plugin-registry, font, serif, uswds);\n        }\n      }\n      @else {\n        $registry: map-deep-get($plugin-registry, font, misc);\n      }\n    }\n    // yes, this is inefficient\n    @elseif str-index($plugin, 'plugin-color'){\n      @if str-index($plugin, 'palette') {\n        $registry: map-deep-get($plugin-registry, color, palettes);\n      }\n      @elseif str-index($plugin, 'gray-cool') {\n        $registry: map-deep-get($plugin-registry, color, gray-cool);\n      }\n      @elseif str-index($plugin, 'black-transparent') {\n        $registry: map-deep-get($plugin-registry, color, black-transparent);\n      }\n      @elseif str-index($plugin, 'gray-warm') {\n        $registry: map-deep-get($plugin-registry, color, gray-warm);\n      }\n      @elseif str-index($plugin, 'gray') {\n        $registry: map-deep-get($plugin-registry, color, gray);\n      }\n      @elseif str-index($plugin, 'blue-warm') {\n        $registry: map-deep-get($plugin-registry, color, blue-warm);\n      }\n      @elseif str-index($plugin, 'blue') {\n        $registry: map-deep-get($plugin-registry, color, blue);\n      }\n      @elseif str-index($plugin, 'cyan') {\n        $registry: map-deep-get($plugin-registry, color, cyan);\n      }\n      @elseif str-index($plugin, 'gold') {\n        $registry: map-deep-get($plugin-registry, color, gold);\n      }\n      @elseif str-index($plugin, 'green-cool') {\n        $registry: map-deep-get($plugin-registry, color, green-cool);\n      }\n      @elseif str-index($plugin, 'green-warm') {\n        $registry: map-deep-get($plugin-registry, color, green-warm);\n      }\n      @elseif str-index($plugin, 'green') {\n        $registry: map-deep-get($plugin-registry, color, green);\n      }\n      @elseif str-index($plugin, 'indigo-cool') {\n        $registry: map-deep-get($plugin-registry, color, indigo-cool);\n      }\n      @elseif str-index($plugin, 'indigo-warm') {\n        $registry: map-deep-get($plugin-registry, color, indigo-warm);\n      }\n      @elseif str-index($plugin, 'indigo') {\n        $registry: map-deep-get($plugin-registry, color, indigo);\n      }\n      @elseif str-index($plugin, 'magenta') {\n        $registry: map-deep-get($plugin-registry, color, magenta);\n      }\n      @elseif str-index($plugin, 'mint-cool') {\n        $registry: map-deep-get($plugin-registry, color, mint-cool);\n      }\n      @elseif str-index($plugin, 'mint') {\n        $registry: map-deep-get($plugin-registry, color, mint);\n      }\n      @elseif str-index($plugin, 'orange-warm') {\n        $registry: map-deep-get($plugin-registry, color, orange-warm);\n      }\n      @elseif str-index($plugin, 'orange') {\n        $registry: map-deep-get($plugin-registry, color, orange);\n      }\n      @elseif str-index($plugin, 'red-warm') {\n        $registry: map-deep-get($plugin-registry, color, red-warm);\n      }\n      @elseif str-index($plugin, 'red') {\n        $registry: map-deep-get($plugin-registry, color, red);\n      }\n      @elseif str-index($plugin, 'violet-cool') {\n        $registry: map-deep-get($plugin-registry, color, violet-cool);\n      }\n      @elseif str-index($plugin, 'violet-warm') {\n        $registry: map-deep-get($plugin-registry, color, violet-warm);\n      }\n      @elseif str-index($plugin, 'white-cool') {\n        $registry: map-deep-get($plugin-registry, color, white-cool);\n      }\n      @elseif str-index($plugin, 'white-warm') {\n        $registry: map-deep-get($plugin-registry, color, white-warm);\n      }\n      @elseif str-index($plugin, 'white-transparent') {\n        $registry: map-deep-get($plugin-registry, color, white-transparent);\n      }\n      @elseif str-index($plugin, 'white') {\n       $registry: map-deep-get($plugin-registry, color, white);\n      }\n      @elseif str-index($plugin, 'yellow') {\n       $registry: map-deep-get($plugin-registry, color, yellow);\n      }\n      @else {\n       $registry: map-deep-get($plugin-registry, color, misc);\n      }\n    }\n    @else {\n      $registry: map-get($plugin-registry, standard);\n    }\n    // now the registry is set\n    @if not map-has-key($registry, #{$plugin}){\n      @error \"#{$plugin} isn't in the registry.\";\n    }\n    @else {\n      $our-plugins: map-merge(\n        $our-plugins,\n        map-get($registry, #{$plugin})\n      );\n    }\n  } // end plugin list loop\n  @return $our-plugins;\n};\n\n/*\n----------------------------------------\n@render-pseudoclass\n----------------------------------------\nBuild a pseucoclass utiliy from values\ncalculated in the @render-utilities-in\nloop\n----------------------------------------\n*/\n\n@mixin render-pseudoclass($utility, $pseudoclass, $selector, $property, $value, $val-props, $mq) {\n  $important: null;\n  @if $utilities-use-important {\n    $important: ' !important';\n  }\n  $this-mq: null;\n  $this-type: map-get($utility, type);\n\n  @if $mq {\n    $this-mq: '#{$mq}\\\\:';\n  }\n  .#{$this-mq}#{$pseudoclass}\\:#{ns($this-type)}#{$selector}:#{$pseudoclass} {\n    @each $this-property in $property {\n      #{$this-property}: unquote(\"#{$value}#{$important}\");\n    }\n  }\n}\n\n/*\n----------------------------------------\n@render-placeholder\n----------------------------------------\nBuild a placeholder utility from values\ncalculated in the @render-utilities-in\nloop\n\nCould be deprecated if we never choose\nto style placeholder text\n----------------------------------------\n*/\n\n@mixin render-placeholder($selector, $property, $value, $val-props, $important) {\n  $this-namespace: null;\n\n  @if $utility-type == settings {\n    $this-namespace: $theme-settings-utilities-namespace;\n  }\n  .#{$this-namespace}pl-#{$selector}::placeholder {\n    @each $this-property in $property {\n      #{$this-property}: unquote(\"#{$value}#{$important}\");\n    }\n  }\n}\n\n/*\n----------------------------------------\n@render-media-queries\n----------------------------------------\nBuild @media media queries from values\ncalculated in the @render-utilities-in\nloop\n----------------------------------------\n*/\n\n@mixin render-media-queries($utility, $selector, $property, $value, $val-props) {\n  $important: null;\n  @if $utilities-use-important {\n    $important: ' !important';\n  }\n  $our-breakpoints: map-deep-get($uswds-properties, breakpoints, standard);\n  $mq: null;\n  $this-type: map-get($utility, type);\n\n  @each $media-key, $media-value in $our-breakpoints {\n    $mq: unquote($media-key);\n    // TODO: not working properly\n    // $media-value-em: grid-to-base-em($media-value);\n    $media-value-px: rem-to-px($media-value);\n\n    @if map-get($theme-output-breakpoints, $media-key) {\n      @media (min-width: #{$media-value-px}) {\n        .#{$mq}\\:#{ns($this-type)}#{$selector} {\n          @if map-has-key($val-props, extend) {\n            @each $ext-prop, $ext-value in map-get($val-props, extend) {\n              #{strunquote($ext-prop)}: unquote(\"#{strunquote($ext-value)}#{$important}\");\n            }\n          }\n\n          @each $this-property in $property {\n            #{$this-property}: unquote(\"#{$value}#{$important}\");\n          }\n\n          @if map-has-key($utility, extend) {\n            @each $ext-prop, $ext-value in map-get($utility, extend) {\n              #{strunquote($ext-prop)}: unquote(\"#{strunquote($ext-value)}#{$important}\");\n            }\n          }\n          @if map-deep-get($utility, settings, hover) {\n            @include render-pseudoclass($utility, hover, $selector, $property, $value, $val-props, $mq);\n          }\n          @if map-deep-get($utility, settings, visited) {\n            @include render-pseudoclass($utility, visited, $selector, $property, $value, $val-props, $mq);\n          }\n        }\n      }\n    }\n  }\n}\n\n/*\n----------------------------------------\n@render-utility\n----------------------------------------\nBuild a utility from values calculated\nin the @render-utilities-in loop\n----------------------------------------\nTODO: Determine the proper use of\nunquote() in the following. Changed to\naccount for a \"interpolation near\noperators will be simplified in a\nfuture version of Sass\" warning.\n----------------------------------------\n*/\n\n@mixin render-utility($utility, $selector, $property, $value, $val-props) {\n\n  $important: null;\n  @if $utilities-use-important {\n    $important: ' !important';\n  }\n  $mq: null;\n  $this-type: map-get($utility, type);\n\n  .#{ns($this-type)}#{$selector} {\n    @if map-has-key($val-props, extend) {\n      @each $ext-prop, $ext-value in map-get($val-props, extend) {\n        #{strunquote($ext-prop)}: unquote(\"#{strunquote($ext-value)}#{$important}\");\n      }\n    }\n\n    @if map-has-key($val-props, extends) {\n      @extend %#{map-get($val-props, extends)};\n    }\n\n    @each $this-property in $property {\n      #{$this-property}: unquote(\"#{$value}#{$important}\");\n    }\n\n    @if map-has-key($utility, extend) {\n      @each $ext-prop, $ext-value in map-get($utility, extend) {\n        #{strunquote($ext-prop)}: unquote(\"#{strunquote($ext-value)}#{$important}\");\n      }\n    }\n  }\n\n  // Add the pseudoclass variants, if applicable\n\n  @if map-deep-get($utility, settings, hover) {\n    @include render-pseudoclass($utility, hover, $selector, $property, $value, $val-props, $mq);\n  }\n\n  @if map-deep-get($utility, settings, active) {\n    @include render-pseudoclass($utility, active, $selector, $property, $value, $val-props, $mq);\n  }\n\n  @if map-deep-get($utility, settings, visited) {\n    @include render-pseudoclass($utility, visited, $selector, $property, $value, $val-props, $mq);\n  }\n\n  @if map-deep-get($utility, settings, focus) {\n    @include render-pseudoclass($utility, focus, $selector, $property, $value, $val-props, $mq);\n  }\n\n  // Add the placeholder variant, if applicable\n\n  @if map-get($utility, placeholder) {\n    @include render-placeholder($selector, $property, $value, $val-props);\n  }\n\n  // And add the responsive prefixes, if applicable\n\n  @if map-deep-get($utility, settings, responsive) {\n    @include render-media-queries($utility, $selector, $property, $value, $val-props);\n  }\n}\n\n/*\n----------------------------------------\n@render-utilities-in\n----------------------------------------\nThe master loop that sets the building\nblocks of utilities from the values\nin individual rule settings and loops\nthrough all possible variants\n----------------------------------------\n*/\n\n@mixin render-utilities-in($utilities) {\n\n  // loop through the $utilities\n\n  @each $utility-name, $utility in $utilities {\n\n    // Only do this if the the utility is meant to output\n\n    @if map-deep-get($utility, settings, output) or\n      $output-all-utilities {\n\n      // set intital variants\n      // $property-default is a single value for all these utilities\n\n      $base-props: null;\n      $modifier: null;\n      $selector: null;\n      $property-default: map-get($utility, property);\n      $property: null;\n      $value: null;\n      $our-modifiers: ();\n      $b: null;\n      $v: null;\n      $mv: null;\n      $val-props: ();\n      $mq: null;\n\n      //    If there's a base, use base-to-map() to convert it into a MAP:\n      //    $base-props: (\n      //      slug: STRING,\n      //      isReadable: BOOL,\n      //    )\n\n      @if map-get($utility, base) != null {\n        $base-props: base-to-map(map-get($utility, base));\n\n        // And set $b (used in the selector constructor, below) to base-props.slug.\n\n        $b: map-get($base-props, slug);\n\n        // Otherwise, assign it null props.\n\n      } @else {\n        $base-props: (\n          slug: null,\n        );\n      }\n\n      // Each utility rule takes a value, so let's start here and begin building.\n      // Values are held in a MAP, where each individual value has the keypair\n      // KEY   :  VALUE\n      // [slug]:  [value], [isReadable]*\n\n      // -------- For each value in utility.values ----------\n\n      @each $val-key, $val-value in map-get($utility, values) {\n\n        // If $val-value == null, or if $val-value is a map and\n        // the content key or the dependency key has a null value\n        // skip building this rule\n        // altogether\n\n        @if type-of($val-value) == 'map' {\n          @if map-get($val-value, content) == false {\n            $val-value: false;\n          }\n          @elseif map-has-key($val-value, dependency) {\n            @if map-get($val-value, dependency) == false {\n              $val-value: false;\n            }\n          }\n        }\n        @if $val-value {\n\n          // If $val-value is already a MAP...\n\n          @if type-of($val-value) == 'map' {\n\n            // set $val-props = $val-value\n\n            $val-props: $val-value;\n\n            // If it _isn't_ a MAP...\n\n          } @else {\n\n            // ...use to-map() to convert the value keypair into a MAP:\n            //    $val-props: (\n            //      slug: STRING,\n            //      [isReadable: BOOL,]*\n            //      content: LIST,\n            //      [extends: STRING,]*\n            //    )\n\n            // We'll keep the $val-props MAP around,\n            // as we'll need it to build both the rule's value and its selector.\n\n            $val-props: to-map($val-key, $val-value);\n          }\n\n          // In fact, let's set our rule's value now.\n\n          $value: strunquote(nth(map-get($val-props, content), 1));\n\n          // Add any appended values...\n\n          @if map-get($utility, valueAppend) {\n            $value: $value + map-get($utility, valueAppend);\n          }\n\n          // ...or prepended values.\n\n          @if map-get($utility, valuePrepend) {\n            $value: map-get($utility, valuePrepend) + $value;\n          }\n\n          // Then unquote the string.\n\n          $value: strunquote($value);\n\n          // And we'll set the $v as val-props.slug for use in\n          // constructing the selector.\n\n          $v: map-get($val-props, slug);\n\n          // -------- Start of Modifiers ----------\n\n          // Now we'll check for modifiers and loop through them\n          // to get the props we need to build our rule.\n\n          // Modifiers are held in a MAP,\n          // where each individual modifer has the keypair\n          // KEY   :  VALUE\n          // [slug]:  [value], [isReadable]*\n\n          // So, check for modifiers.\n\n          @if map-get($utility, modifiers) != null {\n\n            // If there is one, capture it as $our-modifiers.\n\n            $our-modifiers: map-get($utility, modifiers);\n          } @else {\n\n            // If there isn't one, build a dummy so we can keep\n            // all our build in the same loop.\n\n            $our-modifiers: (\n              slug: null,\n            );\n          }\n\n          // OK! C'mon, let's loop!\n          // https://www.youtube.com/watch?v=X9i2i07wPUw\n\n          // -------- For each modifier in $our-modifiers ----------\n\n          @each $mod-key, $mod-val in $our-modifiers {\n\n            // Use to-map() to convert the modifier keypair into a MAP:\n            //    $mod-props: (\n            //      slug: STRING,\n            //      isReadable: BOOL,\n            //      content: LIST,\n            //    )\n\n            // Just as we did before with the value keypair.\n\n            $mod-props: to-map($mod-key, $mod-val);\n\n            // --- if the modifier content is null -----\n\n            @if map-get($mod-props, content) == null or map-get($mod-props, content) == '' {\n\n              // If mod-props.content is null,\n              // we can set our rule's $property now\n              // since $property is simply $property-default.\n\n              $property: $property-default;\n\n            }\n\n              // '-' “oh hey.”\n\n              //                     '-' “hey.”\n\n              // '-' “hey.”\n\n              // OK, cool.\n              // So what if there _is_ a modifier object?\n\n              // -- if the modifier content is NOT null --\n\n            @else {\n\n              // If there are modifiers, $property is a concat of $property-default\n              // with _each_ of the values in $mod-props.content\n              // There's a function for this... multi-cat()!!\n              // (=^･ｪ･^=))ﾉ彡☆\n              // (^._.^)ﾉ☆( _ _).oO\n              // (=චᆽච=)\n\n              $property: multi-cat($property-default, map-get($mod-props, content));\n            }\n\n            // Now we go through to set the $selector.\n\n            // If mod-props.slug is noModifier...\n\n            @if map-get($mod-props, slug) == '' or map-get($mod-props, slug) == slug {\n\n              // First, we can test to see if the base $b is null\n\n              @if $b == null {\n\n                // If it _is_ null, the rule's selector is $v.\n\n                $selector: $v;\n\n              // if the value is noValue ('')\n\n              } @elseif map-get($val-props, slug) == '' or map-get($val-props, slug) == 'noValue' {\n\n                // selector is the base only\n\n                $selector: $b;\n\n              // Otherwise, if base-props.isReadable, or val-props.isReadable\n\n              } @elseif map-has-key($base-props, isReadable) or\n                map-has-key($val-props, isReadable) {\n\n                // selector is joined with a '-'\n\n                $selector: $b + '-' + $v;\n              } @else {\n\n                // otherwise, it gets a simple join.\n\n                $selector: $b + $v;\n\n                // Nice! We just took care of the non-modifier cases!\n\n              }\n            }\n\n            // Otherwise, check to see if either mod.isReadable or\n            // val.isReadable\n            @else {\n\n              @if map-has-key($mod-props, isReadable) or\n                map-has-key($val-props, isReadable) {\n\n                  // If valProps is `noValue`....\n\n                @if map-get($val-props, slug) == '' or map-get($val-props, slug) == 'noValue' {\n\n                  // ...$mv is just the modifier\n\n                  $mv: map-get($mod-props, slug);\n                } @else {\n\n                  // Otherwise, join with a '-' into selector $mv.\n\n                  $mv: map-get($mod-props, slug) + '-' + map-get($val-props, slug);\n                }\n              } @else {\n\n                // If not, just join into selector $mv.\n\n                $mv: map-get($mod-props, slug) + map-get($val-props, slug);\n              }\n\n              // Once we have $mv, test for $b\n              // and build the selector as before.\n\n              @if $b == null {\n                $selector: $mv;\n              } @elseif map-get($base-props, isReadable) or\n                map-get($mod-props, isReadable) {\n                $selector: $b + '-' + $mv;\n              } @else {\n                $selector: $b + $mv;\n              }\n            }\n\n            // finished setting modifier vars\n\n            // Hey. Did we just finish $selector?\n            // And do we also have $property and $value?\n            // We do?!?!?! We do!\n\n            // FINALLY, \"BUILD THE RULE, MAX!\"\n            // https://www.youtube.com/watch?v=R3Igz5SfBCE\n\n            @include render-utility($utility, $selector, $property, $value, $val-props);\n\n          } // end the modifier loop\n        } // end the null value conditional\n      } // end the value loop\n    } // end the output conditional\n  } // end the utility loop\n  // (ﾉ◕ヮ◕)ﾉ*:･ﾟ✧\n}\n\n@mixin render-font-face($this-font-face) {\n  $these-weights: $project-font-weights;\n  @if $theme-output-all-weights {\n    $these-weights: (\n      100: 100,\n      200: 200,\n      300: 300,\n      400: 400,\n      500: 500,\n      600: 600,\n      700: 700,\n      800: 800,\n      900: 900\n    );\n  }\n\n  @if $this-font-face {\n    $this-font: map-get($all-font-definitions, $this-font-face);\n    $this-font-system: map-get($this-font, system-font);\n\n    @if $this-font-system == false {\n      $font-name: map-get($this-font, name);\n      $roman: map-get($this-font, roman);\n      $italic: map-get($this-font, italic);\n      $dir: map-get($this-font, dir);\n\n      @if $roman {\n        @each $weight, $filename in $roman {\n          @each $key, $outputweight in $these-weights {\n            @if $outputweight == $weight and $filename {\n              @include font-face(\n                '#{$font-name}',\n                '#{$theme-font-path}/#{$dir}/#{$filename}',\n                #{$weight},\n                normal,\n                $file-formats: eot woff2 woff ttf\n              );\n            }\n          }\n        }\n      }\n\n      @if $italic {\n        @each $weight, $filename in $italic {\n          @each $outputweight in $these-weights {\n            @if $outputweight == $weight and $filename {\n              @include font-face(\n                '#{$font-name}',\n                '#{$theme-font-path}/#{$dir}/#{$filename}',\n                #{$weight},\n                italic,\n                $file-formats: eot woff2 woff ttf\n              );\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/* stylelint-enable */\n","@charset \"UTF-8\";\n\n/// Removes the element's gutter margin, regardless of its position in the grid hierarchy or display property. It can target a specific element, or every `nth-child` occurrence. Works only with `block` layouts.\n///\n/// @param {List} $query [block]\n///   List of arguments. Supported arguments are `nth-child` selectors (targets a specific pseudo element) and `auto` (targets `last-child`).\n///\n///   When passed an `nth-child` argument of type `*n` with `block` display, the omega mixin automatically adds a clear to the `*n+1` th element. Note that composite arguments such as `2n+1` do not support this feature.\n///\n///   **Deprecation warning**: The omega mixin will no longer take a `$direction` argument. To change the layout direction, use `row($direction)` or set `$default-layout-direction` instead.\n///\n/// @example scss - Usage\n///   .element {\n///     @include omega;\n///   }\n///\n///   .nth-element {\n///     @include omega(4n);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     margin-right: 0;\n///   }\n///\n///   .nth-element:nth-child(4n) {\n///     margin-right: 0;\n///   }\n///\n///   .nth-element:nth-child(4n+1) {\n///     clear: left;\n///   }\n\n@mixin omega($query: block, $direction: default) {\n  $table: belongs-to(table, $query);\n  $auto: belongs-to(auto, $query);\n\n  @if $direction != default {\n    @include -neat-warn(\"The omega mixin will no longer take a $direction argument. To change the layout direction, use the direction(){...} mixin.\");\n  } @else {\n    $direction: get-direction($layout-direction, $default-layout-direction);\n  }\n\n  @if $table {\n    @include -neat-warn(\"The omega mixin no longer removes padding in table layouts.\");\n  }\n\n  @if length($query) == 1 {\n    @if $auto {\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n\n    @else if contains-display-value($query) and $table == false {\n      margin-#{$direction}: 0;\n    }\n\n    @else {\n      @include nth-child($query, $direction);\n    }\n  } @else if length($query) == 2 {\n    @if $auto {\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    } @else {\n      @include nth-child(nth($query, 1), $direction);\n    }\n  } @else {\n    @include -neat-warn(\"Too many arguments passed to the omega() mixin.\");\n  }\n}\n\n@mixin nth-child($query, $direction) {\n  $opposite-direction: get-opposite-direction($direction);\n\n  &:nth-child(#{$query}) {\n    margin-#{$direction}: 0;\n  }\n\n  @if type-of($query) == number and unit($query) == \"n\" {\n    &:nth-child(#{$query}+1) {\n      clear: $opposite-direction;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// Translates an element horizontally by a number of columns. Positive arguments shift the element to the active layout direction, while negative ones shift it to the opposite direction.\n///\n/// @param {Number (unitless)} $n-columns [1]\n///   Number of columns by which the element shifts.\n///\n/// @example scss - Usage\n///   .element {\n///     @include shift(-3);\n///   }\n///\n/// @example css - CSS output\n///   .element {\n///     margin-left: -25.58941%;\n///   }\n\n@mixin shift($n-columns: 1) {\n  @include shift-in-context($n-columns);\n}\n\n/// Translates an element horizontally by a number of columns, in a specific nesting context.\n///\n/// @param {List} $shift\n///   A list containing the number of columns to shift (`$columns`) and the number of columns of the parent element (`$container-columns`).\n///\n///   The two values can be separated with any string such as `of`, `/`, etc.\n///\n/// @example scss - Usage\n///   .element {\n///     @include shift(-3 of 6);\n///   }\n///\n/// @example css - CSS output\n///   .element {\n///     margin-left: -52.41458%;\n///   }\n\n@mixin shift-in-context($shift: $columns of $container-columns) {\n  $n-columns: nth($shift, 1);\n  $parent-columns: container-shift($shift) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  margin-#{$opposite-direction}: $n-columns * flex-grid(1, $parent-columns) + $n-columns * flex-gutter($parent-columns);\n\n  // Reset nesting context\n  $parent-columns: $grid-columns !global;\n}\n","@if $scope-uswds == true {\n  // Apply a natural box layout model to all elements, but allowing components\n  // to change\n\n  .uswds {\n    box-sizing: border-box;\n  }\n\n  .uswds *,\n  .uswds *::before,\n  .uswds *::after {\n    box-sizing: inherit;\n  }\n\n  .uswds body,\n  body.uswds {\n    background-color: $color-white;\n    overflow-x: hidden;\n  }\n\n  // Hack for clearfixes\n  .lt-ie9 {\n    * {\n      filter: none !important; /* stylelint-disable-line declaration-no-important */\n    }\n  }\n\n  // for IE < 11, see:\n  // <http://caniuse.com/#feat=hidden>\n  [hidden] {\n    display: none !important; /* stylelint-disable-line declaration-no-important */\n  }\n\n  .uswds *:focus,\n  .usa-focus {\n    @include focus;\n  }\n}\n","// Focus state mixin\n@mixin focus {\n  outline: $focus-outline;\n  outline-offset: $focus-spacing;\n}\n","/*\n========================================\ncore/units\n----------------------------------------\nThe master palettes of\n- colors\n- whitespace\n- typescale\n----------------------------------------\nThis file is not meant to be modified\nby USWDS project teams. Change your\nproject values in\nproject/uswds-project-settings\n----------------------------------------\n*/\n\n/*\n----------------------------------------\nSpacing grid multiplier\n----------------------------------------\n*/\n\n$uswds-spacing-grid-base: 8px;\n\n/*\n----------------------------------------\nSpacing grid\n----------------------------------------\n*/\n\n$neg-prefix: 'neg';\n$uswds-spacing:(\n  smaller: (\n    '1px':                      1px,\n    '2px':                      2px,\n  ),\n  small: (\n    '05':                     grid-units(0.5),  // 4px\n    1:                        grid-units(1),   // 8px\n    '105':                    grid-units(1.5), // 12px\n    2:                        grid-units(2),   // 16px\n    '205':                    grid-units(2.5), // 20px\n    3:                        grid-units(3),   // 24px\n  ),\n  smaller-negative: (\n    '#{$neg-prefix}-1px':     -1px,\n    '#{$neg-prefix}-2px':     -2px,\n  ),\n  small-negative: (\n    '#{$neg-prefix}-05':     grid-units(-0.5),  // -4px\n    '#{$neg-prefix}-1':      grid-units(-1),   // -8px\n    '#{$neg-prefix}-105':    grid-units(-1.5), // -12px\n    '#{$neg-prefix}-2':      grid-units(-2),   // -16px\n    '#{$neg-prefix}-205':    grid-units(-2.5), // -20px\n    '#{$neg-prefix}-3':      grid-units(-3),   // -24px\n  ),\n  medium: (\n    4:                        grid-units(4),   // 32px\n    5:                        grid-units(5),   // 40px\n    6:                        grid-units(6),   // 48px\n    7:                        grid-units(7),   // 56px\n    8:                        grid-units(8),   // 64px\n    9:                        grid-units(9),   // 72px\n  ),\n  medium-negative: (\n    '#{$neg-prefix}-4':       grid-units(-4),  // -4px\n    '#{$neg-prefix}-5':       grid-units(-5),  // -8px\n    '#{$neg-prefix}-6':       grid-units(-6),  // -12px\n    '#{$neg-prefix}-7':       grid-units(-7),  // -16px\n    '#{$neg-prefix}-8':       grid-units(-8),  // -24px\n    '#{$neg-prefix}-9':       grid-units(-9),  // -32px\n  ),\n  large: (\n    'card':                   grid-units(20),  // 160px\n    'card-lg':                grid-units(30),  // 240px\n    'mobile':                 grid-units(40),  // 320px\n  ),\n  larger: (\n    'mobile-lg':              grid-units(60),  // 480px\n    'tablet':                 grid-units(80),  // 640px\n    'tablet-lg':              grid-units(110), // 880px\n  ),\n  largest: (\n    'desktop':                grid-units(128), // 1024px\n    'desktop-lg':             grid-units(150), // 1200px\n    'widescreen':             grid-units(175), // 1400px\n  ),\n  special: (\n    0:      0,\n    'auto':   auto,\n  ),\n);\n\n$uswds-column-gaps: (\n  '2px':      2px,\n  '05':     '05',\n  1:        1,\n  3:        3,\n  4:        4,\n  6:        6,\n);\n\n/*\n----------------------------------------\nBreakpoints\n----------------------------------------\n*/\n\n$uswds-breakpoints: map-collect(\n  map-get($uswds-spacing, large),\n  map-get($uswds-spacing, larger),\n  map-get($uswds-spacing, largest)\n);\n\n/*\n----------------------------------------\nUnits\n----------------------------------------\n*/\n\n$uswds-spacing-em: (\n small: (\n   '05em':  .5em,\n   1em:        1em,\n   105em:  1.5em,\n   2em:        2em,\n ),\n);\n\n/*\n----------------------------------------\nLayout grid widths\n----------------------------------------\n*/\n\n$uswds-layout-grid-widths: (\n  1:   100% * (1 / 12),\n  2:   100% * (2 / 12),\n  3:   100% * (3 / 12),\n  4:   100% * (4 / 12),\n  5:   100% * (5 / 12),\n  6:   100% * (6 / 12),\n  7:   100% * (7 / 12),\n  8:   100% * (8 / 12),\n  9:   100% * (9 / 12),\n  10:  100% * (10 / 12),\n  11:  100% * (11 / 12),\n  12:  100% * (12 / 12),\n);\n\n/*\n----------------------------------------\nType scale\n----------------------------------------\n*/\n\n$all-font-definitions: map-merge(\n  $uswds-font-definitions,\n  $theme-font-definitions\n);\n\n$uswds-type-scale: (\n  'micro':   10px,\n  1:   12px,\n  2:   13px,\n  3:   14px,\n  4:   15px,\n  5:   16px,\n  6:   17px,\n  7:   18px,\n  8:   20px,\n  9:   22px,\n  10:  24px,\n  11:  28px,\n  12:  32px,\n  13:  36px,\n  14:  40px,\n  15:  48px,\n  16:  56px,\n  17:  64px,\n  18:  80px,\n  19:  120px,\n  20:  140px,\n);\n\n/*\n----------------------------------------\nMeasure\n----------------------------------------\n*/\n\n$uswds-measure-smaller:\t    40ch;\n$uswds-measure-small:\t      60ch;\n$uswds-measure-base:\t      66ch;\n$uswds-measure-large:\t      72ch;\n$uswds-measure-larger:\t    77ch;\n\n/*\n----------------------------------------\nLine height\n----------------------------------------\n*/\n\n$uswds-line-height: (\n  1:    1,\n  2:    1.15,\n  3:    1.35,\n  4:    1.5,\n  5:    1.62,\n  6:    1.75,\n);\n\n/*\n----------------------------------------\nBase cap height\n----------------------------------------\n500px 'N' height measured in Sketch.\nUsed for normalizing font sizes.\nCurrent normalized to Apple system\nfonts.\n----------------------------------------\n*/\n\n$uswds-base-cap-height: 362px;\n\n/*\n----------------------------------------\nColors\n----------------------------------------\nTODO: It would be great to get these to\nload from a common location like tokens\nstored as YAML.\n----------------------------------------\n*/\n\n$uswds-red: (\n  'red': (\n    5 :          #fcf5f5,\n    10:          #f7ddda,\n    20:          #f7b7ad,\n    30:          #f28f88,\n    40:          #ed6b61,\n    50:          #d83731,\n    60:          #ab3a3a,\n    70:          #6e312f,\n    80:          #3b2523,\n    90:          #211b1b,\n    'vivid': (\n      5:          false,\n      10:         #fccec7,\n      20:         #fda99c,\n      30:         #ff806c,\n      40:         #ff5c48,\n      50:         #e92106,\n      60:         #c31f0a,\n      70:         #9c1503,\n      80:         #631212,\n      90:         false,\n    ),\n  ),\n);\n\n$uswds-red-warm: (\n  'red-warm': (\n    5 :     #faf7f5,\n    10:     #f2ded5,\n    20:     #ebbda2,\n    30:     #db9e7f,\n    40:     #d67c58,\n    50:     #c3502a,\n    60:     #805039,\n    70:     #4f3f33,\n    80:     #302a26,\n    90:     #1f1c18,\n    'vivid': (\n      5:     false,\n      10:    false,\n      20:    #eaa076,\n      30:    #e67549,\n      40:    #ee601d,\n      50:    #d93f04,\n      60:    false,\n      70:    false,\n      80:    false,\n      90:    false,\n    ),\n  ),\n);\n\n$uswds-orange-warm: (\n  'orange-warm': (\n    5 :  #fcf6f2,\n    10:  #f7e1d5,\n    20:  #f7b99e,\n    30:  #f5976e,\n    40:  #e87543,\n    50:  #be5727,\n    60:  #944835,\n    70:  #61382f,\n    80:  #3b2723,\n    90:  #211a19,\n    'vivid': (\n      5:  false,\n      10: false,\n      20: #faad96,\n      30: #fc835c,\n      40: #ff5201,\n      50: #d24200,\n      60: false,\n      70: false,\n      80: false,\n      90: false,\n    ),\n  ),\n);\n\n$uswds-orange: (\n  'orange': (\n    5 :       #fffbf7,\n    10:       #fce2c5,\n    20:       #fabd87,\n    30:       #ed9c5a,\n    40:       #eb8028,\n    50:       #a56931,\n    60:       #73563e,\n    70:       #4f3f33,\n    80:       #302a24,\n    90:       #211b18,\n    'vivid': (\n      5:       #ffebd5,\n      10:      false,\n      20:      #ffba75,\n      30:      #ff9742,\n      40:      #ff7b0f,\n      50:      #c25700,\n      60:      false,\n      70:      false,\n      80:      false,\n      90:      false,\n    ),\n  ),\n);\n\n$uswds-gold: (\n  'gold': (\n    5 :         #faf5eb,\n    10:         #f2e6ce,\n    20:         #dec699,\n    30:         #c7a97b,\n    40:         #ad8b65,\n    50:         #8d6f4e,\n    60:         #6b5947,\n    70:         #4a4034,\n    80:         #302b24,\n    90:         #1f1c19,\n    'vivid': (\n      5:         #fff4d4,\n      10:        #ffcb52,\n      20:        #faaf00,\n      30:        #e6a100,\n      40:        #c98a0c,\n      50:        #946f38,\n      60:        false,\n      70:        false,\n      80:        false,\n      90:        false,\n    ),\n  ),\n);\n\n$uswds-yellow: (\n  'yellow': (\n    5 :       #faf7ed,\n    10:       #f7e8b0,\n    20:       #f0d04f,\n    30:       #cfb04a,\n    40:       #ab9149,\n    50:       #8a7237,\n    60:       #6b5a39,\n    70:       #4d402f,\n    80:       #302a24,\n    90:       #1f1b18,\n    'vivid': (\n      5:       false,\n      10:      #fdd430,\n      20:      #edc730,\n      30:      false,\n      40:      false,\n      50:      false,\n      60:      false,\n      70:      false,\n      80:      false,\n      90:      false,\n    ),\n  ),\n);\n\n$uswds-green-warm: (\n  'green-warm': (\n    5 :   #f9faed,\n    10:   #eaedb9,\n    20:   #ced47f,\n    30:   #aebd5b,\n    40:   #93a150,\n    50:   #717d41,\n    60:   #5e633a,\n    70:   #43452d,\n    80:   #2c2e20,\n    90:   #1c1c16,\n    'vivid': (\n      5:   #f3f8a7,\n      10:  #e6f50f,\n      20:  #cedc0a,\n      30:  #a9bd2d,\n      40:  #7f9e1d,\n      50:  #6b7e00,\n      60:  false,\n      70:  false,\n      80:  false,\n      90:  false,\n    ),\n  ),\n);\n\n$uswds-green: (\n  'green': (\n    5 :        #f7fcf0,\n    10:        #e0ebce,\n    20:        #bcd696,\n    30:        #a2bf77,\n    40:        #83a352,\n    50:        #607f35,\n    60:        #526b27,\n    70:        #3c4a29,\n    80:        #293021,\n    90:        #1a1c18,\n    'vivid': (\n      5:        #d7f4bd,\n      10:       #b4e876,\n      20:       #93cc2e,\n      30:       #81b532,\n      40:       #73a22b,\n      50:       #538200,\n      60:       false,\n      70:       false,\n      80:       false,\n      90:       false,\n    ),\n  ),\n);\n\n$uswds-green-cool: (\n  'green-cool': (\n    5 :   #e8fae6,\n    10:   #d0f7cd,\n    20:   #a4e3a1,\n    30:   #80cc7e,\n    40:   #5db85c,\n    50:   #3d841f,\n    60:   #4d6e37,\n    70:   #384d2a,\n    80:   #272e22,\n    90:   #1a1f1a,\n    'vivid': (\n      5:   #caf4c7,\n      10:  #91e48b,\n      20:  #61cf59,\n      30:  #16c20a,\n      40:  #0caf00,\n      50:  #178800,\n      60:  false,\n      70:  false,\n      80:  false,\n      90:  false,\n    ),\n  ),\n);\n\n$uswds-mint: (\n  'mint': (\n    5 :         #cafcec,\n    10:         #79f7cd,\n    20:         #49e3b0,\n    30:         #4ac79d,\n    40:         #36a882,\n    50:         #1e8461,\n    60:         #266644,\n    70:         #225237,\n    80:         #1d3b29,\n    90:         #1d3b29,\n    'vivid': (\n      5:         #befde9,\n      10:        #30f8b5,\n      20:        #06ec9f,\n      30:        #04c786,\n      40:        false,\n      50:        false,\n      60:        #16754f,\n      70:        false,\n      80:        false,\n      90:        false,\n    ),\n  ),\n);\n\n$uswds-mint-cool: (\n  'mint-cool': (\n    5 :    #f2fffe,\n    10:    #c7f2ef,\n    20:    #a2ded9,\n    30:    #77c7c0,\n    40:    #57ada8,\n    50:    #21827f,\n    60:    #3b6b69,\n    70:    #2b4d47,\n    80:    #1f3030,\n    90:    #151f1f,\n    'vivid': (\n      5:    #dbfff8,\n      10:   #7efce1,\n      20:   #02dbc2,\n      30:   #00baa4,\n      40:   #00b5a9,\n      50:   false,\n      60:   false,\n      70:   false,\n      80:   false,\n      90:   false,\n    ),\n  ),\n);\n\n$uswds-cyan: (\n  'cyan': (\n    5 :         #e8f7fa,\n    10:         #d0f1f7,\n    20:         #9ddceb,\n    30:         #6ecbdb,\n    40:         #4bacbd,\n    50:         #167f91,\n    60:         #2f707a,\n    70:         #2d4b4f,\n    80:         #203133,\n    90:         #151e1f,\n    'vivid': (\n      5:         false,\n      10:        #a8f2ff,\n      20:        #55e1fa,\n      30:        #02c2e8,\n      40:        #00abd1,\n      50:        false,\n      60:        false,\n      70:        false,\n      80:        false,\n      90:        false,\n    ),\n  ),\n);\n\n$uswds-blue: (\n  'blue': (\n    5 :         #f5fbff,\n    10:         #dae9f7,\n    20:         #add1f0,\n    30:         #79bcf2,\n    40:         #56a4e3,\n    50:         #317cb9,\n    60:         #2f6794,\n    70:         #294c69,\n    80:         #1e2f3d,\n    90:         #161e24,\n    'vivid': (\n      5:         false,\n      10:        false,\n      20:        false,\n      30:        #57b3ff,\n      40:        #009afa,\n      50:        #007ade,\n      60:        #0069b4,\n      70:        #0c4d82,\n      80:        #11304f,\n      90:        false,\n    ),\n  ),\n);\n\n$uswds-blue-warm: (\n  'blue-warm': (\n    5 :    #f0f5fc,\n    10:    #dfe7f5,\n    20:    #bccae6,\n    30:    #91add9,\n    40:    #7397d1,\n    50:    #3d75c2,\n    60:    #37629e,\n    70:    #31486b,\n    80:    #232d3d,\n    90:    #161b24,\n    'vivid': (\n      5:    false,\n      10:   false,\n      20:   #b8cbf2,\n      30:   #81aefc,\n      40:   #5e99ff,\n      50:   #2673df,\n      60:   #0052de,\n      70:   #1e4f94,\n      80:   #112a4d,\n      90:   false,\n    ),\n  ),\n);\n\n$uswds-indigo-cool: (\n  'indigo-cool': (\n    5 :  #f5f6fc,\n    10:  #e1e6fa,\n    20:  #bac7f5,\n    30:  #97acf0,\n    40:  #6d91ed,\n    50:  #4a70d9,\n    60:  #425bad,\n    70:  #364173,\n    80:  #23273d,\n    90:  #1b1c2b,\n    'vivid': (\n      5:  false,\n      10: false,\n      20: false,\n      30: false,\n      40: #6694ff,\n      50: false,\n      60: #4150f2,\n      70: false,\n      80: false,\n      90: false,\n    ),\n  ),\n);\n\n$uswds-indigo: (\n  'indigo':(\n    5 :       #fafaff,\n    10:       #e4e3fa,\n    20:       #c2c3f2,\n    30:       #a4a7eb,\n    40:       #8889db,\n    50:       #686dca,\n    60:       #5055b5,\n    70:       #3b3e75,\n    80:       #28293d,\n    90:       #1b1c26,\n    'vivid': (\n      5:       false,\n      10:      false,\n      20:      #acaeec,\n      30:      #8c8fe1,\n      40:      false,\n      50:      #656bd7,\n      60:      #353aa5,\n      70:      false,\n      80:      false,\n      90:      false,\n    ),\n  ),\n);\n\n$uswds-indigo-warm: (\n  'indigo-warm':(\n    5 :  #f9f7ff,\n    10:  #e5e1fa,\n    20:  #c9c2f2,\n    30:  #b1a7eb,\n    40:  #968ade,\n    50:  #7766d3,\n    60:  #5e519e,\n    70:  #433a7a,\n    80:  #29263b,\n    90:  #1d1b24,\n    'vivid': (\n      5:  false,\n      10: false,\n      20: false,\n      30: #b59eff,\n      40: #9980ff,\n      50: #7560eb,\n      60: #5740d1,\n      70: false,\n      80: false,\n      90: false,\n    ),\n  ),\n);\n\n$uswds-violet: (\n  'violet': (\n    5 :       #f7f5fa,\n    10:       #ebe3fa,\n    20:       #cec1e8,\n    30:       #b7a1e3,\n    40:       #9c82d1,\n    50:       #8369b5,\n    60:       #644f8f,\n    70:       #493a66,\n    80:       #2d273b,\n    90:       #1e1b24,\n    'vivid': (\n      5:       false,\n      10:      false,\n      20:      false,\n      30:      #be95e9,\n      40:      #b07bed,\n      50:      #9455dd,\n      60:      #7639b8,\n      70:      #552996,\n      80:      false,\n      90:      false,\n    ),\n  ),\n);\n\n$uswds-violet-warm: (\n  'violet-warm': (\n    5:   #fef7ff,\n    10:  #f5dcf7,\n    20:  #e0bae3,\n    30:  #d096d6,\n    40:  #bd73c7,\n    50:  #b24bbf,\n    60:  #854180,\n    70:  #573455,\n    80:  #332431,\n    90:  #211a21,\n    'vivid': (\n      5:  #fdedff,\n      10: #f9c9ff,\n      20: #f3a8ff,\n      30: #ee82ff,\n      40: #e05ef7,\n      50: #c132d4,\n      60: false,\n      70: false,\n      80: false,\n      90: false,\n    ),\n  ),\n);\n\n$uswds-magenta: (\n  'magenta': (\n    5 :      #faf5f6,\n    10:      #f5dce4,\n    20:      #f0b9cb,\n    30:      #e68eae,\n    40:      #e0699f,\n    50:      #c84180,\n    60:      #8a4365,\n    70:      #613046,\n    80:      #3b212c,\n    90:      #211b1d,\n    'vivid': (\n      5:      false,\n      10:     #ffd1e2,\n      20:     #ffadca,\n      30:     #ff80ae,\n      40:     #fa3c91,\n      50:     #e1277a,\n      60:     #a91b61,\n      70:     false,\n      80:     false,\n      90:     false,\n    ),\n  ),\n);\n\n$uswds-gray-cool: (\n  'gray-cool': (\n    1:    #fafbfc,\n    2:    #f7f9fa,\n    3:    #f5f6f7,\n    4:    #f0f2f5,\n    5 :   #edeff0,\n    10:   #d5d8db,\n    20:   #b8bdc2,\n    30:   #9da2a6,\n    40:   #8c9196,\n    50:   #6f7478,\n    60:   #595d63,\n    70:   #404347,\n    80:   #292a2b,\n    90:   #1c1d1f,\n  ),\n);\n\n$uswds-gray: (\n  'gray': (\n    1:         #fcfcfc,\n    2:         #f9f9f9,\n    3:         #f6f6f6,\n    4:         #f3f3f3,\n    5 :        #f0f0f0,\n    10:        #e6e6e6,\n    20:        #c9c9c9,\n    30:        #adadad,\n    40:        #919191,\n    50:        #757575,\n    60:        #5c5c5c,\n    70:        #454545,\n    80:        #2e2e2e,\n    90:        #171717,\n    100:       #000000,\n  ),\n);\n\n$uswds-gray-warm: (\n  'gray-warm': (\n    1:    #fdfdfc,\n    2:    #fafaf8,\n    3:    #f7f7f3,\n    4:    #f5f5f0,\n    5 :   #f5f5f1,\n    10:   #e0e0da,\n    20:   #d6d5cb,\n    30:   #c2c1b4,\n    40:   #969689,\n    50:   #707064,\n    60:   #5e5e53,\n    70:   #42423c,\n    80:   #2b2b27,\n    90:   #1c1c1b,\n  ),\n);\n\n$uswds-black-transparent: (\n  'black-transparent': (\n    5 :     rgba(0, 0, 0, 0.01),\n    10:     rgba(0, 0, 0, 0.1),\n    20:     rgba(0, 0, 0, 0.2),\n    30:     rgba(0, 0, 0, 0.3),\n    40:     rgba(0, 0, 0, 0.4),\n    50:     rgba(0, 0, 0, 0.5),\n    60:     rgba(0, 0, 0, 0.6),\n    70:     rgba(0, 0, 0, 0.7),\n    80:     rgba(0, 0, 0, 0.8),\n    90:     rgba(0, 0, 0, 0.9),\n  ),\n);\n\n$uswds-white-transparent: (\n  'white-transparent': (\n    5 :     rgba(255, 255, 255, 0.01),\n    10:     rgba(255, 255, 255, 0.1),\n    20:     rgba(255, 255, 255, 0.2),\n    30:     rgba(255, 255, 255, 0.3),\n    40:     rgba(255, 255, 255, 0.4),\n    50:     rgba(255, 255, 255, 0.5),\n    60:     rgba(255, 255, 255, 0.6),\n    70:     rgba(255, 255, 255, 0.7),\n    80:     rgba(255, 255, 255, 0.8),\n    90:     rgba(255, 255, 255, 0.9),\n  ),\n);\n\n$uswds-colors: map-collect(\n  $uswds-red,\n  $uswds-red-warm,\n  $uswds-orange-warm,\n  $uswds-orange,\n  $uswds-gold,\n  $uswds-yellow,\n  $uswds-green-warm,\n  $uswds-green,\n  $uswds-green-cool,\n  $uswds-mint,\n  $uswds-mint-cool,\n  $uswds-cyan,\n  $uswds-blue,\n  $uswds-blue-warm,\n  $uswds-indigo-cool,\n  $uswds-indigo,\n  $uswds-indigo-warm,\n  $uswds-violet,\n  $uswds-violet-warm,\n  $uswds-magenta,\n  $uswds-gray-cool,\n  $uswds-gray,\n  $uswds-gray-warm,\n  $uswds-black-transparent,\n  $uswds-white-transparent\n);\n\n$uswds-required-colors: (\n  'transparent':    transparent,\n  'black':          black,\n  'white':          white,\n  'highlight':      get-uswds-color('gold', 30, 'vivid'),\n);\n\n$uswds-basic-colors: (\n  'red': get-uswds-color('red', 50, 'vivid'),\n  'orange': get-uswds-color('orange', 40, 'vivid'),\n  'gold': get-uswds-color('gold', 20, 'vivid'),\n  'yellow': get-uswds-color('yellow', 10, 'vivid'),\n  'green': get-uswds-color('green', 50, 'vivid'),\n  'mint': get-uswds-color('mint', 30, 'vivid'),\n  'cyan': get-uswds-color('cyan', 40, 'vivid'),\n  'blue': get-uswds-color('blue', 50, 'vivid'),\n  'indigo': get-uswds-color('indigo', 50),\n  'violet': get-uswds-color('violet', 50),\n  'magenta': get-uswds-color('magenta', 50, 'vivid'),\n);\n\n//red\n$red:     map-get($uswds-colors, red);\n$red-5:   get-uswds-color('red', 5);\n$red-10:  get-uswds-color('red', 10);\n$red-20:  get-uswds-color('red', 20);\n$red-30:  get-uswds-color('red', 30);\n$red-40:  get-uswds-color('red', 40);\n$red-50:  get-uswds-color('red', 50);\n$red-60:  get-uswds-color('red', 60);\n$red-70:  get-uswds-color('red', 70);\n$red-80:  get-uswds-color('red', 80);\n$red-90:  get-uswds-color('red', 90);\n$red-5v:  get-uswds-color('red', 5, 'vivid');\n$red-10v: get-uswds-color('red', 10, 'vivid');\n$red-20v: get-uswds-color('red', 20, 'vivid');\n$red-30v: get-uswds-color('red', 30, 'vivid');\n$red-40v: get-uswds-color('red', 40, 'vivid');\n$red-50v: get-uswds-color('red', 50, 'vivid');\n$red-60v: get-uswds-color('red', 60, 'vivid');\n$red-70v: get-uswds-color('red', 70, 'vivid');\n$red-80v: get-uswds-color('red', 80, 'vivid');\n$red-90v: get-uswds-color('red', 90, 'vivid');\n\n// red-warm\n$red-warm:      map-get($uswds-colors, red-warm);\n$red-warm-5:    get-uswds-color('red-warm', 5);\n$red-warm-10:   get-uswds-color('red-warm', 10);\n$red-warm-20:   get-uswds-color('red-warm', 20);\n$red-warm-30:   get-uswds-color('red-warm', 30);\n$red-warm-40:   get-uswds-color('red-warm', 40);\n$red-warm-50:   get-uswds-color('red-warm', 50);\n$red-warm-60:   get-uswds-color('red-warm', 60);\n$red-warm-70:   get-uswds-color('red-warm', 70);\n$red-warm-80:   get-uswds-color('red-warm', 80);\n$red-warm-90:   get-uswds-color('red-warm', 90);\n$red-warm-5v:   get-uswds-color('red-warm', 5, 'vivid');\n$red-warm-10v:  get-uswds-color('red-warm', 10, 'vivid');\n$red-warm-20v:  get-uswds-color('red-warm', 20, 'vivid');\n$red-warm-30v:  get-uswds-color('red-warm', 30, 'vivid');\n$red-warm-40v:  get-uswds-color('red-warm', 40, 'vivid');\n$red-warm-50v:  get-uswds-color('red-warm', 50, 'vivid');\n$red-warm-60v:  get-uswds-color('red-warm', 60, 'vivid');\n$red-warm-70v:  get-uswds-color('red-warm', 70, 'vivid');\n$red-warm-80v:  get-uswds-color('red-warm', 80, 'vivid');\n$red-warm-90v:  get-uswds-color('red-warm', 90, 'vivid');\n\n// orange-warm\n$orange-warm:     map-get($uswds-colors, orange-warm);\n$orange-warm-5:   get-uswds-color('orange-warm', 5);\n$orange-warm-10:  get-uswds-color('orange-warm', 10);\n$orange-warm-20:  get-uswds-color('orange-warm', 20);\n$orange-warm-30:  get-uswds-color('orange-warm', 30);\n$orange-warm-40:  get-uswds-color('orange-warm', 40);\n$orange-warm-50:  get-uswds-color('orange-warm', 50);\n$orange-warm-60:  get-uswds-color('orange-warm', 60);\n$orange-warm-70:  get-uswds-color('orange-warm', 70);\n$orange-warm-80:  get-uswds-color('orange-warm', 80);\n$orange-warm-90:  get-uswds-color('orange-warm', 90);\n$orange-warm-5v:  get-uswds-color('orange-warm', 5, 'vivid');\n$orange-warm-10v: get-uswds-color('orange-warm', 10, 'vivid');\n$orange-warm-20v: get-uswds-color('orange-warm', 20, 'vivid');\n$orange-warm-30v: get-uswds-color('orange-warm', 30, 'vivid');\n$orange-warm-40v: get-uswds-color('orange-warm', 40, 'vivid');\n$orange-warm-50v: get-uswds-color('orange-warm', 50, 'vivid');\n$orange-warm-60v: get-uswds-color('orange-warm', 60, 'vivid');\n$orange-warm-70v: get-uswds-color('orange-warm', 70, 'vivid');\n$orange-warm-80v: get-uswds-color('orange-warm', 80, 'vivid');\n$orange-warm-90v: get-uswds-color('orange-warm', 90, 'vivid');\n\n// orange\n$orange:      map-get($uswds-colors, orange);\n$orange-5:    get-uswds-color('orange', 5);\n$orange-10:   get-uswds-color('orange', 10);\n$orange-20:   get-uswds-color('orange', 20);\n$orange-30:   get-uswds-color('orange', 30);\n$orange-40:   get-uswds-color('orange', 40);\n$orange-50:   get-uswds-color('orange', 50);\n$orange-60:   get-uswds-color('orange', 60);\n$orange-70:   get-uswds-color('orange', 70);\n$orange-80:   get-uswds-color('orange', 80);\n$orange-90:   get-uswds-color('orange', 90);\n$orange-5v:   get-uswds-color('orange', 5, 'vivid');\n$orange-10v:  get-uswds-color('orange', 10, 'vivid');\n$orange-20v:  get-uswds-color('orange', 20, 'vivid');\n$orange-30v:  get-uswds-color('orange', 30, 'vivid');\n$orange-40v:  get-uswds-color('orange', 40, 'vivid');\n$orange-50v:  get-uswds-color('orange', 50, 'vivid');\n$orange-60v:  get-uswds-color('orange', 60, 'vivid');\n$orange-70v:  get-uswds-color('orange', 70, 'vivid');\n$orange-80v:  get-uswds-color('orange', 80, 'vivid');\n$orange-90v:  get-uswds-color('orange', 90, 'vivid');\n\n// gold\n$gold:      map-get($uswds-colors, gold);\n$gold-5:    get-uswds-color('gold', 5);\n$gold-10:   get-uswds-color('gold', 10);\n$gold-20:   get-uswds-color('gold', 20);\n$gold-30:   get-uswds-color('gold', 30);\n$gold-40:   get-uswds-color('gold', 40);\n$gold-50:   get-uswds-color('gold', 50);\n$gold-60:   get-uswds-color('gold', 60);\n$gold-70:   get-uswds-color('gold', 70);\n$gold-80:   get-uswds-color('gold', 80);\n$gold-90:   get-uswds-color('gold', 90);\n$gold-5v:   get-uswds-color('gold', 5, 'vivid');\n$gold-10v:  get-uswds-color('gold', 10, 'vivid');\n$gold-20v:  get-uswds-color('gold', 20, 'vivid');\n$gold-30v:  get-uswds-color('gold', 30, 'vivid');\n$gold-40v:  get-uswds-color('gold', 40, 'vivid');\n$gold-50v:  get-uswds-color('gold', 50, 'vivid');\n$gold-60v:  get-uswds-color('gold', 60, 'vivid');\n$gold-70v:  get-uswds-color('gold', 70, 'vivid');\n$gold-80v:  get-uswds-color('gold', 80, 'vivid');\n$gold-90v:  get-uswds-color('gold', 90, 'vivid');\n\n// yellow\n$yellow:      map-get($uswds-colors, yellow);\n$yellow-5:    get-uswds-color('yellow', 5);\n$yellow-10:   get-uswds-color('yellow', 10);\n$yellow-20:   get-uswds-color('yellow', 20);\n$yellow-30:   get-uswds-color('yellow', 30);\n$yellow-40:   get-uswds-color('yellow', 40);\n$yellow-50:   get-uswds-color('yellow', 50);\n$yellow-60:   get-uswds-color('yellow', 60);\n$yellow-70:   get-uswds-color('yellow', 70);\n$yellow-80:   get-uswds-color('yellow', 80);\n$yellow-90:   get-uswds-color('yellow', 90);\n$yellow-5v:   get-uswds-color('yellow', 5, 'vivid');\n$yellow-10v:  get-uswds-color('yellow', 10, 'vivid');\n$yellow-20v:  get-uswds-color('yellow', 20, 'vivid');\n$yellow-30v:  get-uswds-color('yellow', 30, 'vivid');\n$yellow-40v:  get-uswds-color('yellow', 40, 'vivid');\n$yellow-50v:  get-uswds-color('yellow', 50, 'vivid');\n$yellow-60v:  get-uswds-color('yellow', 60, 'vivid');\n$yellow-70v:  get-uswds-color('yellow', 70, 'vivid');\n$yellow-80v:  get-uswds-color('yellow', 80, 'vivid');\n$yellow-90v:  get-uswds-color('yellow', 90, 'vivid');\n\n// green-warm\n$green-warm:      map-get($uswds-colors, green-warm);\n$green-warm-5:    get-uswds-color('green-warm', 5);\n$green-warm-10:   get-uswds-color('green-warm', 10);\n$green-warm-20:   get-uswds-color('green-warm', 20);\n$green-warm-30:   get-uswds-color('green-warm', 30);\n$green-warm-40:   get-uswds-color('green-warm', 40);\n$green-warm-50:   get-uswds-color('green-warm', 50);\n$green-warm-60:   get-uswds-color('green-warm', 60);\n$green-warm-70:   get-uswds-color('green-warm', 70);\n$green-warm-80:   get-uswds-color('green-warm', 80);\n$green-warm-90:   get-uswds-color('green-warm', 90);\n$green-warm-5v:   get-uswds-color('green-warm', 5, 'vivid');\n$green-warm-10v:  get-uswds-color('green-warm', 10, 'vivid');\n$green-warm-20v:  get-uswds-color('green-warm', 20, 'vivid');\n$green-warm-30v:  get-uswds-color('green-warm', 30, 'vivid');\n$green-warm-40v:  get-uswds-color('green-warm', 40, 'vivid');\n$green-warm-50v:  get-uswds-color('green-warm', 50, 'vivid');\n$green-warm-60v:  get-uswds-color('green-warm', 60, 'vivid');\n$green-warm-70v:  get-uswds-color('green-warm', 70, 'vivid');\n$green-warm-80v:  get-uswds-color('green-warm', 80, 'vivid');\n$green-warm-90v:  get-uswds-color('green-warm', 90, 'vivid');\n\n// green\n$green:     map-get($uswds-colors, green);\n$green-5:   get-uswds-color('green', 5);\n$green-10:  get-uswds-color('green', 10);\n$green-20:  get-uswds-color('green', 20);\n$green-30:  get-uswds-color('green', 30);\n$green-40:  get-uswds-color('green', 40);\n$green-50:  get-uswds-color('green', 50);\n$green-60:  get-uswds-color('green', 60);\n$green-70:  get-uswds-color('green', 70);\n$green-80:  get-uswds-color('green', 80);\n$green-90:  get-uswds-color('green', 90);\n$green-5v:  get-uswds-color('green', 5, 'vivid');\n$green-10v: get-uswds-color('green', 10, 'vivid');\n$green-20v: get-uswds-color('green', 20, 'vivid');\n$green-30v: get-uswds-color('green', 30, 'vivid');\n$green-40v: get-uswds-color('green', 40, 'vivid');\n$green-50v: get-uswds-color('green', 50, 'vivid');\n$green-60v: get-uswds-color('green', 60, 'vivid');\n$green-70v: get-uswds-color('green', 70, 'vivid');\n$green-80v: get-uswds-color('green', 80, 'vivid');\n$green-90v: get-uswds-color('green', 90, 'vivid');\n\n// green-cool\n$green-cool:      map-get($uswds-colors, green-cool);\n$green-cool-5:    get-uswds-color('green-cool', 5);\n$green-cool-10:   get-uswds-color('green-cool', 10);\n$green-cool-20:   get-uswds-color('green-cool', 20);\n$green-cool-30:   get-uswds-color('green-cool', 30);\n$green-cool-40:   get-uswds-color('green-cool', 40);\n$green-cool-50:   get-uswds-color('green-cool', 50);\n$green-cool-60:   get-uswds-color('green-cool', 60);\n$green-cool-70:   get-uswds-color('green-cool', 70);\n$green-cool-80:   get-uswds-color('green-cool', 80);\n$green-cool-90:   get-uswds-color('green-cool', 90);\n$green-cool-5v:   get-uswds-color('green-cool', 5, 'vivid');\n$green-cool-10v:  get-uswds-color('green-cool', 10, 'vivid');\n$green-cool-20v:  get-uswds-color('green-cool', 20, 'vivid');\n$green-cool-30v:  get-uswds-color('green-cool', 30, 'vivid');\n$green-cool-40v:  get-uswds-color('green-cool', 40, 'vivid');\n$green-cool-50v:  get-uswds-color('green-cool', 50, 'vivid');\n$green-cool-60v:  get-uswds-color('green-cool', 60, 'vivid');\n$green-cool-70v:  get-uswds-color('green-cool', 70, 'vivid');\n$green-cool-80v:  get-uswds-color('green-cool', 80, 'vivid');\n$green-cool-90v:  get-uswds-color('green-cool', 90, 'vivid');\n\n// mint\n$mint:      map-get($uswds-colors, mint);\n$mint-5:    get-uswds-color('mint', 5);\n$mint-10:   get-uswds-color('mint', 10);\n$mint-20:   get-uswds-color('mint', 20);\n$mint-30:   get-uswds-color('mint', 30);\n$mint-40:   get-uswds-color('mint', 40);\n$mint-50:   get-uswds-color('mint', 50);\n$mint-60:   get-uswds-color('mint', 60);\n$mint-70:   get-uswds-color('mint', 70);\n$mint-80:   get-uswds-color('mint', 80);\n$mint-90:   get-uswds-color('mint', 90);\n$mint-5v:   get-uswds-color('mint', 5, 'vivid');\n$mint-5v:   get-uswds-color('mint', 5, 'vivid');\n$mint-10v:  get-uswds-color('mint', 10, 'vivid');\n$mint-20v:  get-uswds-color('mint', 20, 'vivid');\n$mint-30v:  get-uswds-color('mint', 30, 'vivid');\n$mint-40v:  get-uswds-color('mint', 40, 'vivid');\n$mint-50v:  get-uswds-color('mint', 50, 'vivid');\n$mint-60v:  get-uswds-color('mint', 60, 'vivid');\n$mint-70v:  get-uswds-color('mint', 70, 'vivid');\n$mint-80v:  get-uswds-color('mint', 80, 'vivid');\n$mint-90v:  get-uswds-color('mint', 90, 'vivid');\n\n// mint-cool\n$mint-cool:     map-get($uswds-colors, mint-cool);\n$mint-cool-5:   get-uswds-color('mint-cool', 5);\n$mint-cool-10:  get-uswds-color('mint-cool', 10);\n$mint-cool-20:  get-uswds-color('mint-cool', 20);\n$mint-cool-30:  get-uswds-color('mint-cool', 30);\n$mint-cool-40:  get-uswds-color('mint-cool', 40);\n$mint-cool-50:  get-uswds-color('mint-cool', 50);\n$mint-cool-60:  get-uswds-color('mint-cool', 60);\n$mint-cool-70:  get-uswds-color('mint-cool', 70);\n$mint-cool-80:  get-uswds-color('mint-cool', 80);\n$mint-cool-90:  get-uswds-color('mint-cool', 90);\n$mint-cool-5v:  get-uswds-color('mint-cool', 5, 'vivid');\n$mint-cool-10v: get-uswds-color('mint-cool', 10, 'vivid');\n$mint-cool-20v: get-uswds-color('mint-cool', 20, 'vivid');\n$mint-cool-30v: get-uswds-color('mint-cool', 30, 'vivid');\n$mint-cool-40v: get-uswds-color('mint-cool', 40, 'vivid');\n$mint-cool-50v: get-uswds-color('mint-cool', 50, 'vivid');\n$mint-cool-60v: get-uswds-color('mint-cool', 60, 'vivid');\n$mint-cool-70v: get-uswds-color('mint-cool', 70, 'vivid');\n$mint-cool-80v: get-uswds-color('mint-cool', 80, 'vivid');\n$mint-cool-90v: get-uswds-color('mint-cool', 90, 'vivid');\n\n// cyan\n$cyan:      map-get($uswds-colors, cyan);\n$cyan-5:    get-uswds-color('cyan', 5);\n$cyan-10:   get-uswds-color('cyan', 10);\n$cyan-20:   get-uswds-color('cyan', 20);\n$cyan-30:   get-uswds-color('cyan', 30);\n$cyan-40:   get-uswds-color('cyan', 40);\n$cyan-50:   get-uswds-color('cyan', 50);\n$cyan-60:   get-uswds-color('cyan', 60);\n$cyan-70:   get-uswds-color('cyan', 70);\n$cyan-80:   get-uswds-color('cyan', 80);\n$cyan-90:   get-uswds-color('cyan', 90);\n$cyan-5v:   get-uswds-color('cyan', 5, 'vivid');\n$cyan-10v:  get-uswds-color('cyan', 10, 'vivid');\n$cyan-20v:  get-uswds-color('cyan', 20, 'vivid');\n$cyan-30v:  get-uswds-color('cyan', 30, 'vivid');\n$cyan-40v:  get-uswds-color('cyan', 40, 'vivid');\n$cyan-50v:  get-uswds-color('cyan', 50, 'vivid');\n$cyan-60v:  get-uswds-color('cyan', 60, 'vivid');\n$cyan-70v:  get-uswds-color('cyan', 70, 'vivid');\n$cyan-80v:  get-uswds-color('cyan', 80, 'vivid');\n$cyan-90v:  get-uswds-color('cyan', 90, 'vivid');\n\n// blue\n$blue:      map-get($uswds-colors, blue);\n$blue-5:    get-uswds-color('blue', 5);\n$blue-10:   get-uswds-color('blue', 10);\n$blue-20:   get-uswds-color('blue', 20);\n$blue-30:   get-uswds-color('blue', 30);\n$blue-40:   get-uswds-color('blue', 40);\n$blue-50:   get-uswds-color('blue', 50);\n$blue-60:   get-uswds-color('blue', 60);\n$blue-70:   get-uswds-color('blue', 70);\n$blue-80:   get-uswds-color('blue', 80);\n$blue-90:   get-uswds-color('blue', 90);\n$blue-5v:   get-uswds-color('blue', 5, 'vivid');\n$blue-10v:  get-uswds-color('blue', 10, 'vivid');\n$blue-20v:  get-uswds-color('blue', 20, 'vivid');\n$blue-30v:  get-uswds-color('blue', 30, 'vivid');\n$blue-40v:  get-uswds-color('blue', 40, 'vivid');\n$blue-50v:  get-uswds-color('blue', 50, 'vivid');\n$blue-60v:  get-uswds-color('blue', 60, 'vivid');\n$blue-70v:  get-uswds-color('blue', 70, 'vivid');\n$blue-80v:  get-uswds-color('blue', 80, 'vivid');\n$blue-90v:  get-uswds-color('blue', 90, 'vivid');\n\n// blue-warm\n$blue-warm:     map-get($uswds-colors, blue-warm);\n$blue-warm-5:   get-uswds-color('blue-warm', 5);\n$blue-warm-10:  get-uswds-color('blue-warm', 10);\n$blue-warm-20:  get-uswds-color('blue-warm', 20);\n$blue-warm-30:  get-uswds-color('blue-warm', 30);\n$blue-warm-40:  get-uswds-color('blue-warm', 40);\n$blue-warm-50:  get-uswds-color('blue-warm', 50);\n$blue-warm-60:  get-uswds-color('blue-warm', 60);\n$blue-warm-70:  get-uswds-color('blue-warm', 70);\n$blue-warm-80:  get-uswds-color('blue-warm', 80);\n$blue-warm-90:  get-uswds-color('blue-warm', 90);\n$blue-warm-5v:  get-uswds-color('blue-warm', 5, 'vivid');\n$blue-warm-10v: get-uswds-color('blue-warm', 10, 'vivid');\n$blue-warm-20v: get-uswds-color('blue-warm', 20, 'vivid');\n$blue-warm-30v: get-uswds-color('blue-warm', 30, 'vivid');\n$blue-warm-40v: get-uswds-color('blue-warm', 40, 'vivid');\n$blue-warm-50v: get-uswds-color('blue-warm', 50, 'vivid');\n$blue-warm-60v: get-uswds-color('blue-warm', 60, 'vivid');\n$blue-warm-70v: get-uswds-color('blue-warm', 70, 'vivid');\n$blue-warm-80v: get-uswds-color('blue-warm', 80, 'vivid');\n$blue-warm-90v: get-uswds-color('blue-warm', 90, 'vivid');\n\n// indigo-cool\n$indigo-cool:     map-get($uswds-colors, indigo-cool);\n$indigo-cool-5:   get-uswds-color('indigo-cool', 5);\n$indigo-cool-10:  get-uswds-color('indigo-cool', 10);\n$indigo-cool-20:  get-uswds-color('indigo-cool', 20);\n$indigo-cool-30:  get-uswds-color('indigo-cool', 30);\n$indigo-cool-40:  get-uswds-color('indigo-cool', 40);\n$indigo-cool-50:  get-uswds-color('indigo-cool', 50);\n$indigo-cool-60:  get-uswds-color('indigo-cool', 60);\n$indigo-cool-70:  get-uswds-color('indigo-cool', 70);\n$indigo-cool-80:  get-uswds-color('indigo-cool', 80);\n$indigo-cool-90:  get-uswds-color('indigo-cool', 90);\n$indigo-cool-5v:  get-uswds-color('indigo-cool', 5, 'vivid');\n$indigo-cool-10v: get-uswds-color('indigo-cool', 10, 'vivid');\n$indigo-cool-20v: get-uswds-color('indigo-cool', 20, 'vivid');\n$indigo-cool-30v: get-uswds-color('indigo-cool', 30, 'vivid');\n$indigo-cool-40v: get-uswds-color('indigo-cool', 40, 'vivid');\n$indigo-cool-50v: get-uswds-color('indigo-cool', 50, 'vivid');\n$indigo-cool-60v: get-uswds-color('indigo-cool', 60, 'vivid');\n$indigo-cool-70v: get-uswds-color('indigo-cool', 70, 'vivid');\n$indigo-cool-80v: get-uswds-color('indigo-cool', 80, 'vivid');\n$indigo-cool-90v: get-uswds-color('indigo-cool', 90, 'vivid');\n\n// indigo\n$indigo:      map-get($uswds-colors, indigo);\n$indigo-5:    get-uswds-color('indigo', 5);\n$indigo-10:   get-uswds-color('indigo', 10);\n$indigo-20:   get-uswds-color('indigo', 20);\n$indigo-30:   get-uswds-color('indigo', 30);\n$indigo-40:   get-uswds-color('indigo', 40);\n$indigo-50:   get-uswds-color('indigo', 50);\n$indigo-60:   get-uswds-color('indigo', 60);\n$indigo-70:   get-uswds-color('indigo', 70);\n$indigo-80:   get-uswds-color('indigo', 80);\n$indigo-90:   get-uswds-color('indigo', 90);\n$indigo-5v:   get-uswds-color('indigo', 5, 'vivid');\n$indigo-10v:  get-uswds-color('indigo', 10, 'vivid');\n$indigo-20v:  get-uswds-color('indigo', 20, 'vivid');\n$indigo-30v:  get-uswds-color('indigo', 30, 'vivid');\n$indigo-40v:  get-uswds-color('indigo', 40, 'vivid');\n$indigo-50v:  get-uswds-color('indigo', 50, 'vivid');\n$indigo-60v:  get-uswds-color('indigo', 60, 'vivid');\n$indigo-70v:  get-uswds-color('indigo', 70, 'vivid');\n$indigo-80v:  get-uswds-color('indigo', 80, 'vivid');\n$indigo-90v:  get-uswds-color('indigo', 90, 'vivid');\n\n// indigo-warm\n$indigo-warm:     map-get($uswds-colors, indigo-warm);\n$indigo-warm-5:   get-uswds-color('indigo-warm', 5);\n$indigo-warm-10:  get-uswds-color('indigo-warm', 10);\n$indigo-warm-20:  get-uswds-color('indigo-warm', 20);\n$indigo-warm-30:  get-uswds-color('indigo-warm', 30);\n$indigo-warm-40:  get-uswds-color('indigo-warm', 40);\n$indigo-warm-50:  get-uswds-color('indigo-warm', 50);\n$indigo-warm-60:  get-uswds-color('indigo-warm', 60);\n$indigo-warm-70:  get-uswds-color('indigo-warm', 70);\n$indigo-warm-80:  get-uswds-color('indigo-warm', 80);\n$indigo-warm-90:  get-uswds-color('indigo-warm', 90);\n$indigo-warm-5v:  get-uswds-color('indigo-warm', 5, 'vivid');\n$indigo-warm-10v: get-uswds-color('indigo-warm', 10, 'vivid');\n$indigo-warm-20v: get-uswds-color('indigo-warm', 20, 'vivid');\n$indigo-warm-30v: get-uswds-color('indigo-warm', 30, 'vivid');\n$indigo-warm-40v: get-uswds-color('indigo-warm', 40, 'vivid');\n$indigo-warm-50v: get-uswds-color('indigo-warm', 50, 'vivid');\n$indigo-warm-60v: get-uswds-color('indigo-warm', 60, 'vivid');\n$indigo-warm-70v: get-uswds-color('indigo-warm', 70, 'vivid');\n$indigo-warm-80v: get-uswds-color('indigo-warm', 80, 'vivid');\n$indigo-warm-90v: get-uswds-color('indigo-warm', 90, 'vivid');\n\n// violet\n$violet:      map-get($uswds-colors, violet);\n$violet-5:    get-uswds-color('violet', 5);\n$violet-10:   get-uswds-color('violet', 10);\n$violet-20:   get-uswds-color('violet', 20);\n$violet-30:   get-uswds-color('violet', 30);\n$violet-40:   get-uswds-color('violet', 40);\n$violet-50:   get-uswds-color('violet', 50);\n$violet-60:   get-uswds-color('violet', 60);\n$violet-70:   get-uswds-color('violet', 70);\n$violet-80:   get-uswds-color('violet', 80);\n$violet-90:   get-uswds-color('violet', 90);\n$violet-5v:   get-uswds-color('violet', 5, 'vivid');\n$violet-10v:  get-uswds-color('violet', 10, 'vivid');\n$violet-20v:  get-uswds-color('violet', 20, 'vivid');\n$violet-30v:  get-uswds-color('violet', 30, 'vivid');\n$violet-40v:  get-uswds-color('violet', 40, 'vivid');\n$violet-50v:  get-uswds-color('violet', 50, 'vivid');\n$violet-60v:  get-uswds-color('violet', 60, 'vivid');\n$violet-70v:  get-uswds-color('violet', 70, 'vivid');\n$violet-80v:  get-uswds-color('violet', 80, 'vivid');\n$violet-90v:  get-uswds-color('violet', 90, 'vivid');\n\n// violet-warm\n$violet-warm:     map-get($uswds-colors, violet-warm);\n$violet-warm-5 :  get-uswds-color('violet-warm', 5);\n$violet-warm-10:  get-uswds-color('violet-warm', 10);\n$violet-warm-20:  get-uswds-color('violet-warm', 20);\n$violet-warm-30:  get-uswds-color('violet-warm', 30);\n$violet-warm-40:  get-uswds-color('violet-warm', 40);\n$violet-warm-50:  get-uswds-color('violet-warm', 50);\n$violet-warm-60:  get-uswds-color('violet-warm', 60);\n$violet-warm-70:  get-uswds-color('violet-warm', 70);\n$violet-warm-80:  get-uswds-color('violet-warm', 80);\n$violet-warm-90:  get-uswds-color('violet-warm', 90);\n$violet-warm-5v:  get-uswds-color('violet-warm', 5, 'vivid');\n$violet-warm-10v: get-uswds-color('violet-warm', 10, 'vivid');\n$violet-warm-20v: get-uswds-color('violet-warm', 20, 'vivid');\n$violet-warm-30v: get-uswds-color('violet-warm', 30, 'vivid');\n$violet-warm-40v: get-uswds-color('violet-warm', 40, 'vivid');\n$violet-warm-50v: get-uswds-color('violet-warm', 50, 'vivid');\n$violet-warm-60v: get-uswds-color('violet-warm', 60, 'vivid');\n$violet-warm-70v: get-uswds-color('violet-warm', 70, 'vivid');\n$violet-warm-80v: get-uswds-color('violet-warm', 80, 'vivid');\n$violet-warm-90v: get-uswds-color('violet-warm', 90, 'vivid');\n\n// magenta\n$magenta:     map-get($uswds-colors, magenta);\n$magenta-5:   get-uswds-color('magenta', 5);\n$magenta-10:  get-uswds-color('magenta', 10);\n$magenta-20:  get-uswds-color('magenta', 20);\n$magenta-30:  get-uswds-color('magenta', 30);\n$magenta-40:  get-uswds-color('magenta', 40);\n$magenta-50:  get-uswds-color('magenta', 50);\n$magenta-60:  get-uswds-color('magenta', 60);\n$magenta-70:  get-uswds-color('magenta', 70);\n$magenta-80:  get-uswds-color('magenta', 80);\n$magenta-90:  get-uswds-color('magenta', 90);\n$magenta-5v:  get-uswds-color('magenta', 5);\n$magenta-10v: get-uswds-color('magenta', 10, 'vivid');\n$magenta-20v: get-uswds-color('magenta', 20, 'vivid');\n$magenta-30v: get-uswds-color('magenta', 30, 'vivid');\n$magenta-40v: get-uswds-color('magenta', 40, 'vivid');\n$magenta-50v: get-uswds-color('magenta', 50, 'vivid');\n$magenta-60v: get-uswds-color('magenta', 60, 'vivid');\n$magenta-70v: get-uswds-color('magenta', 70, 'vivid');\n$magenta-80v: get-uswds-color('magenta', 80, 'vivid');\n$magenta-90v: get-uswds-color('magenta', 90, 'vivid');\n\n// gray-cool\n$gray-cool:    map-get($uswds-colors, gray-cool);\n$gray-cool-1:  get-uswds-color('gray-cool', 1);\n$gray-cool-2:  get-uswds-color('gray-cool', 2);\n$gray-cool-3:  get-uswds-color('gray-cool', 3);\n$gray-cool-4:  get-uswds-color('gray-cool', 4);\n$gray-cool-5:  get-uswds-color('gray-cool', 5);\n$gray-cool-10: get-uswds-color('gray-cool', 10);\n$gray-cool-20: get-uswds-color('gray-cool', 20);\n$gray-cool-30: get-uswds-color('gray-cool', 30);\n$gray-cool-40: get-uswds-color('gray-cool', 40);\n$gray-cool-50: get-uswds-color('gray-cool', 50);\n$gray-cool-60: get-uswds-color('gray-cool', 60);\n$gray-cool-70: get-uswds-color('gray-cool', 70);\n$gray-cool-80: get-uswds-color('gray-cool', 80);\n$gray-cool-90: get-uswds-color('gray-cool', 90);\n\n// gray\n$gray:     map-get($uswds-colors, gray);\n$gray-1:   get-uswds-color('gray', 1);\n$gray-2:   get-uswds-color('gray', 2);\n$gray-3:   get-uswds-color('gray', 3);\n$gray-4:   get-uswds-color('gray', 4);\n$gray-5:   get-uswds-color('gray', 5);\n$gray-10:  get-uswds-color('gray', 10);\n$gray-20:  get-uswds-color('gray', 20);\n$gray-30:  get-uswds-color('gray', 30);\n$gray-40:  get-uswds-color('gray', 40);\n$gray-50:  get-uswds-color('gray', 50);\n$gray-60:  get-uswds-color('gray', 60);\n$gray-70:  get-uswds-color('gray', 70);\n$gray-80:  get-uswds-color('gray', 80);\n$gray-90:  get-uswds-color('gray', 90);\n$gray-100: get-uswds-color('gray', 100);\n\n// gray-warm\n$gray-warm:    map-get($uswds-colors, gray-warm);\n$gray-warm-1:  get-uswds-color('gray-warm', 1);\n$gray-warm-2:  get-uswds-color('gray-warm', 2);\n$gray-warm-3:  get-uswds-color('gray-warm', 3);\n$gray-warm-4:  get-uswds-color('gray-warm', 4);\n$gray-warm-5:  get-uswds-color('gray-warm', 5);\n$gray-warm-10: get-uswds-color('gray-warm', 10);\n$gray-warm-20: get-uswds-color('gray-warm', 20);\n$gray-warm-30: get-uswds-color('gray-warm', 30);\n$gray-warm-40: get-uswds-color('gray-warm', 40);\n$gray-warm-50: get-uswds-color('gray-warm', 50);\n$gray-warm-60: get-uswds-color('gray-warm', 60);\n$gray-warm-70: get-uswds-color('gray-warm', 70);\n$gray-warm-80: get-uswds-color('gray-warm', 80);\n$gray-warm-90: get-uswds-color('gray-warm', 90);\n\n// black-op\n$black-transparent:     map-get($uswds-colors, black-transparent);\n$black-transparent-5:   get-uswds-color('black-transparent', 5);\n$black-transparent-10:  get-uswds-color('black-transparent', 10);\n$black-transparent-20:  get-uswds-color('black-transparent', 20);\n$black-transparent-30:  get-uswds-color('black-transparent', 30);\n$black-transparent-40:  get-uswds-color('black-transparent', 40);\n$black-transparent-50:  get-uswds-color('black-transparent', 50);\n$black-transparent-60:  get-uswds-color('black-transparent', 60);\n$black-transparent-70:  get-uswds-color('black-transparent', 70);\n$black-transparent-80:  get-uswds-color('black-transparent', 80);\n$black-transparent-90:  get-uswds-color('black-transparent', 90);\n\n// white-op\n$white-transparent:     map-get($uswds-colors, white-transparent);\n$white-transparent-5:   get-uswds-color('white-transparent', 5);\n$white-transparent-10:  get-uswds-color('white-transparent', 10);\n$white-transparent-20:  get-uswds-color('white-transparent', 20);\n$white-transparent-30:  get-uswds-color('white-transparent', 30);\n$white-transparent-40:  get-uswds-color('white-transparent', 40);\n$white-transparent-50:  get-uswds-color('white-transparent', 50);\n$white-transparent-60:  get-uswds-color('white-transparent', 60);\n$white-transparent-70:  get-uswds-color('white-transparent', 70);\n$white-transparent-80:  get-uswds-color('white-transparent', 80);\n$white-transparent-90:  get-uswds-color('white-transparent', 90);\n","// Buttons variables\n\n$button-stroke: inset 0 0 0 2px;\n\n// Buttons\n\n// This mixin is only needed until we fully remove the\n// deprecated usa-button-disabled style.\n@mixin disabledesque {\n  background-color: $color-gray-lighter;\n  pointer-events: none;\n\n  &:hover,\n  &.usa-button-hover,\n  &:active,\n  &.usa-button-active,\n  &:focus,\n  &.usa-focus {\n    background-color: $color-gray-lighter;\n    border: 0;\n    box-shadow: none;\n  }\n}\n\n/* stylelint-disable selector-no-qualifying-type */\n.usa-button,\n.usa-button-primary,\n.usa-button:visited,\n.usa-button-primary:visited {\n// remove all base element styling\n// button,\n// [type=button],\n// [type=submit],\n// [type=reset],\n// [type=image]\n  @include font-smoothing;\n  @include margin(0.5em 0.5em 0.5em null);\n  appearance: none;\n  background-color: $color-primary;\n  border: 0;\n  border-radius: $button-border-radius;\n  color: $color-white;\n  cursor: pointer;\n  display: inline-block;\n  font-family: $font-sans;\n  font-size: $base-font-size;\n  font-weight: $font-bold;\n  line-height: 1;\n  padding: 1rem 2rem;\n  text-align: center;\n  text-decoration: none;\n  width: 100%;\n\n  @include media($small-screen) {\n    width: auto;\n  }\n\n  &:hover,\n  &.usa-button-hover {\n    background-color: $color-primary-darker;\n    border-bottom: 0;\n    color: $color-white;\n    text-decoration: none;\n  }\n\n  &:active,\n  &.usa-button-active {\n    background-color: $color-primary-darkest;\n  }\n\n  &.usa-button-primary-alt {\n    background-color: $color-primary-alt;\n    color: $color-base;\n\n    &:hover,\n    &.usa-button-hover {\n      background-color: $color-primary-alt-dark;\n    }\n\n    &:active,\n    &.usa-button-active {\n      background-color: $color-primary-alt-darkest;\n      color: $color-white;\n    }\n  }\n\n  &.usa-button-secondary {\n    background-color: $color-white;\n    box-shadow: $button-stroke $color-primary;\n    color: $color-primary;\n\n    &:hover,\n    &.usa-button-hover {\n      box-shadow: $button-stroke $color-primary-darker;\n      color: $color-primary-darker;\n    }\n\n    &:active,\n    &.usa-button-active {\n      box-shadow: $button-stroke $color-primary-darkest;\n      color: $color-primary-darkest;\n    }\n  }\n\n  &.usa-button-secondary-inverse,\n  &.usa-button-outline-inverse {    // Outline inverse to be deprecated in 2.0\n    background: transparent;\n    box-shadow: $button-stroke $color-white;\n    color: $color-white;\n\n    &:hover,\n    &.usa-button-hover {\n      box-shadow: $button-stroke $color-gray-lighter;\n      color: $color-gray-lighter;\n    }\n\n    &:active,\n    &.usa-button-active {\n      box-shadow: $button-stroke $color-gray-light;\n      color: $color-gray-lighter;\n    }\n  }\n\n  &.usa-button-gray {\n    background-color: $color-gray;\n\n    &:hover,\n    &.usa-button-hover {\n      background-color: $color-gray-dark;\n    }\n\n    &:active,\n    &.usa-button-active {\n      background-color: $color-base;\n    }\n  }\n\n  &.usa-button-red {\n    background-color: $color-secondary;\n\n    &:hover,\n    &.usa-button-hover {\n      background-color: $color-secondary-dark;\n    }\n\n    &:active,\n    &.usa-button-active {\n      background-color: $color-secondary-darkest;\n    }\n  }\n\n  &.usa-button-big {\n    font-size: 1.9rem;\n    padding: 1.5rem 3rem;\n  }\n\n  &:disabled {\n    @include disabledesque;\n  }\n}\n/* stylelint-disable */\n\n.usa-button-disabled  // Deprecated\n{\n  @include disabledesque\n}\n\n.usa-button-secondary-disabled,          // Deprecated\n.usa-button-secondary-inverse-disabled,  // Deprecated\n.usa-button-secondary:disabled,\n.usa-button-secondary-inverse:disabled,\n.usa-button-outline-inverse:disabled {   // Outline inverse to be deprecated in 2.0\n  box-shadow: $button-stroke $color-gray-lighter;\n  pointer-events: none;\n  color: $color-gray-lighter;\n\n  &:hover,\n  &.usa-button-hover,\n  &:active,\n  &.usa-button-active,\n  &:focus,\n  &.usa-focus {\n    background-color: $color-white;\n    border: 0;\n  }\n}\n\nhtml .usa-button-secondary-disabled,          // Deprecated\n.usa-button-secondary:disabled {\n  background-color: $color-white;\n}\n\nhtml .usa-button-secondary-inverse-disabled,  // Deprecated\n.usa-button-secondary-inverse:disabled {\n  background-color: transparent;\n  color: $color-gray;\n  box-shadow: $button-stroke $color-gray;\n}\n\n@mixin button-unstyled {\n  background-color: transparent;\n  border: 0;\n  border-radius: 0;\n  font-weight: $font-normal;\n  margin: 0;\n  padding: 0;\n  text-align: left;\n  -webkit-font-smoothing: auto;\n\n  &:hover {\n    background-color: transparent;\n  }\n}\n\n.usa-button-unstyled {\n  @include button-unstyled;\n}\n","// Font smoothing mixin\n// Only use for light text on dark background\n// TODO: Remove after adding PostCSS\n@mixin font-smoothing {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n@mixin add-font-smoothing {\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n","@charset \"UTF-8\";\n\n/// Directional-property mixins are shorthands for writing properties like the following\n///\n/// @ignore You can also use `false` instead of `null`.\n///\n/// @param {List} $vals\n///   List of directional values\n///\n/// @example scss - Usage\n///   .element {\n///     @include border-style(dotted null);\n///     @include margin(null 0 10px);\n///   }\n///\n/// @example css - CSS Output\n///   .element {\n///     border-bottom-style: dotted;\n///     border-top-style: dotted;\n///     margin-bottom: 10px;\n///     margin-left: 0;\n///     margin-right: 0;\n///   }\n///\n/// @require {function} contains-falsy\n///\n/// @return {List}\n\n@function collapse-directionals($vals) {\n  $output: null;\n\n  $a: nth($vals, 1);\n  $b: if(length($vals) < 2, $a, nth($vals, 2));\n  $c: if(length($vals) < 3, $a, nth($vals, 3));\n  $d: if(length($vals) < 2, $a, nth($vals, if(length($vals) < 4, 2, 4)));\n\n  @if $a == 0 { $a: 0; }\n  @if $b == 0 { $b: 0; }\n  @if $c == 0 { $c: 0; }\n  @if $d == 0 { $d: 0; }\n\n  @if $a == $b and $a == $c and $a == $d { $output: $a;          }\n  @else if $a == $c and $b == $d         { $output: $a $b;       }\n  @else if $b == $d                      { $output: $a $b $c;    }\n  @else                                  { $output: $a $b $c $d; }\n\n  @return $output;\n}\n\n/// Output directional properties, for instance `margin`.\n///\n/// @access private\n///\n/// @param {String} $pre\n///   Prefix to use\n/// @param {String} $suf\n///   Suffix to use\n/// @param {List} $vals\n///   List of values\n///\n/// @require {function} collapse-directionals\n/// @require {function} contains-falsy\n\n@mixin directional-property($pre, $suf, $vals) {\n  // Property Names\n  $top:    $pre + \"-top\"    + if($suf, \"-#{$suf}\", \"\");\n  $bottom: $pre + \"-bottom\" + if($suf, \"-#{$suf}\", \"\");\n  $left:   $pre + \"-left\"   + if($suf, \"-#{$suf}\", \"\");\n  $right:  $pre + \"-right\"  + if($suf, \"-#{$suf}\", \"\");\n  $all:    $pre +             if($suf, \"-#{$suf}\", \"\");\n\n  $vals: collapse-directionals($vals);\n\n  @if contains-falsy($vals) {\n    @if nth($vals, 1) { #{$top}: nth($vals, 1); }\n\n    @if length($vals) == 1 {\n      @if nth($vals, 1) { #{$right}: nth($vals, 1); }\n    } @else {\n      @if nth($vals, 2) { #{$right}: nth($vals, 2); }\n    }\n\n    @if length($vals) == 2 {\n      @if nth($vals, 1) { #{$bottom}: nth($vals, 1); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 3 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 2) { #{$left}:   nth($vals, 2); }\n    } @else if length($vals) == 4 {\n      @if nth($vals, 3) { #{$bottom}: nth($vals, 3); }\n      @if nth($vals, 4) { #{$left}:   nth($vals, 4); }\n    }\n  } @else {\n    #{$all}: $vals;\n  }\n}\n","// Variables\n\n$accordion-border: 3px solid $color-gray-lightest;\n\n// Accordion Styles\n\n$icon-size: $spacing-md-small;\n$h-padding: $spacing-medium;\n$v-padding: $spacing-md-small;\n\n@mixin accordion-list-styles {\n  @include unstyled-list;\n  color: $color-base;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n}\n\n@mixin accordion-list-item-styles {\n  background-color: $color-gray-lightest;\n  font-family: $font-sans;\n  list-style: none;\n  margin-bottom: $spacing-x-small;\n  width: 100%;\n}\n\n// scss-lint:disable PropertyCount\n@mixin accordion-button-styles {\n  @include button-unstyled;\n  background-color: $color-gray-lightest;\n  background-image: url('#{$theme-image-path}/minus.png');\n  background-image: url('#{$theme-image-path}/minus.svg');\n  background-position: right $h-padding center;\n  background-repeat: no-repeat;\n  background-size: $icon-size;\n  color: $color-base;\n  cursor: pointer;\n  display: inline-block;\n  font-family: $font-sans;\n  font-weight: $font-bold;\n  margin: 0;\n  padding: $v-padding ($h-padding * 2 + $icon-size) $v-padding $h-padding;\n  width: 100%;\n\n  &:hover {\n    background-color: $color-gray-lighter;\n    color: $color-base;\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 0;\n  }\n}\n// scss-lint:enable PropertyCount\n\n@mixin accordion-button-unopened-styles {\n  background-image: url('#{$theme-image-path}/plus.png');\n  background-image: url('#{$theme-image-path}/plus.svg');\n  background-repeat: no-repeat;\n  background-size: $icon-size;\n}\n\n@mixin accordion-nested-list {\n  > ul li ul {\n    list-style: disc;\n    > li > ul {\n      list-style: circle;\n      > li > ul {\n        list-style: square;\n      }\n    }\n  }\n}\n\n.usa-accordion,\n.usa-accordion-bordered {\n  @include accordion-list-styles;\n  @include accordion-nested-list;\n\n  + .usa-accordion,\n  + .usa-accordion-bordered {\n    margin-top: $spacing-small;\n  }\n\n  // TODO deprecated ruleset based on old accordion.\n  > ul {\n    @include accordion-list-styles;\n\n    // TODO deprecated ruleset based on old accordion.\n    > li {\n      @include accordion-list-item-styles;\n    }\n\n    // TODO deprecated ruleset based on old accordion.\n    button {\n      @include accordion-button-styles;\n    }\n\n    // TODO deprecated ruleset based on old accordion.\n    [aria-expanded=false] {\n      @include accordion-button-unopened-styles;\n    }\n  }\n\n  > li {\n    @include accordion-list-item-styles;\n  }\n\n}\n\n.usa-accordion-bordered {\n  .usa-accordion-content {\n    border-bottom: $accordion-border;\n    border-left: $accordion-border;\n    border-right: $accordion-border;\n  }\n}\n\n.usa-accordion-content {\n  background-color: $color-white;\n  overflow: auto;\n  padding: $spacing-md-small $spacing-medium;\n\n  > *:first-child {\n    margin-top: 0;\n  }\n\n  > *:last-child {\n    margin-bottom: 0;\n  }\n\n  &:not([aria-hidden]) {\n    @include sr-only();\n  }\n\n  @include accessibly-hidden();\n}\n\n.usa-accordion-button {\n  @include accordion-button-styles;\n}\n\n.usa-accordion-button[aria-expanded=false] {\n  @include accordion-button-unopened-styles;\n}\n","// Adds margin either l/r(x) or t/b(y)\n\n@mixin margin-n($side, $value...) {\n  @if $side == all {\n    margin: get-uswds-value(margin, $value...);\n  }\n  @elseif $side == x {\n    margin-left: get-uswds-value(margin-horizontal, $value...);\n    margin-right: get-uswds-value(margin-horizontal, $value...);\n  }\n  @elseif $side == y {\n    margin-bottom: get-uswds-value(margin-vertical, $value...);\n    margin-top: get-uswds-value(margin-vertical, $value...);\n  }\n  @elseif $side == t {\n    margin-top: get-uswds-value(margin-vertical, $value...);\n  }\n  @elseif $side == r {\n    margin-right: get-uswds-value(margin-horizontal, $value...);\n  }\n  @elseif $side == b {\n    margin-bottom: get-uswds-value(margin-vertical, $value...);\n  }\n  @elseif $side == l {\n    margin-left: get-uswds-value(margin-horizontal, $value...);\n  }\n}\n\n@mixin u-margin($value...) {\n  @include margin-n(all, $value...);\n}\n\n@mixin u-margin-x($value...) {\n  @include margin-n(x, $value...);\n}\n\n@mixin u-margin-y($value...) {\n  @include margin-n(y, $value...);\n}\n\n@mixin u-margin-top($value...) {\n  @include margin-n(t, $value...);\n}\n\n@mixin u-margin-right($value...) {\n  @include margin-n(r, $value...);\n}\n\n@mixin u-margin-bottom($value...) {\n  @include margin-n(b, $value...);\n}\n\n@mixin u-margin-left($value...) {\n  @include margin-n(l, $value...);\n}\n","/*\n----------------------------------------\nUSWDS Properties\n----------------------------------------\n*/\n\n$standard-colors: map-collect(\n  $color-palette-theme,\n  $color-palette-state,\n  $uswds-required-colors\n);\n\n$extended-colors: map-collect(\n  $uswds-colors,\n  $uswds-basic-colors\n);\n\n$partial-values: (\n  zero-zero: (\n    0: 0,\n  ),\n  none: (\n    'none': none,\n  ),\n  auto: (\n    'auto': auto,\n  ),\n  full-percent: (\n    'full': 100%,\n  ),\n  full-viewport-height: (\n    'viewport': 100vh,\n  ),\n  full-viewport-width: (\n    'viewport': 100vw,\n  ),\n);\n\n$uswds-properties: (\n  align-items: (\n    standard: (\n      'align-start':    start,\n      'align-end':      end,\n      'align-center':   center,\n      'align-stretch':  stretch,\n    ),\n    extended: (),\n  ),\n  background-color: (\n    standard: $standard-colors,\n    extended: $extended-colors,\n  ),\n  border: (\n    standard: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($uswds-spacing, small),\n      map-get($partial-values, zero-zero)\n    ),\n    extended: (),\n  ),\n  border-color: (\n    standard: $standard-colors,\n    extended: $extended-colors,\n  ),\n  border-radius: (\n    standard: $project-border-radius,\n    extended: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($uswds-spacing, small)\n    ),\n  ),\n  border-style: (\n    standard: (\n      'dashed': dashed,\n      'dotted': dotted,\n      'solid':  solid,\n    ),\n    extended: (),\n  ),\n  border-width: (\n    standard: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($uswds-spacing, small),\n      map-get($partial-values, zero-zero)\n    ),\n    extended: (),\n  ),\n  bottom: (\n    standard: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, smaller-negative),\n      map-get($uswds-spacing, small-negative),\n      map-get($partial-values, zero-zero),\n      map-get($partial-values, auto),\n      map-get($partial-values, full-percent)\n    ),\n    extended: (),\n  ),\n  box-shadow: (\n    standard: (\n      'none':   none,\n      1:     '0 1px 2px 0 rgba(0, 0, 0, 0.1)',\n      2:     '0 4px 8px 0 rgba(0, 0, 0, 0.1)',\n      3:     '0 6px 12px 0 rgba(0, 0, 0, 0.1)',\n      4:     '0 8px 16px 0 rgba(0, 0, 0, 0.1)',\n      5:     '0 10px 20px 0 rgba(0, 0, 0, 0.1)',\n    ),\n    extended: (),\n  ),\n  breakpoints: (\n    standard: map-collect(\n      map-get($uswds-spacing, large),\n      map-get($uswds-spacing, larger),\n      map-get($uswds-spacing, largest)\n    ),\n    extended: (),\n  ),\n  circle: (\n    standard: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, medium),\n      map-get($uswds-spacing, large)\n    ),\n    extended: (),\n  ),\n  color: (\n    standard: $standard-colors,\n    extended: $extended-colors,\n  ),\n  cursor: (\n    standard: (\n      'auto':         auto,\n      'default':      default,\n      'pointer':      pointer,\n      'wait':         wait,\n      'move':         move,\n      'not-allowed':  not-allowed,\n    ),\n    extended: (),\n  ),\n  display: (\n    standard: (\n      'block':        block,\n      'flex':         flex,\n      'none':         none,\n      'inline':       inline,\n      'inline-block': inline-block,\n      'inline-flex':  inline-flex,\n      'table':        table,\n      'table-cell':   table-cell,\n      'table-row':    table-row,\n    ),\n    extended: (),\n  ),\n  flex: (\n    standard: (\n      1:    1 0 0,\n      2:    2 0 0,\n      3:    3 0 0,\n      4:    4 0 0,\n      5:    5 0 0,\n      6:    6 0 0,\n      7:    7 0 0,\n      8:    8 0 0,\n      9:    9 0 0,\n      10:   10 0 0,\n      11:   11 0 0,\n      12:   12 0 0,\n      'fill': 1 0 0,\n      'auto': 0 0 auto,\n    ),\n    extended: (),\n  ),\n  flex-direction: (\n    standard: (\n      'row':    row,\n      'column': column,\n    ),\n    extended: (),\n  ),\n  flex-wrap: (\n    standard: (\n      'wrap':   wrap,\n      'no-wrap': nowrap,\n    ),\n    extended: (),\n  ),\n  float: (\n    standard: (\n      'left':  left,\n      'none':  none,\n      'right': right,\n    ),\n    extended: (),\n  ),\n  font-family: (\n    standard: $project-font-stacks,\n    extended: (),\n  ),\n  font-feature-settings: (\n    standard: (\n      'tabular': unquote('\"tnum\" 1, \"kern\" 1'),\n      'no-tabular': unquote('\"kern\" 1'),\n    ),\n    extended: (),\n  ),\n  font-style: (\n    standard: (\n      'italic': italic,\n      'no-italic': normal,\n    ),\n    extended: (),\n  ),\n  font-weight: (\n    standard: (\n      'thin': $theme-font-weight-thin,\n      'light': $theme-font-weight-light,\n      'normal': normal,\n      'medium': $theme-font-weight-medium,\n      'semibold': $theme-font-weight-semibold,\n      'bold': bold,\n      'heavy': $theme-font-weight-heavy,\n    ),\n    extended: (\n      100: 100,\n      200: 200,\n      300: 300,\n      400: 400,\n      500: 500,\n      600: 600,\n      700: 700,\n      800: 800,\n      900: 900,\n    ),\n  ),\n  gap: (\n    standard: map-collect(\n      $uswds-column-gaps,\n      (\n        'sm': $theme-column-gap-small,\n        'lg': $theme-column-gap-large,\n      )\n    ),\n    extended: (),\n  ),\n  height: (\n    standard: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, medium),\n      map-get($uswds-spacing, large),\n      map-get($partial-values, zero-zero),\n      map-get($partial-values, auto),\n      map-get($partial-values, full-percent),\n      map-get($partial-values, full-viewport-height)\n    ),\n    extended: (),\n  ),\n  justify-content: (\n    standard: (\n      'justify-center': center,\n      'justify-start':  flex-start,\n      'justify-end':    flex-end,\n      'justify':        space-between,\n    ),\n    extended: (),\n  ),\n  left: (\n    standard: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, smaller-negative),\n      map-get($uswds-spacing, small-negative),\n      map-get($partial-values, zero-zero),\n      map-get($partial-values, auto)\n    ),\n    extended: (),\n  ),\n  letter-spacing: (\n    standard: (\n      'ls-auto':\t  initial,\n      'ls-neg-3':\t  -.03em,\n      'ls-neg-2':\t  -.02em,\n      'ls-neg-1':\t  -.01em,\n      'ls-1':\t      .05em,\n      'ls-2':\t      .1em,\n      'ls-3':\t      .15em,\n    ),\n    extended: (),\n  ),\n  line-height: (\n    standard: (\n      'sans-1':\t   lh(sans, 1),\n      'sans-2':\t   lh(sans, 2),\n      'sans-3':\t   lh(sans, 3),\n      'sans-4':\t   lh(sans, 4),\n      'sans-5':\t   lh(sans, 5),\n      'sans-6':\t   lh(sans, 6),\n      'serif-1':\t lh(serif, 1),\n      'serif-2':\t lh(serif, 2),\n      'serif-3':\t lh(serif, 3),\n      'serif-4':\t lh(serif, 4),\n      'serif-5':\t lh(serif, 5),\n      'serif-6':\t lh(serif, 6),\n      'mono-1':\t   lh(mono, 1),\n      'mono-2':\t   lh(mono, 2),\n      'mono-3':\t   lh(mono, 3),\n      'mono-4':\t   lh(mono, 4),\n      'mono-5':\t   lh(mono, 5),\n      'mono-6':\t   lh(mono, 6),\n    ),\n    extended: (\n      1:\t       1,\n      2:\t       1.1,\n      3:\t       1.35,\n      4:\t       1.5,\n      5:\t       1.62,\n      6:\t       1.75,\n    ),\n  ),\n  margin: (\n    standard: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, medium),\n      map-get($uswds-spacing-em, small),\n      map-get($partial-values, zero-zero)\n    ),\n    extended: (),\n  ),\n  margin-horizontal: (\n    standard: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, smaller-negative),\n      map-get($uswds-spacing, small-negative),\n      map-get($uswds-spacing, medium),\n      map-get($uswds-spacing-em, small),\n      map-get($partial-values, zero-zero),\n      map-get($partial-values, auto)\n    ),\n    extended: (),\n  ),\n  margin-vertical: (\n    standard: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, smaller-negative),\n      map-get($uswds-spacing, small-negative),\n      map-get($uswds-spacing, medium),\n      map-get($uswds-spacing-em, small),\n      map-get($partial-values, zero-zero)\n    ),\n    extended: (),\n  ),\n  max-height: (\n    standard: map-collect(\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, medium),\n      map-get($uswds-spacing, large),\n      map-get($uswds-spacing, larger),\n      map-get($partial-values, none),\n      map-get($partial-values, full-viewport-height)\n    ),\n    extended: (),\n  ),\n  max-width: (\n    standard: map-collect(\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, medium),\n      map-get($uswds-spacing, large),\n      map-get($uswds-spacing, larger),\n      map-get($uswds-spacing, largest),\n      (\n        'full':            100%,\n        none:              none,\n      )\n    ),\n    extended: (),\n  ),\n  measure: (\n    standard: (\n      1:\t    $uswds-measure-smaller,\n      2:\t    $uswds-measure-small,\n      3:\t    $uswds-measure-base,\n      4:\t    $uswds-measure-large,\n      5:\t    $uswds-measure-larger,\n      'none':   none,\n    ),\n    extended: (),\n  ),\n  min-height: (\n    standard: map-collect(\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, medium),\n      map-get($uswds-spacing, large),\n      map-get($uswds-spacing, larger),\n      map-get($partial-values, zero-zero),\n      map-get($partial-values, none),\n      map-get($partial-values, full-percent),\n      map-get($partial-values, full-viewport-height)\n    ),\n    extended: (),\n  ),\n  min-width: (\n    standard: map-collect(\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, medium),\n      map-get($partial-values, none)\n    ),\n    extended: (),\n  ),\n  opacity: (\n    standard: (\n      0:  0,\n      10: 0.1,\n      20: 0.2,\n      30: 0.3,\n      40: 0.4,\n      50: 0.5,\n      60: 0.6,\n      70: 0.7,\n      80: 0.8,\n      90: 0.9,\n      100:  1,\n    ),\n    extended: (),\n  ),\n  order: (\n    standard: (\n      'first':\t-1,\n      'last':\t  999,\n      'initial': initial,\n      0:      0,\n      1:      1,\n      2:      2,\n      3:      3,\n      4:      4,\n      5:      5,\n      6:      6,\n      7:      7,\n      8:      8,\n      9:      9,\n      10:     10,\n      11:     11,\n    ),\n    extended: (),\n  ),\n  outline: (\n    standard: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($partial-values, zero-zero),\n      map-get($partial-values, none),\n      ('05': grid-units(0.5))\n    ),\n    extended: (),\n  ),\n  outline-color: (\n    standard: map-collect(\n      $uswds-required-colors\n    ),\n    extended: $extended-colors,\n  ),\n  overflow: (\n    standard: (\n      'hidden':  hidden,\n      'scroll':  scroll,\n      'auto':    auto,\n      'visible': visible,\n    ),\n    extended: (),\n  ),\n  padding: (\n    standard: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, medium),\n      map-get($partial-values, zero-zero)\n    ),\n    extended: (),\n  ),\n  position: (\n    standard: (\n      'absolute': absolute,\n      'fixed':    fixed,\n      'relative': relative,\n      'static':   static,\n      'sticky':   sticky,\n    ),\n    extended: (),\n  ),\n  right: (\n    standard: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, smaller-negative),\n      map-get($uswds-spacing, small-negative),\n      map-get($partial-values, zero-zero),\n      map-get($partial-values, auto)\n    ),\n    extended: (),\n  ),\n  square: (\n    standard: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, medium),\n      map-get($uswds-spacing, large)\n    ),\n    extended: (),\n  ),\n  text-align: (\n    standard: (\n      'center':  center,\n      'left':    left,\n      'justify': justify,\n      'right':   right,\n    ),\n    extended: (),\n  ),\n  text-decoration: (\n    standard: (\n      'strike':       line-through,\n      'underline':    underline,\n      'no-underline': none,\n      'no-strike':    none,\n    ),\n    extended: (),\n  ),\n  text-decoration-color: (\n    standard: map-collect(\n      $standard-colors,\n      map-get($partial-values, auto)\n    ),\n    extended: $extended-colors,\n  ),\n  text-indent: (\n    standard: map-collect(\n      map-get($partial-values, zero-zero),\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, small-negative),\n      map-get($uswds-spacing, medium),\n      map-get($uswds-spacing, medium-negative)\n    ),\n    extended: (),\n  ),\n  text-transform: (\n    standard: (\n      'uppercase':    uppercase,\n      'no-uppercase': none,\n      'lowercase':    lowercase,\n      'no-lowercase': none,\n    ),\n    extended: (),\n  ),\n  top: (\n    standard: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, smaller-negative),\n      map-get($uswds-spacing, small-negative),\n      map-get($partial-values, zero-zero),\n      map-get($partial-values, auto)\n    ),\n    extended: (),\n  ),\n  vertical-align: (\n    standard: (\n      'baseline':    baseline,\n      'bottom':      bottom,\n      'middle':      middle,\n      'sub':         sub,\n      'super':       super,\n      'tbottom': text-bottom,\n      'ttop':    text-top,\n      'top':         top,\n    ),\n    extended: (),\n  ),\n  white-space: (\n    standard: (\n      'pre':      pre,\n      'pre-line': pre-line,\n      'pre-wrap': pre-wrap,\n      'wrap':     normal,\n      'no-wrap':  nowrap,\n    ),\n    extended: (),\n  ),\n  width: (\n    standard: map-collect(\n      map-get($uswds-spacing, smaller),\n      map-get($uswds-spacing, small),\n      map-get($uswds-spacing, medium),\n      map-get($uswds-spacing, large),\n      map-get($uswds-spacing, larger),\n      map-get($uswds-spacing, largest),\n      map-get($partial-values, zero-zero),\n      map-get($partial-values, full-percent),\n      map-get($partial-values, auto)\n    ),\n    extended: (),\n  ),\n  z-index: (\n    standard: (\n      'auto':    auto,\n      'bottom':  -100,\n      'top':     99999,\n      0:         0,\n      100:\t     100,\n      200:\t     200,\n      300:       300,\n      400:\t     400,\n      500:\t     500,\n    ),\n    extended: (),\n  ),\n);\n","// Unstyled list helper\n@mixin unstyled-list() {\n  @include u-margin-y(0);\n  list-style-type: none;\n  padding-left: 0;\n\n  > li {\n    margin-bottom: 0;\n  }\n}\n",".usa-banner {\n  background-color: $color-gray-lightest;\n  padding-bottom: px(7px);\n\n  @include media($small-screen) {\n    font-size: $h6-font-size;\n    padding-bottom: 0;\n  }\n}\n\n.usa-banner-content {\n  @include padding(null $site-margins-mobile 3px $site-margins-mobile);\n  background-color: transparent;\n  font-size: $h5-font-size;\n  padding-top: px(20px);\n  width: 100%;\n\n  @include media($medium-screen) {\n    padding-bottom: px(23px);\n    padding-top: px(40px);\n  }\n\n  @include media($nav-width) {\n    @include padding(null $site-margins);\n  }\n\n  p {\n    &:first-child {\n      margin-top: px(10px);\n\n      @include media($medium-screen) {\n        margin-top: 0;\n      }\n    }\n  }\n}\n\n.usa-banner-inner {\n  @include outer-container();\n  @include padding(null $site-margins-mobile);\n  max-width: $site-max-width;\n\n  @include media($nav-width) {\n    @include padding(null $site-margins);\n  }\n}\n\n.usa-banner-header {\n  @include padding(px(5.5px) null);\n  font-size: px(12px);\n  font-weight: $font-normal;\n\n  @include media($small-screen) {\n    @include padding(0 null);\n  }\n\n  p {\n    @include margin(0 null);\n    display: inline;\n    overflow: hidden;\n    vertical-align: middle;\n\n    @include media($small-screen) {\n      @include margin(2px null);\n      display: inline-block;\n    }\n  }\n\n  img {\n    float: left;\n    margin-right: px(10px);\n    margin-top: px(10px);\n    width: px(24px);\n\n    @include media($small-screen) {\n      margin-right: px(7px);\n      width: px(20px);\n    }\n  }\n}\n\n.usa-banner-header-expanded {\n  align-items: center;\n  border-bottom: 1px solid $color-gray-light;\n  display: flex;\n  font-size: $h5-font-size;\n  min-height: px(56px);\n  padding-right: px(30px);\n\n  @include media($small-screen) {\n    border-bottom: none;\n    display: block;\n    font-size: px(12px);\n    font-weight: $font-normal;\n    min-height: 0;\n    padding-right: 0;\n  }\n\n  > .usa-banner-inner {\n    margin-left: 0;\n\n    @include media($small-screen) {\n      margin-left: auto;\n    }\n  }\n\n  img {\n    margin-right: px(24px);\n\n    @include media($small-screen) {\n      margin-right: px(7px);\n    }\n  }\n\n  p {\n    line-height: $heading-line-height;\n    vertical-align: top;\n\n    @include media($small-screen) {\n      line-height: $base-line-height;\n      vertical-align: middle;\n    }\n  }\n}\n\n.usa-banner-button {\n  @include button-unstyled;\n  @include padding(px(13px) null null px(48px));\n  background-position-x: right;\n  color: $color-primary;\n  display: block;\n  font-size: px(12px);\n  height: px(43px);\n  left: 0;\n  position: absolute;\n  text-decoration: underline;\n  top: 0;\n  width: 100%;\n\n  @include media($small-screen) {\n    @include padding(0 null null 0);\n    /* stylelint-disable declaration-block-no-ignored-properties */\n    display: inline;\n    height: initial;\n    margin-left: 3px;\n    position: relative;\n    vertical-align: middle;\n    width: initial;\n    /* stylelint-enable */\n  }\n\n  &:hover {\n    color: $color-primary-darker;\n    text-decoration: underline;\n  }\n\n  &[aria-expanded=false] {\n    @include display-icon(angle-arrow-down-primary, after, px(10px), 0, hover);\n    background-image: none;\n\n    &::after {\n      background-position-y: 1px;\n    }\n  }\n\n  &[aria-expanded=true] {\n    @include display-icon(close, after, px(13px), 0, no-hover);\n    background-image: none;\n    height: px(56px);\n\n    @include media($small-screen) {\n      @include display-icon(angle-arrow-up-primary, after, px(10px), 0, hover);\n      height: initial;\n      padding: 0;\n      position: relative;\n\n      &::after {\n        background-position-y: 1px;\n      }\n    }\n\n    &::after {\n      position: absolute;\n      right: px(15px);\n      top: px(21.5px);\n\n      @include media($small-screen) {\n        position: static;\n      }\n    }\n\n    .usa-banner-button-text {\n      display: none;\n\n      @include media($small-screen) {\n        display: inline;\n      }\n    }\n  }\n}\n\n.usa-banner-icon {\n  width: px(38px);\n}\n","@charset \"UTF-8\";\n\n/// Sets the relative width of a single grid column. The unit used should be the same one used to define `$gutter`. Set with a `!global` flag.\n///\n/// @type Number (Unit)\n\n$column: 4.2358em !default;\n\n/// Sets the relative width of a single grid gutter. The unit used should be the same one used to define `$column`. Set with the `!global` flag.\n///\n/// @type Number (Unit)\n\n$gutter: 1.618em !default;\n\n/// Sets the total number of columns in the grid. Its value can be overridden inside a media query using the `media()` mixin. Set with the `!global` flag.\n///\n/// @type Number (Unitless)\n\n$grid-columns: 12 !default;\n\n/// Sets the max-width property of the element that includes `outer-container()`. Set with the `!global` flag.\n///\n/// @type Number (Unit)\n///\n$max-width: 1200px !default;\n\n/// When set to true, it sets the box-sizing property of all elements to `border-box`. Set with a `!global` flag.\n///\n/// @type Bool\n///\n/// @example css - CSS Output\n///   html {\n///     box-sizing: border-box; }\n///\n///   *, *::after, *::before {\n///     box-sizing: inherit;\n///   }\n\n$border-box-sizing: true !default;\n\n/// Sets the default [media feature](http://www.w3.org/TR/css3-mediaqueries/#media) that `media()` and `new-breakpoint()` revert to when only a breakpoint value is passed. Set with a `!global` flag.\n///\n/// @type String\n\n$default-feature: min-width; // Default @media feature for the breakpoint() mixin\n\n///Sets the default layout direction of the grid. Can be `LTR` or `RTL`. Set with a `!global` flag.\n///\n///@type String\n\n$default-layout-direction: LTR !default;\n","@mixin display-icon($icon, $direction, $size, $margin, $hover) {\n  &::#{$direction} {\n    background-image: url('#{$theme-image-path}/#{$icon}.png');\n    background-image: url('#{$theme-image-path}/#{$icon}.svg');\n    background-size: 100%;\n    content: '';\n    display: inline-block;\n    height: $size;\n    width: $size;\n\n    /* stylelint-disable block-closing-brace-newline-after, at-rule-empty-line-before */\n    @if $direction == 'after' {\n      margin-left: $margin;\n    } @else {\n      margin-right: $margin;\n    }\n    /* stylelint-enable */\n  }\n\n  @if $hover == 'hover' {\n    &:hover::#{$direction} {\n      background-image: url('#{$theme-image-path}/#{$icon}-hover.png');\n      background-image: url('#{$theme-image-path}/#{$icon}-hover.svg');\n    }\n  }\n}\n\n@mixin add-icon($icon, $direction, $size, $margin, $hover) {\n  &::#{$direction} {\n    background-image: url('#{$theme-image-path}/#{$icon}.png');\n    background-image: url('#{$theme-image-path}/#{$icon}.svg');\n    background-size: 100%;\n    content: '';\n    display: inline-block;\n    height: $size;\n    width: $size;\n\n    /* stylelint-disable block-closing-brace-newline-after, at-rule-empty-line-before */\n    @if $direction == 'after' {\n      margin-left: $margin;\n    } @else {\n      margin-right: $margin;\n    }\n    /* stylelint-enable */\n  }\n\n  @if $hover == 'hover' {\n    &:hover::#{$direction} {\n      background-image: url('#{$theme-image-path}/#{$icon}-hover.png');\n      background-image: url('#{$theme-image-path}/#{$icon}-hover.svg');\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// Outputs a media-query block with an optional grid context (the total number of columns used in the grid).\n///\n/// @param {List} $query\n///   A list of media query features and values, where each `$feature` should have a corresponding `$value`.\n///   For a list of valid values for `$feature`, click [here](http://www.w3.org/TR/css3-mediaqueries/#media1).\n///\n///   If there is only a single `$value` in `$query`, `$default-feature` is going to be used.\n///\n///   The number of total columns in the grid can be set by passing `$columns` at the end of the list (overrides `$total-columns`).\n///\n///\n/// @param {Number (unitless)} $total-columns [$grid-columns]\n///   - Number of columns to use in the new grid context. Can be set as a shorthand in the first parameter.\n///\n/// @example scss - Usage\n///   .responsive-element {\n///      @include media(769px) {\n///        @include span-columns(6);\n///      }\n///   }\n///\n///  .new-context-element {\n///    @include media(min-width 320px max-width 480px, 6) {\n///      @include span-columns(6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///  @media screen and (min-width: 769px) {\n///    .responsive-element {\n///      display: block;\n///      float: left;\n///      margin-right: 2.35765%;\n///      width: 48.82117%;\n///    }\n///\n///    .responsive-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n///\n///  @media screen and (min-width: 320px) and (max-width: 480px) {\n///    .new-context-element {\n///      display: block;\n///      float: left;\n///      margin-right: 4.82916%;\n///      width: 100%;\n///    }\n///\n///    .new-context-element:last-child {\n///      margin-right: 0;\n///    }\n///  }\n\n@mixin media($query: $feature $value $columns, $total-columns: $grid-columns) {\n  @if length($query) == 1 {\n    @media screen and ($default-feature: nth($query, 1)) {\n      $default-grid-columns: $grid-columns;\n      $grid-columns: $total-columns !global;\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  } @else {\n    $loop-to: length($query);\n    $media-query: \"screen and \";\n    $default-grid-columns: $grid-columns;\n    $grid-columns: $total-columns !global;\n\n    @if is-not(is-even(length($query))) {\n      $grid-columns: nth($query, $loop-to) !global;\n      $loop-to: $loop-to - 1;\n    }\n\n    $i: 1;\n    @while $i <= $loop-to {\n      $media-query: $media-query + \"(\" + nth($query, $i) + \": \" + nth($query, $i + 1) + \") \";\n\n      @if ($i + 1) != $loop-to {\n        $media-query: $media-query + \"and \";\n      }\n\n      $i: $i + 2;\n    }\n\n    @media #{$media-query} {\n      @content;\n      $grid-columns: $default-grid-columns !global;\n    }\n  }\n}\n","@charset \"UTF-8\";\n\n/// Specifies the number of columns an element should span. If the selector is nested the number of columns of its parent element should be passed as an argument as well.\n///\n/// @param {List} $span\n///   A list containing `$columns`, the unitless number of columns the element spans (required), and `$container-columns`, the number of columns the parent element spans (optional).\n///\n///   If only one value is passed, it is assumed that it's `$columns` and that that `$container-columns` is equal to `$grid-columns`, the total number of columns in the grid.\n///\n///   The values can be separated with any string such as `of`, `/`, etc.\n///\n///   `$columns` also accepts decimals for when it's necessary to break out of the standard grid. E.g. Passing `2.4` in a standard 12 column grid will divide the row into 5 columns.\n///\n/// @param {String} $display [block]\n///   Sets the display property of the element. By default it sets the display property of the element to `block`.\n///\n///   If passed `block-collapse`, it also removes the margin gutter by adding it to the element width.\n///\n///   If passed `table`, it sets the display property to `table-cell` and calculates the width of the element without taking gutters into consideration. The result does not align with the block-based grid.\n///\n/// @example scss - Usage\n///   .element {\n///     @include span-columns(6);\n///\n///    .nested-element {\n///      @include span-columns(2 of 6);\n///    }\n///  }\n///\n/// @example css - CSS Output\n///   .element {\n///     display: block;\n///     float: left;\n///     margin-right: 2.35765%;\n///     width: 48.82117%;\n///   }\n///\n///   .element:last-child {\n///     margin-right: 0;\n///   }\n///\n///   .element .nested-element {\n///     display: block;\n///     float: left;\n///     margin-right: 4.82916%;\n///     width: 30.11389%;\n///   }\n///\n///   .element .nested-element:last-child {\n///     margin-right: 0;\n///   }\n\n@mixin span-columns($span: $columns of $container-columns, $display: block) {\n  $columns: nth($span, 1);\n  $container-columns: container-span($span);\n\n  $parent-columns: get-parent-columns($container-columns) !global;\n\n  $direction: get-direction($layout-direction, $default-layout-direction);\n  $opposite-direction: get-opposite-direction($direction);\n\n  $display-table: is-display-table($container-display-table, $display);\n\n  @if $display-table  {\n    display: table-cell;\n    width: percentage($columns / $container-columns);\n  } @else {\n    float: #{$opposite-direction};\n\n    @if $display != no-display {\n      display: block;\n    }\n\n    @if $display == collapse {\n      @include -neat-warn(\"The 'collapse' argument will be deprecated. Use 'block-collapse' instead.\");\n    }\n\n    @if $display == collapse or $display == block-collapse {\n      width: flex-grid($columns, $container-columns) + flex-gutter($container-columns);\n\n      &:last-child {\n        width: flex-grid($columns, $container-columns);\n      }\n\n    } @else {\n      margin-#{$direction}: flex-gutter($container-columns);\n      width: flex-grid($columns, $container-columns);\n\n      &:last-child {\n        margin-#{$direction}: 0;\n      }\n    }\n  }\n}\n","$parent-columns: $grid-columns !default;\n$fg-column: $column;\n$fg-gutter: $gutter;\n$fg-max-columns: $grid-columns;\n$container-display-table: false !default;\n$layout-direction: LTR !default;\n\n@function flex-grid($columns, $container-columns: $fg-max-columns) {\n  $width: $columns * $fg-column + ($columns - 1) * $fg-gutter;\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($width / $container-width);\n}\n\n@function flex-gutter($container-columns: $fg-max-columns, $gutter: $fg-gutter) {\n  $container-width: $container-columns * $fg-column + ($container-columns - 1) * $fg-gutter;\n  @return percentage($gutter / $container-width);\n}\n\n@function grid-width($n) {\n  @return $n * $gw-column + ($n - 1) * $gw-gutter;\n}\n\n@function get-parent-columns($columns) {\n  @if $columns != $grid-columns {\n    $parent-columns: $columns !global;\n  } @else {\n    $parent-columns: $grid-columns !global;\n  }\n\n  @return $parent-columns;\n}\n\n@function is-display-table($container-is-display-table, $display) {\n  @return $container-is-display-table == true or $display == table;\n}\n"]}